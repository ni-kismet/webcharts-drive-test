{"version":3,"sources":["jqxelement.js"],"names":["LocalizationModule","babelHelpers","classCallCheck","this","createClass","key","value","messageKey","messages","that","Object","assign","messageArguments","language","message","defaultMessage","messageName","messageValue","replace","RegExp","localizeFormatFunction","get","en","type","inherit","reflectToAttribute","undefined","ErrorModule","_logger","level","error","debugMode","errorMessage","Error","toString","console","rethrowError","BindingModule","node","index","map","boundData","HTMLElement","parseAttributes","boundProperty","parseProperty","data","parentNode","ownerElement","$","content","html","innerHTML","textContent","firstChild","children","child","nextSibling","getBindings","htmlElement","boundProperties","i","attributes","length","attribute","attributeName","name","attributeValue","cache","Utilities","Core","toCamelCase","propertyName","indexOf","eventName","substring","templateListeners","getAttribute","removeAttribute","text","startIndex","lastIndex","endIndex","twoWay","twoWayStart","terminator","pathString","slice","trim","updateToken","isNativeElement","toDash","_attributeName","getAttributeValue","setAttributeValue","eventIndex","listen","boundPropertyName","updateBoundProperty","window","JQX","BaseElement","_attributeName2","_propertyName","_properties","notify","event","detail","elementProperty","ready","updateTextNode","shadowRoot","bindings","element","updating","propertyConfig","updateBoundNode","defaultValue","oldValue","isUpdating","_attributeName3","_oldValue","_attributeName4","Types","constructor","call","apply","Array","isArray","typeof","isFunction","Date","types","find","toLowerCase","g","toUpperCase","split","join","entityMap","&","<",">","\"","'","/","`","=","String","s","CSS","supports","target","source","_this","isObject","item","output","keys","forEach","defineProperty","htmlString","nodes","childNodes","l","miscElements","tagName","attr","attrs","nodeOutput","j","escapeHTML","test","navigator","userAgent","styleObservedElements","StyleObserver","push","interval","clearInterval","setInterval","observe","computedStyle","document","defaultView","getComputedStyle","canRaiseResize","styleProperties","_styleInfo","isHidden","visibilityChangedHandler","changedStyleProperties","_i","_styleProperty","fireEvent","bubbles","cancelable","styleProperty","observeElement","splice","inputEventTypes","InputEvents","$target","_Extend","$document","id","result","handlers","boundEventTypes","bind","unlisten","tapHoldDelay","swipeMin","swipeMax","swipeDelay","inputEventProperties","eventType","handler","moveEvent","createEvent","resizeTrigger","container","createElement","className","appendChild","expand","expandChild","shrink","reset","style","width","height","scrollLeft","scrollTop","dirty","requestAnimationFrameId","newWidth","newHeight","lastWidth","offsetWidth","lastHeight","offsetHeight","resizeHandler","requestAnimationFrame","requiresLayout","resizeEvent","CustomEvent","resize","addEventListener","isListening","isPressed","isReleased","isInBounds","PointerEvent","pointerDown","pointerUp","pointerMove","pointerCancel","touchMove","touchStart","touchEnd","touchCancel","mouseDown","mouseUp","mouseMove","mouseLeave","handleDocumentUp","removeEventListener","removeChild","resetSwipe","touches","changedTouches","touch","customEvent","originalEvent","_key","clearTimeout","tapHoldTimeout","tapHoldFired","tap","setTimeout","taphold","handleDown","touchStartTime","isTouchMoved","touchEndTime","handleUp","down","initTap","initSwipe","up","fireTap","eventResult","move","_maxSwipeVerticalDistance","Math","max","abs","_startY","pageY","_maxSwipeHorizontalDistance","_startX","pageX","handleSwipeEvents","handleMove","handleVerticalSwipeEvents","handleHorizontalSwipeEvents","current","diff","swiped","direction","_swipeEvent","_swipeLocked","stopImmediatePropagation","_swipeTimeout","Scroll","horizontalScrollBar","verticalScrollBar","autoScroll","elapsed","delta","currentScrollInfo","amplitude","now","timestamp","exp","timeConstant","scroll","targetValue","cancelAnimationFrame","rafId","isMobile","inputEvents","dragStarted","pointerCaptured","ticker","createScrollInfo","scrollBar","initialValue","min","previousValue","pointerPosition","velocity","hScrollInfo","vScrollInfo","track","updateScrollInfo","scrollInfo","clientY","clientX","startScroll","round","preventDefault","stopPropagation","visible","ratio","dragged","doDrag","verticalDragResult","horizontalDragResult","set","Extend","events","classList","_that$element$classLi","hasClass","add","toConsumableArray","_that$element$classLi2","remove","handleObjects","handleObject","namespace","context","defaultPrevented","options","originalStopPropagation","isPropagationStopped","dispatchEvent","typesArray","dispatch","findIndex","o","attributeString","deserialize","propertyByAttributeName","nullable","newAttributeValue","serialize","booleans","setAttribute","getType","JSON","stringify","stringValue","nullValue","NaN","Infinity","parseFloat","parseInt","jsonObject","parse","er","moduleName","module","_HTMLElement","possibleConstructorReturn","__proto__","getPrototypeOf","arguments","inherits","onRegistered","isReady","_initElement","_setModuleState","onCreated","onReady","isAttached","attached","_handleListeners","property","attributeValueString","isNaN","localizedError","localize","actualType","log","isUpdatingFromAttribute","_property","defaultReflectToAttribute","applyTemplate","complete","templateBindingsReady","updateTemplateBindings","updateTextNodes","updateBoundNodes","owner","owners","_i2","onCompleted","isCompleted","templateNodes","querySelectorAll","_readyListeners","_i3","readyEventHandler","newValue","attributeChanged","newPropertyValue","watch","onAttached","unwatch","onDetached","propertyChanged","action","listeners","getStaticMember","processListeners","listener","path","handlerName","template","fragment","createDocumentFragment","tmpElement","templateElement","parseTemplate","importNode","hasChildNodes","rootElement","contentElement","getElementsByTagName","contentInsertionPoint","preudoContentElement","templateNode","$root","addClass","appendTemplate","proto","prototype","modules","addModule","properties","propertyChangedCallback","_watch","stateName","args","statusName","callbackName","modulesList","currentModule","defineModule","defineElementMethods","methodNames","defineElementProperties","isDefined","_initModule","propertyNames","getOwnPropertyNames","configurable","enumerable","memberName","elementName","staticMember","inheritedStaticMember","baseProto","methods","extendedProperties","defineElementModules","moduleInstance","_i4","isOldChrome","allowedValues","readOnly","observer","extend","validator","hasOwnProperty","defaultValueType","_localizedError","registered","elementProto","invokeMethod","method","methodName","methodContext","concat","excludeMethods","startsWith","excludeMethodName","defaultProperties","updateProperty","isValidValue","allowedValuesString","actualValueString","actualValue","validatedResult","_localizedError2","throwError","_localizedError3","propertyChangedHandler","matched","nodeType","disabled","rightToLeft","propertyUnknownType","propertyInvalidValue","propertyInvalidValueType","elementNotInDOM","moduleUndefined","Modules","customElements","registeredCallbacks","registeredLoadedCallbacks","chromeAgent","match","connectElements","BaseCustomElement","_BaseElement","created","readyState","setup","detached","ElementRegistry","_BaseElement2","BaseCustomElementV1","_this4","_externalStylePath","link","rel","href","insertBefore","externalStyle","observedAttributes","_propertyName2","templateStyle","HTMLStyleElement","addExternalStylesheet","scopedStyle","connect","defineElement","registerElement","toRegister","toRegisterItem","register","callback","lazyRegister","Elements","Version","_window$JQX$BaseEleme","ContentElement","applyContent","clearContent"],"mappings":"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","file":"jqxelement.js","sourcesContent":["'use strict';\n\n(function () {\n    'use strict';\n\n    /**\r\n     * This is a base class for localization. Users can implement it in order to handle translations via i18n.\r\n     */\n\n    var LocalizationModule = function () {\n        function LocalizationModule() {\n            babelHelpers.classCallCheck(this, LocalizationModule);\n        }\n\n        babelHelpers.createClass(LocalizationModule, [{\n            key: 'addMessages',\n\n\n            /** \r\n             * Adds messages. \r\n             * @param {String} - the string value's key.\r\n             * @param {Object} - the messages object.\r\n             */\n            value: function addMessages(messageKey, messages) {\n                var that = this;\n\n                Object.assign(that.messages[messageKey], messages);\n            }\n\n            /**\r\n              * Translates a text.\r\n              * @param {String} the string value's key.\r\n              * @param {Object} the values to be replaced in the string.\r\n              * @return {String} the translated text.\r\n             */\n\n        }, {\n            key: 'localize',\n            value: function localize(messageKey, messageArguments) {\n                var that = this;\n\n                if (!that.messages || !that.messages[that.language]) {\n                    return undefined;\n                }\n\n                var message = that.messages[that.language][messageKey];\n\n                if (!message) {\n                    return undefined;\n                }\n\n                var defaultMessage = message;\n                for (var messageName in messageArguments) {\n                    var messageValue = messageArguments[messageName];\n                    message = message.replace(new RegExp('{{' + messageName + '}}', 'g'), messageValue);\n                }\n\n                if (that.localizeFormatFunction) {\n                    that.localizeFormatFunction(defaultMessage, message, messageArguments);\n                }\n\n                return message;\n            }\n        }], [{\n            key: 'moduleName',\n            get: function get() {\n                return 'LocalizationModule';\n            }\n        }, {\n            key: 'properties',\n            get: function get() {\n                var properties = {\n                    'messages': {\n                        value: { en: {} },\n                        type: 'object',\n                        inherit: true,\n                        reflectToAttribute: false\n                    },\n                    'language': {\n                        value: 'en',\n                        type: 'string',\n                        reflectToAttribute: false\n                    },\n                    'localizeFormatFunction': {\n                        value: undefined,\n                        type: 'function',\n                        reflectToAttribute: false\n                    }\n                };\n\n                return properties;\n            }\n        }]);\n        return LocalizationModule;\n    }();\n\n    /**\r\n     * This is a base class for error logging.\r\n     */\n\n\n    var ErrorModule = function () {\n        function ErrorModule() {\n            babelHelpers.classCallCheck(this, ErrorModule);\n        }\n\n        babelHelpers.createClass(ErrorModule, [{\n            key: 'log',\n\n\n            /** Displays a log in the console.*/\n            value: function log(message) {\n                var that = this;\n\n                that._logger('log', message);\n            }\n\n            /** Displays a warning in the console.*/\n\n        }, {\n            key: 'warn',\n            value: function warn(message) {\n                var that = this;\n\n                that._logger('warn', message);\n            }\n\n            /** Displays an error in the console.*/\n\n        }, {\n            key: 'error',\n            value: function error(message) {\n                var that = this;\n\n                that._logger('warn', message);\n            }\n\n            /**\r\n              Logs an Error.\r\n              @param {String} the error's level - 'warn', 'error' or 'log'.\r\n              @param {Error} the error to be logged.\r\n             */\n\n        }, {\n            key: '_logger',\n            value: function _logger(level, error) {\n                var that = this;\n\n                if (that.debugMode) {\n                    var errorMessage = error instanceof Error ? error.message : error.toString();\n\n                    console[level](errorMessage);\n                }\n\n                if (that.rethrowError) {\n                    throw error;\n                }\n            }\n        }], [{\n            key: 'moduleName',\n            get: function get() {\n                return 'ErrorModule';\n            }\n        }, {\n            key: 'properties',\n            get: function get() {\n                var properties = {\n                    'rethrowError': {\n                        value: true,\n                        type: 'boolean',\n                        reflectToAttribute: false\n                    },\n                    'debugMode': {\n                        value: true,\n                        type: 'boolean',\n                        reflectToAttribute: false\n                    }\n                };\n\n                return properties;\n            }\n        }]);\n        return ErrorModule;\n    }();\n\n    /**\r\n     * This is a base class for data binding.\r\n     */\n\n\n    var BindingModule = function () {\n        function BindingModule() {\n            babelHelpers.classCallCheck(this, BindingModule);\n        }\n\n        babelHelpers.createClass(BindingModule, [{\n            key: 'getBindings',\n\n\n            /**\r\n             * @typedef {Object} bindings\r\n             * @property {Array<Node>} children The child nodes.\r\n             * @property {Node} node The node.\r\n             * @property {BindingData} data The node's binding data.\r\n             */\n\n            /**\r\n             * @typedef {Object} BindingData\r\n             * @property {Boolean} twoWay - Deterimes whether it's one way or two way data binding.\r\n             * @property {Boolean} updating - Determines whether the node is in update state.\r\n             * @property {Object}  value - The bound property's value.\r\n             * @property {String}  name - The bound property's name.\r\n             */\n            value: function getBindings(node) {\n                var that = this;\n\n                var index = 0;\n                var map = {};\n                var boundData = function (node) {\n                    if (node instanceof HTMLElement) {\n                        return that.parseAttributes(node);\n                    } else {\n                        var boundProperty = that.parseProperty(node.data, 'textContent', node);\n\n                        if (boundProperty) {\n                            if (node.parentNode === that.ownerElement.$.content) {\n                                boundProperty.value = that.ownerElement.$.html !== '' ? that.ownerElement.$.html : undefined;\n                                that.ownerElement.innerHTML = '';\n                            }\n\n                            return { 'textContent': boundProperty };\n                        }\n                    }\n\n                    return undefined;\n                }(node);\n\n                if (boundData) {\n                    map.data = boundData;\n                }\n\n                map.node = node;\n\n                if (node.firstChild) {\n                    map.children = {};\n                }\n\n                for (var child = node.firstChild; child; child = child.nextSibling) {\n                    map.children[index++] = that.getBindings(child);\n                }\n\n                return map;\n            }\n\n            /**\r\n             * Parses the element's attributes.\r\n             * @param {HTMLElement} - html element.\r\n             * @return {Array<BindingData>}\r\n             */\n\n        }, {\n            key: 'parseAttributes',\n            value: function parseAttributes(htmlElement) {\n                var that = this;\n\n                var boundProperties = undefined;\n\n                for (var i = 0; i < htmlElement.attributes.length; i++) {\n                    var attribute = htmlElement.attributes[i];\n                    var attributeName = attribute.name;\n                    var attributeValue = attribute.value;\n                    if (!BindingModule.cache['toCamelCase' + attributeName]) {\n                        BindingModule.cache['toCamelCase' + attributeName] = Utilities.Core.toCamelCase(attributeName);\n                    }\n\n                    var propertyName = BindingModule.cache['toCamelCase' + attributeName];\n\n                    if (attributeName.indexOf('(') >= 0) {\n                        var eventName = attributeName.substring(1, attributeName.length - 1);\n                        that.ownerElement.templateListeners[htmlElement.getAttribute('data-id') + '.' + eventName] = attributeValue;\n                        htmlElement.removeAttribute(attributeName);\n                        continue;\n                    }\n\n                    var boundProperty = that.parseProperty(attributeValue, attributeName, htmlElement);\n                    if (!boundProperty) {\n                        continue;\n                    }\n\n                    if (!boundProperties) {\n                        boundProperties = {};\n                    }\n\n                    boundProperties[propertyName] = boundProperty;\n                }\n\n                return boundProperties;\n            }\n\n            /**\r\n             * Parses a property.\r\n             * @param {String} - The string to parse.\r\n             * @param {name} - property's name.\r\n             * @param {Node} - the node.\r\n             * @return {BindingData}\r\n             */\n\n        }, {\n            key: 'parseProperty',\n            value: function parseProperty(text, name, node) {\n                if (!text || !text.length) return;\n\n                var that = this;\n\n                var boundProperty = void 0;\n                var length = text.length;\n                var startIndex = 0,\n                    lastIndex = 0,\n                    endIndex = 0;\n                var twoWay = true;\n\n                while (lastIndex < length) {\n                    startIndex = text.indexOf('{{', lastIndex);\n                    var twoWayStart = text.indexOf('[[', lastIndex);\n                    var terminator = '}}';\n\n                    if (twoWayStart >= 0 && (startIndex < 0 || twoWayStart < startIndex)) {\n                        startIndex = twoWayStart;\n                        twoWay = false;\n                        terminator = ']]';\n                    }\n\n                    endIndex = startIndex < 0 ? -1 : text.indexOf(terminator, startIndex + 2);\n\n                    if (endIndex < 0) {\n                        return;\n                    }\n\n                    boundProperty = boundProperty || {};\n                    var pathString = text.slice(startIndex + 2, endIndex).trim();\n                    var attributeName = pathString;\n\n                    if (twoWay) {\n                        (function () {\n                            var updateToken = function updateToken(value) {\n                                boundProperty.value = value;\n\n                                if (node.$ && node.$.isNativeElement) {\n\n                                    if (!BindingModule.cache['toDash' + name]) {\n                                        BindingModule.cache['toDash' + name] = Utilities.Core.toDash(name);\n                                    }\n\n                                    var _attributeName = BindingModule.cache['toDash' + name];\n                                    var oldValue = node.$.getAttributeValue(_attributeName, boundProperty.type);\n\n                                    if (oldValue !== boundProperty.value) {\n                                        node.$.setAttributeValue(_attributeName, boundProperty.value, boundProperty.type);\n                                    }\n                                }\n                            };\n\n                            if (pathString.indexOf('::') >= 0) {\n                                var eventIndex = pathString.indexOf('::');\n                                var eventName = pathString.substring(eventIndex + 2);\n\n                                that.ownerElement['$' + node.getAttribute('data-id')].listen(eventName, function () {\n                                    updateToken(node[name]);\n\n                                    var boundPropertyName = boundProperty.name.substring(0, boundProperty.name.indexOf('::'));\n                                    that.updateBoundProperty(boundPropertyName, boundProperty);\n                                });\n                            }\n\n                            if (node instanceof window.JQX.BaseElement) {\n                                if (!BindingModule.cache['toDash' + name]) {\n                                    BindingModule.cache['toDash' + name] = Utilities.Core.toDash(name);\n                                }\n\n                                var _attributeName2 = BindingModule.cache['toDash' + name];\n                                var _propertyName = Utilities.Core.toCamelCase(_attributeName2);\n\n                                if (node._properties[_propertyName]) {\n                                    node._properties[_propertyName].notify = true;\n                                }\n\n                                that.ownerElement['$' + node.getAttribute('data-id')].listen(_attributeName2 + '-changed', function (event) {\n                                    var detail = event.detail;\n\n                                    updateToken(detail.value);\n                                    that.updateBoundProperty(name, boundProperty);\n                                });\n                            }\n                        })();\n                    }\n\n                    boundProperty.name = attributeName;\n                    lastIndex = endIndex + 2;\n                }\n\n                var propertyName = boundProperty.name;\n                var elementProperty = that.ownerElement._properties[propertyName];\n\n                boundProperty.twoWay = twoWay;\n                boundProperty.ready = false;\n                that.ownerElement.boundProperties[propertyName] = true;\n\n                if (elementProperty) {\n                    boundProperty.type = elementProperty.type;\n                    boundProperty.reflectToAttribute = elementProperty.reflectToAttribute;\n                } else {\n                    boundProperty.type = 'string';\n                    boundProperty.reflectToAttribute = true;\n                }\n\n                return boundProperty;\n            }\n\n            /**\r\n             * Updates element's data bound nodes.\r\n             */\n\n        }, {\n            key: 'updateTextNodes',\n            value: function updateTextNodes() {\n                var that = this;\n\n                that.updateTextNode(that.ownerElement.shadowRoot || that.ownerElement, that.ownerElement.bindings, that.ownerElement);\n            }\n\n            /**\r\n             * Updates a data bound node.\r\n             * @param {Node} - The bound node.\r\n             * @param {Array<BindingData>} - The node's binding data.\r\n             * @param {Element} - The element to be updated.\r\n             */\n\n        }, {\n            key: 'updateTextNode',\n            value: function updateTextNode(node, bindings, element) {\n                var that = this;\n\n                if (!bindings) {\n                    return;\n                }\n\n                var index = 0;\n                for (var child = node.firstChild; child; child = child.nextSibling) {\n                    if (!bindings.children) {\n                        break;\n                    }\n\n                    that.updateTextNode(child, bindings.children[index++], element);\n                }\n\n                if (!bindings || !bindings.data) {\n                    return;\n                }\n\n                for (var name in bindings.data) {\n                    var boundProperty = bindings.data[name];\n                    var boundPropertyName = boundProperty.name;\n\n                    if (name !== 'textContent' || !boundProperty.twoWay || boundProperty.updating || boundProperty.value === undefined) {\n                        continue;\n                    }\n\n                    element[boundPropertyName] = boundProperty.value;\n                }\n            }\n\n            /**\r\n             * Updates a data bound property.\r\n             * @param {String} - The propery's name.\r\n             * @param {Object} - The property's value.\r\n             */\n\n        }, {\n            key: 'updateBoundProperty',\n            value: function updateBoundProperty(propertyName, propertyConfig) {\n                if (propertyConfig.updating) {\n                    return;\n                }\n\n                var that = this;\n                var element = that.ownerElement;\n\n                propertyConfig.updating = true;\n                element[propertyName] = propertyConfig.value;\n                propertyConfig.updating = false;\n            }\n\n            /**\r\n             * Updates element's data bound nodes.\r\n             */\n\n        }, {\n            key: 'updateBoundNodes',\n            value: function updateBoundNodes(propertyName) {\n                var that = this;\n\n                that.updateBoundNode(that.ownerElement.shadowRoot || that.ownerElement, that.ownerElement.bindings, that.ownerElement, propertyName);\n            }\n\n            /**\r\n             * Updates a data bound node.\r\n             * @param {Node} - The bound node.\r\n             * @param {Array<BindingData>} - The node's binding data.\r\n             * @param {Element} - The element to be updated.\r\n             */\n\n        }, {\n            key: 'updateBoundNode',\n            value: function updateBoundNode(node, bindings, element, propertyName) {\n                var that = this;\n\n                if (!bindings) {\n                    return;\n                }\n\n                var index = 0;\n                for (var child = node.firstChild; child; child = child.nextSibling) {\n                    if (!bindings.children) {\n                        break;\n                    }\n\n                    that.updateBoundNode(child, bindings.children[index++], element, propertyName);\n                }\n\n                if (!bindings || !bindings.data) {\n                    return;\n                }\n\n                var _loop = function _loop(name) {\n                    var boundProperty = bindings.data[name];\n                    var boundPropertyName = boundProperty.name;\n                    if (boundProperty.updating) {\n                        return 'continue';\n                    }\n\n                    if (propertyName !== undefined && propertyName !== boundPropertyName) {\n                        return 'continue';\n                    }\n\n                    boundProperty.value = element[boundPropertyName];\n\n                    if (boundPropertyName === 'innerHTML') {\n                        if (node[name].toString().trim() !== element[boundPropertyName].toString().trim()) {\n                            if (boundProperty.ready) {\n                                node[name] = boundProperty.value.toString().trim();\n                            } else if (element._properties[boundPropertyName].defaultValue !== boundProperty.value) {\n                                node[name] = boundProperty.value.toString().trim();\n                            }\n                        }\n                    } else {\n                        node[name] = boundProperty.value;\n                    }\n\n                    if (node.$ && node.$.isNativeElement) {\n                        if (!BindingModule.cache['toDash' + name]) {\n                            BindingModule.cache['toDash' + name] = Utilities.Core.toDash(name);\n                        }\n\n                        var attributeName = BindingModule.cache['toDash' + name];\n                        var oldValue = node.$.getAttributeValue(attributeName, boundProperty.type);\n                        if (boundProperty.reflectToAttribute && (oldValue !== boundProperty.value || !boundProperty.ready)) {\n                            node.$.setAttributeValue(attributeName, boundProperty.value, boundProperty.type);\n                        }\n                        if (!boundProperty.reflectToAttribute) {\n                            node.$.setAttributeValue(attributeName, null, boundProperty.type);\n                        }\n                    }\n\n                    if (!boundProperty.ready) {\n                        if (node instanceof window.JQX.BaseElement) {\n                            var propertyConfig = node._properties[name];\n\n                            propertyConfig.isUpdating = true;\n\n                            if (boundProperty.reflectToAttribute) {\n                                node.$.setAttributeValue(propertyConfig.attributeName, boundProperty.value, boundProperty.type);\n                            }\n\n                            if (!boundProperty.reflectToAttribute) {\n                                node.$.setAttributeValue(propertyConfig.attributeName, null, boundProperty.type);\n                            }\n\n                            propertyConfig.isUpdating = false;\n                        }\n\n                        if (boundProperty.twoWay) {\n                            var updateToken = function updateToken(value) {\n                                boundProperty.value = value;\n\n                                if (node.$ && node.$.isNativeElement) {\n                                    if (!BindingModule.cache['toDash' + name]) {\n                                        BindingModule.cache['toDash' + name] = Utilities.Core.toDash(name);\n                                    }\n\n                                    var _attributeName3 = BindingModule.cache['toDash' + name];\n                                    var _oldValue = node.$.getAttributeValue(_attributeName3, boundProperty.type);\n\n                                    if (boundProperty.reflectToAttribute && _oldValue !== boundProperty.value) {\n                                        node.$.setAttributeValue(_attributeName3, boundProperty.value, boundProperty.type);\n                                    }\n                                    if (!boundProperty.reflectToAttribute) {\n                                        node.$.setAttributeValue(_attributeName3, null, boundProperty.type);\n                                    }\n                                }\n                            };\n\n                            if (boundProperty.name.indexOf('::') >= 0) {\n                                var eventIndex = boundProperty.name.indexOf('::');\n                                var eventName = boundProperty.name.substring(eventIndex + 2);\n\n                                that.ownerElement['$' + node.getAttribute('data-id')].listen(eventName, function () {\n                                    updateToken(node[name]);\n                                    that.updateBoundProperty(name, boundProperty);\n                                });\n                            }\n\n                            if (node instanceof window.JQX.BaseElement) {\n                                if (!BindingModule.cache['toDash' + name]) {\n                                    BindingModule.cache['toDash' + name] = Utilities.Core.toDash(name);\n                                }\n\n                                var _attributeName4 = BindingModule.cache['toDash' + name];\n\n                                that.ownerElement['$' + node.getAttribute('data-id')].listen(_attributeName4 + '-changed', function (event) {\n                                    var detail = event.detail;\n                                    updateToken(detail.value);\n                                    that.updateBoundProperty(name, boundProperty);\n                                });\n                            }\n                        }\n                    }\n\n                    boundProperty.ready = true;\n                };\n\n                for (var name in bindings.data) {\n                    var _ret2 = _loop(name);\n\n                    if (_ret2 === 'continue') continue;\n                }\n            }\n        }], [{\n            key: 'clearCache',\n            value: function clearCache() {\n                var that = this;\n\n                that.cache = {};\n            }\n        }, {\n            key: 'moduleName',\n            get: function get() {\n                return 'BindingModule';\n            }\n        }]);\n        return BindingModule;\n    }();\n\n    /** This is a class with utility methods for determing the type of a value. */\n\n\n    var Types = function () {\n        function Types() {\n            babelHelpers.classCallCheck(this, Types);\n        }\n\n        babelHelpers.createClass(Types, null, [{\n            key: 'isBoolean',\n\n            /**\r\n             * Determines whether a value is Boolean. \r\n             * @param {Object}.\r\n             * @return {Boolean}.\r\n             */\n            value: function isBoolean(value) {\n                return typeof value === 'boolean';\n            }\n\n            /**\r\n             * Determines whether a value is Function. \r\n             * @param {Object}.\r\n             * @return {Boolean}.\r\n             */\n\n        }, {\n            key: 'isFunction',\n            value: function isFunction(value) {\n                return !!(value && value.constructor && value.call && value.apply);\n            }\n\n            /**\r\n             * Determines whether a value is Array. \r\n             * @param {Object}.\r\n             * @return {Boolean}.\r\n             */\n\n        }, {\n            key: 'isArray',\n            value: function isArray(value) {\n                return Array.isArray(value);\n            }\n\n            /**\r\n             * Determines whether a value is Object. \r\n             * @param {Object}.\r\n             * @return {Boolean}.\r\n             */\n\n        }, {\n            key: 'isObject',\n            value: function isObject(value) {\n                var that = this;\n\n                return value && ((typeof value === 'undefined' ? 'undefined' : babelHelpers.typeof(value)) === 'object' || that.isFunction(value)) || false;\n            }\n\n            /**\r\n             * Determines whether a value is Date. \r\n             * @param {Object}.\r\n             * @return {Boolean}.\r\n             */\n\n        }, {\n            key: 'isDate',\n            value: function isDate(value) {\n                return value instanceof Date;\n            }\n\n            /**\r\n             * Determines whether a value is String. \r\n             * @param {Object}.\r\n             * @return {Boolean}.\r\n             */\n\n        }, {\n            key: 'isString',\n            value: function isString(value) {\n                return typeof value === 'string';\n            }\n\n            /**\r\n             * Determines whether a value is Number. \r\n             * @param {Object}.\r\n             * @return {Boolean}.\r\n             */\n\n        }, {\n            key: 'isNumber',\n            value: function isNumber(value) {\n                return typeof value === 'number';\n            }\n\n            /**\r\n             * Determines the type of an object.\r\n             * @param {Object}.\r\n             * @return {String} The value's type or undefined, if the type is unknown.\r\n             */\n\n        }, {\n            key: 'getType',\n            value: function getType(value) {\n                var that = this;\n\n                var types = ['Boolean', 'Number', 'String', 'Function', 'Array', 'Date', 'Object'];\n                var type = types.find(function (type) {\n                    if (that['is' + type](value)) {\n                        return type;\n                    }\n                });\n\n                return type ? type.toLowerCase() : undefined;\n            }\n        }]);\n        return Types;\n    }();\n\n    /** This is a class with utility methods. */\n\n\n    var Core = function () {\n        function Core() {\n            babelHelpers.classCallCheck(this, Core);\n        }\n\n        babelHelpers.createClass(Core, null, [{\n            key: 'toCamelCase',\n            value: function toCamelCase(value) {\n                return value.replace(/-([a-z])/g, function (g) {\n                    return g[1].toUpperCase();\n                });\n            }\n        }, {\n            key: 'toDash',\n            value: function toDash(value) {\n                return value.split(/(?=[A-Z])/).join('-').toLowerCase();\n            }\n        }, {\n            key: 'escapeHTML',\n            value: function escapeHTML(value) {\n                var entityMap = { '&': '&amp;', '<': '&lt;', '>': '&gt;', '\"': '&quot;', '\\'': '&#39;', '/': '&#x2F;', '`': '&#x60;', '=': '&#x3D;' };\n\n                return String(value).replace(/[&<>\"'`=\\/]/g, function (s) {\n                    return entityMap[s];\n                });\n            }\n        }, {\n            key: 'CSSVariablesSupport',\n            value: function CSSVariablesSupport() {\n                return window.CSS && window.CSS.supports && window.CSS.supports('--fake-var', 0);\n            }\n        }, {\n            key: 'assign',\n            value: function assign(target, source) {\n                var _this = this;\n\n                var isObject = function isObject(item) {\n                    return item && (typeof item === 'undefined' ? 'undefined' : babelHelpers.typeof(item)) === 'object' && !Array.isArray(item) && item !== null;\n                };\n\n                var output = Object.assign({}, target);\n                if (isObject(target) && isObject(source)) {\n                    Object.keys(source).forEach(function (key) {\n                        if (isObject(source[key])) {\n                            if (!(key in target)) {\n                                Object.assign(output, babelHelpers.defineProperty({}, key, source[key]));\n                            } else {\n                                output[key] = _this.assign(target[key], source[key]);\n                            }\n                        } else {\n                            Object.assign(output, babelHelpers.defineProperty({}, key, source[key]));\n                        }\n                    });\n                }\n\n                return output;\n            }\n        }, {\n            key: 'html',\n            value: function html(node, htmlString) {\n                var that = this;\n\n                var output = '';\n                var nodes = node.childNodes;\n\n                if (htmlString) {\n                    var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi;\n\n                    node.innerHTML = htmlString.replace(rxhtmlTag, '<$1></$2>');\n                    return;\n                }\n\n                for (var i = 0, l = nodes.length, child; i < l && (child = nodes[i]); i++) {\n                    var miscElements = ['strong'];\n\n                    if (child instanceof HTMLElement || child.tagName && miscElements.indexOf(child.tagName.toLowerCase()) >= 0) {\n                        var tagName = child.tagName.toLowerCase();\n                        var attrs = child.attributes;\n\n                        var nodeOutput = '<' + tagName;\n\n                        for (var j = 0, attr; attr = attrs[j]; j++) {\n                            nodeOutput += ' ' + attr.name + '=\"' + attr.value.replace(/[&\\u00A0\"]/g, Utilities.Core.escapeHTML) + '\"';\n                        }\n\n                        nodeOutput += '>';\n\n                        var voidElements = ['area', 'base', 'br', 'col', 'command', 'embed', 'hr', 'img', 'input', 'keygen', 'link', 'meta', 'param', 'source', 'track', 'wbr'];\n\n                        if (voidElements[tagName]) {\n                            output += nodeOutput;\n                        }\n\n                        output = output + nodeOutput + that.html(child) + '</' + tagName + '>';\n                    } else {\n                        output += child.data.replace(/[&\\u00A0<>]/g, Utilities.Core.escapeHTML);\n                    }\n                }\n                return output;\n            }\n        }, {\n            key: 'isMobile',\n            get: function get() {\n                var isMobile = /(iphone|ipod|ipad|android|iemobile|blackberry|bada)/.test(window.navigator.userAgent.toLowerCase());\n\n                return isMobile;\n            }\n        }]);\n        return Core;\n    }();\n\n    var styleObservedElements = [];\n\n    var StyleObserver = function () {\n        function StyleObserver() {\n            babelHelpers.classCallCheck(this, StyleObserver);\n        }\n\n        babelHelpers.createClass(StyleObserver, null, [{\n            key: 'watch',\n            value: function watch(element) {\n                styleObservedElements.push(element);\n\n                if (StyleObserver.interval) {\n                    clearInterval(StyleObserver.interval);\n                }\n\n                StyleObserver.interval = setInterval(function () {\n                    StyleObserver.observe();\n                }, 100);\n            }\n        }, {\n            key: 'observeElement',\n            value: function observeElement(element) {\n                var that = element;\n\n                var computedStyle = document.defaultView.getComputedStyle(that, null);\n                var canRaiseResize = true;\n                var styleProperties = ['display', 'visibility', 'font-size', 'font-family', 'font-style', 'font-weight'];\n\n                if (!that._styleInfo) {\n                    that._styleInfo = [];\n\n                    for (var i = 0; i < styleProperties.length; i++) {\n                        var styleProperty = styleProperties[i];\n\n                        that._styleInfo[styleProperty] = computedStyle[styleProperty];\n                    }\n\n                    return;\n                }\n\n                if (element.isHidden) {\n                    element.visibilityChangedHandler();\n\n                    if (!element.isHidden) {\n                        canRaiseResize = false;\n                    }\n                }\n\n                var changedStyleProperties = [];\n\n                for (var _i = 0; _i < styleProperties.length; _i++) {\n                    var _styleProperty = styleProperties[_i];\n\n                    if (that._styleInfo[_styleProperty] !== computedStyle[_styleProperty]) {\n                        changedStyleProperties[_styleProperty] = { oldValue: that._styleInfo[_styleProperty], value: computedStyle[_styleProperty] };\n                        changedStyleProperties.length++;\n                    }\n\n                    that._styleInfo[_styleProperty] = computedStyle[_styleProperty];\n                }\n\n                if (changedStyleProperties.length > 0) {\n                    that.$.fireEvent('styleChanged', {\n                        styleProperties: changedStyleProperties\n                    }, {\n                        bubbles: false,\n                        cancelable: true\n                    });\n\n                    if (changedStyleProperties['display'] && canRaiseResize) {\n                        that.$.fireEvent('resize', that, {\n                            bubbles: false,\n                            cancelable: true\n                        });\n                    }\n                }\n            }\n        }, {\n            key: 'observe',\n            value: function observe() {\n                for (var i = 0; i < styleObservedElements.length; i++) {\n                    var that = styleObservedElements[i];\n                    this.observeElement(that);\n                }\n            }\n        }, {\n            key: 'unwatch',\n            value: function unwatch(element) {\n                if (StyleObserver.interval) {\n                    clearInterval(StyleObserver.interval);\n                }\n\n                styleObservedElements = styleObservedElements.splice(styleObservedElements.indexOf(element), 1);\n\n                if (styleObservedElements.length > 0) {\n                    StyleObserver.interval = setInterval(function () {\n                        StyleObserver.observe();\n                    }, 100);\n                }\n            }\n        }]);\n        return StyleObserver;\n    }();\n\n    var inputEventTypes = ['resize', 'down', 'up', 'move', 'tap', 'taphold', 'swipeleft', 'swiperight', 'swipetop', 'swipebottom'];\n\n    /** This is a class which extends an element and adds custom input events to it. */\n\n    var InputEvents = function () {\n        function InputEvents(target) {\n            babelHelpers.classCallCheck(this, InputEvents);\n\n            var that = this;\n\n            that.target = target;\n            that.$target = new _Extend(target);\n            that.$document = new _Extend(document);\n            that.id = that.target === document ? '' : that.target.id || that.target.getAttribute('data-id');\n\n            var result = { handlers: {}, boundEventTypes: [], listen: that.listen.bind(that), unlisten: that.unlisten.bind(that) };\n\n            //The taphold delay. If this delay is passed then taphold event will be fired.\n            that.tapHoldDelay = 750;\n            //Defines the minimum swipe distance required by the plugin.\n            that.swipeMin = 10;\n            //Defines the maximum swipe distance. After it is passed the propagation of the event will be restored, therefore the scrolling will be available.\n            that.swipeMax = 5000;\n            //The swipe delay. After it is passed swipe event won't be fired.\n            that.swipeDelay = 1000;\n            //The taphold delay. If this delay is passed then taphold event will be fired.\n            that.tapHoldDelay = 750;\n\n            that.inputEventProperties = ['clientX', 'clientY', 'pageX', 'pageY', 'screenX', 'screenY'];\n\n            inputEventTypes.forEach(function (eventType) {\n                result[eventType] = function (handler) {\n                    result.handlers[eventType] = handler;\n                };\n\n                that[eventType] = function (event) {\n                    if (!result.handlers[event.type]) {\n                        if ((event.type === 'mousemove' || event.type === 'pointermove' || event.type === 'touchmove') && result.handlers['move']) {\n                            var moveEvent = that.createEvent(event, 'move');\n                            result.handlers['move'](moveEvent);\n                        }\n\n                        return true;\n                    }\n\n                    return result.handlers[event.type](event);\n                };\n            });\n\n            that.listen();\n\n            that.handlers = result.handlers;\n\n            return result;\n        }\n\n        babelHelpers.createClass(InputEvents, [{\n            key: 'listen',\n            value: function listen(eventType) {\n                var that = this;\n\n                if (eventType === 'resize') {\n                    if (!that.target.resizeTrigger && that.target !== document && that.target !== window) {\n                        var container = document.createElement('div');\n                        container.className = 'jqx-resize-trigger-container';\n                        container.innerHTML = '<div class=\"jqx-resize-trigger-container\">' + '<div class=\"jqx-resize-trigger\"></div>' + '</div>' + '<div class=\"jqx-resize-trigger-container\">' + '<div class=\"jqx-resize-trigger-shrink\"></div>' + '</div>';\n\n                        that.target.appendChild(container);\n                        that.target.resizeTrigger = container;\n\n                        var expand = container.childNodes[0];\n                        var expandChild = expand.childNodes[0];\n                        var shrink = container.childNodes[1];\n                        var reset = function reset() {\n                            expandChild.style.width = '100000px';\n                            expandChild.style.height = '100000px';\n\n                            expand.scrollLeft = 100000;\n                            expand.scrollTop = 100000;\n\n                            shrink.scrollLeft = 100000;\n                            shrink.scrollTop = 100000;\n                        };\n\n                        var dirty = void 0,\n                            requestAnimationFrameId = void 0,\n                            newWidth = void 0,\n                            newHeight = void 0;\n\n                        var lastWidth = that.target.offsetWidth;\n                        var lastHeight = that.target.offsetHeight;\n\n                        reset();\n\n                        that.target.resizeHandler = function () {\n                            if (!requestAnimationFrameId) {\n                                requestAnimationFrameId = requestAnimationFrame(function () {\n                                    requestAnimationFrameId = 0;\n                                    newWidth = that.target.offsetWidth;\n                                    newHeight = that.target.offsetHeight;\n                                    dirty = newWidth !== lastWidth || newHeight !== lastHeight;\n                                    if (that.target.requiresLayout) {\n                                        dirty = true;\n                                    }\n\n                                    if (!dirty) {\n                                        return;\n                                    }\n\n                                    lastWidth = newWidth;\n                                    lastHeight = newHeight;\n\n                                    var resizeEvent = new CustomEvent('resize', {\n                                        bubbles: false,\n                                        cancelable: true\n                                    });\n\n                                    that.resize(resizeEvent);\n\n                                    that.target.requiresLayout = false;\n                                });\n                            }\n\n                            reset();\n                        };\n\n                        expand.addEventListener('scroll', that.target.resizeHandler);\n                        shrink.addEventListener('scroll', that.target.resizeHandler);\n                    }\n                }\n\n                if (that.isListening) {\n                    return;\n                }\n\n                that.isListening = true;\n                that.isPressed = false;\n                that.isReleased = false;\n                that.isInBounds = false;\n\n                if (window.PointerEvent) {\n                    that.$target.listen('pointerdown.inputEvents' + that.id, that.pointerDown.bind(that));\n                    that.$target.listen('pointerup.inputEvents' + that.id, that.pointerUp.bind(that));\n                    that.$target.listen('pointermove.inputEvents' + that.id, that.pointerMove.bind(that));\n                    that.$target.listen('pointercancel.inputEvents' + that.id, that.pointerCancel.bind(that));\n                } else {\n                    var hasTouch = 'ontouchstart' in window;\n\n                    if (hasTouch) {\n                        that.$target.listen('touchmove.inputEvents' + that.id, that.touchMove.bind(that));\n                        that.$target.listen('touchstart.inputEvents' + that.id, that.touchStart.bind(that));\n                        that.$target.listen('touchend.inputEvents' + that.id, that.touchEnd.bind(that));\n                        that.$target.listen('touchcancel.inputEvents' + that.id, that.touchCancel.bind(that));\n                    }\n\n                    that.$target.listen('mousedown.inputEvents' + that.id, that.mouseDown.bind(that));\n                    that.$target.listen('mouseup.inputEvents' + that.id, that.mouseUp.bind(that));\n                    that.$target.listen('mousemove.inputEvents' + that.id, that.mouseMove.bind(that));\n                    that.$target.listen('mouseleave.inputEvents' + that.id, that.mouseLeave.bind(that));\n                }\n\n                that.$document.listen('mouseup.inputEvents' + that.id, that.handleDocumentUp.bind(that));\n            }\n        }, {\n            key: 'unlisten',\n            value: function unlisten(eventType) {\n                var that = this;\n\n                that.isListening = false;\n\n                if (window.PointerEvent) {\n                    that.$target.unlisten('pointerdown.inputEvents' + that.id);\n                    that.$target.unlisten('pointerup.inputEvents' + that.id);\n                    that.$target.unlisten('pointermove.inputEvents' + that.id);\n                    that.$target.unlisten('pointercancel.inputEvents' + that.id);\n                } else {\n                    var hasTouch = 'ontouchstart' in window;\n                    if (hasTouch) {\n                        that.$target.unlisten('touchstart.inputEvents' + that.id);\n                        that.$target.unlisten('touchmove.inputEvents' + that.id);\n                        that.$target.unlisten('touchend.inputEvents' + that.id);\n                        that.$target.unlisten('touchcancel.inputEvents' + that.id);\n                    }\n\n                    that.$target.unlisten('mousedown.inputEvents' + that.id);\n                    that.$target.unlisten('mouseup.inputEvents' + that.id);\n                    that.$target.unlisten('mousemove.inputEvents' + that.id);\n                    that.$target.unlisten('mouseleave.inputEvents' + that.id);\n                }\n\n                that.$document.unlisten('mouseup.inputEvents' + that.id, that.handleDocumentUp);\n\n                if (eventType === 'resize' && that.target.resizeTrigger) {\n                    var container = that.target.resizeTrigger;\n                    var expand = container.childNodes[0];\n                    var shrink = container.childNodes[1];\n\n                    expand.removeEventListener('scroll', that.target.resizeHandler);\n                    shrink.removeEventListener('scroll', that.target.resizeHandler);\n\n                    that.target.resizeHandler = null;\n                    that.target.removeChild(container);\n                    delete that.target.resizeTrigger;\n                }\n            }\n        }, {\n            key: 'handleDocumentUp',\n            value: function handleDocumentUp(event) {\n                var that = this;\n\n                that.isPressed = false;\n                that.isReleased = false;\n                that.resetSwipe(event);\n            }\n        }, {\n            key: 'createEvent',\n            value: function createEvent(event, eventType) {\n                var that = this;\n                var touches = event.touches;\n                var changedTouches = event.changedTouches;\n                var touch = touches && touches.length ? touches[0] : changedTouches && changedTouches.length ? changedTouches[0] : undefined;\n                var customEvent = new CustomEvent(eventType, {\n                    bubbles: true,\n                    cancelable: true\n                });\n                customEvent.originalEvent = event;\n                if (touch) {\n                    for (var j = 0; j < that.inputEventProperties.length; j++) {\n                        var key = that.inputEventProperties[j];\n\n                        customEvent[key] = touch[key];\n                    }\n\n                    return customEvent;\n                }\n\n                for (var _key in event) {\n                    if (!(_key in customEvent)) {\n                        customEvent[_key] = event[_key];\n                    }\n                }\n\n                return customEvent;\n            }\n        }, {\n            key: 'fireTap',\n            value: function fireTap(event) {\n                var that = this;\n\n                clearTimeout(this.tapHoldTimeout);\n                if (!this.tapHoldFired && this.isInBounds) {\n                    var tap = that.createEvent(event, 'tap');\n                    that.tap(tap);\n                }\n            }\n        }, {\n            key: 'initTap',\n            value: function initTap(event) {\n                var that = this;\n\n                that.isInBounds = true;\n                that.tapHoldFired = false;\n                that.tapHoldTimeout = setTimeout(function () {\n                    if (that.isInBounds) {\n                        that.tapHoldFired = true;\n                        var taphold = that.createEvent(event, 'taphold');\n                        that.taphold(taphold);\n                    }\n                }, that.tapHoldDelay);\n            }\n        }, {\n            key: 'pointerDown',\n            value: function pointerDown(event) {\n                var that = this;\n\n                return that.handleDown(event);\n            }\n        }, {\n            key: 'mouseDown',\n            value: function mouseDown(event) {\n                var that = this;\n\n                if (that.isPressed || that.touchStartTime && new Date() - that.touchStartTime < 500) {\n                    return;\n                }\n\n                return that.handleDown(event);\n            }\n        }, {\n            key: 'touchStart',\n            value: function touchStart(event) {\n                var that = this;\n\n                that.touchStartTime = new Date();\n                that.isTouchMoved = true;\n\n                return that.handleDown(event);\n            }\n        }, {\n            key: 'mouseUp',\n            value: function mouseUp(event) {\n                var that = this;\n\n                if (that.isReleased || that.touchEndTime && new Date() - that.touchEndTime < 500) {\n                    return;\n                }\n\n                return that.handleUp(event);\n            }\n        }, {\n            key: 'handleDown',\n            value: function handleDown(event) {\n                var that = this;\n\n                that.isReleased = false;\n                that.isPressed = true;\n\n                var down = that.createEvent(event, 'down');\n\n                if (that.handlers['tap'] || that.handlers['taphold']) {\n                    that.initTap(down);\n                }\n\n                if (that.handlers['swipeleft'] || that.handlers['swiperight'] || that.handlers['swipetop'] || that.handlers['swipebottom']) {\n                    that.initSwipe(down);\n                }\n\n                return that.down(down);\n            }\n        }, {\n            key: 'handleUp',\n            value: function handleUp(event) {\n                var that = this;\n\n                that.isReleased = true;\n                that.isPressed = false;\n\n                var up = that.createEvent(event, 'up');\n                var result = that.up(up);\n\n                if (that.handlers['tap'] || that.handlers['taphold']) {\n                    that.fireTap(up);\n                }\n\n                that.resetSwipe(up);\n\n                return result;\n            }\n        }, {\n            key: 'handleMove',\n            value: function handleMove(event) {\n                var that = this;\n\n                var eventResult = that.move(event);\n\n                if (that.isPressed) {\n                    that._maxSwipeVerticalDistance = Math.max(that._maxSwipeVerticalDistance, Math.abs(that._startY - event.pageY));\n                    that._maxSwipeHorizontalDistance = Math.max(that._maxSwipeHorizontalDistance, Math.abs(that._startX - event.pageX));\n                    eventResult = that.handleSwipeEvents(event);\n                }\n\n                return eventResult;\n            }\n        }, {\n            key: 'touchEnd',\n            value: function touchEnd(event) {\n                var that = this;\n\n                that.touchEndTime = new Date();\n                return that.handleUp(event);\n            }\n        }, {\n            key: 'pointerUp',\n            value: function pointerUp(event) {\n                var that = this;\n\n                return that.handleUp(event);\n            }\n        }, {\n            key: 'pointerCancel',\n            value: function pointerCancel(event) {\n                var that = this;\n\n                that.pointerUp(event);\n            }\n        }, {\n            key: 'touchCancel',\n            value: function touchCancel(event) {\n                var that = this;\n\n                that.touchEnd(event);\n            }\n        }, {\n            key: 'mouseLeave',\n            value: function mouseLeave() {\n                var that = this;\n\n                that.isInBounds = false;\n            }\n        }, {\n            key: 'mouseMove',\n            value: function mouseMove(event) {\n                var that = this;\n\n                if (that.isTouchMoved) {\n                    return;\n                }\n\n                return that.handleMove(event);\n            }\n        }, {\n            key: 'pointerMove',\n            value: function pointerMove(event) {\n                var that = this;\n\n                return that.handleMove(event);\n            }\n        }, {\n            key: 'touchMove',\n            value: function touchMove(event) {\n                var that = this;\n                var touches = event.touches;\n                var changedTouches = event.changedTouches;\n                var touch = touches && touches.length ? touches[0] : changedTouches && changedTouches.length ? changedTouches[0] : undefined;\n\n                for (var j = 0; j < that.inputEventProperties.length; j++) {\n                    var key = that.inputEventProperties[j];\n\n                    if (event[key] === undefined) {\n                        event[key] = touch[key];\n                    }\n                }\n\n                that.isTouchMoved = true;\n\n                return that.handleMove(event);\n            }\n        }, {\n            key: 'handleSwipeEvents',\n            value: function handleSwipeEvents(event) {\n                var that = this;\n\n                var eventResult = true;\n\n                if (that.handlers['swipetop'] || that.handlers['swipebottom']) {\n                    eventResult = this.handleVerticalSwipeEvents(event);\n                }\n\n                if (eventResult === false) {\n                    return eventResult;\n                }\n\n                if (that.handlers['swipeleft'] || that.handlers['swiperight']) {\n                    eventResult = this.handleHorizontalSwipeEvents(event);\n                }\n\n                return eventResult;\n            }\n        }, {\n            key: 'handleVerticalSwipeEvents',\n            value: function handleVerticalSwipeEvents(event) {\n                var current = void 0,\n                    diff = void 0;\n                current = event.pageY;\n                diff = current - this._startY;\n\n                return this.swiped(event, diff, 'vertical');\n            }\n        }, {\n            key: 'handleHorizontalSwipeEvents',\n            value: function handleHorizontalSwipeEvents(event) {\n                var current = void 0,\n                    diff = void 0;\n                current = event.pageX;\n                diff = current - this._startX;\n\n                return this.swiped(event, diff, 'horizontal');\n            }\n        }, {\n            key: 'swiped',\n            value: function swiped(event, diff, direction) {\n                var that = this;\n\n                direction = direction || 0;\n                if (Math.abs(diff) >= that.swipeMin && !that._swipeEvent && !that._swipeLocked) {\n                    var eventType = diff < 0 ? 'swipeleft' : 'swiperight';\n                    if (direction === 'horizontal') {\n                        that._swipeEvent = that.createEvent(event, eventType);\n                    } else {\n                        eventType = diff < 0 ? 'swipetop' : 'swipebottom';\n                        that._swipeEvent = that.createEvent(event, diff < 0 ? 'swipetop' : 'swipebottom');\n                    }\n\n                    if (that[eventType]) {\n                        that[eventType](this._swipeEvent);\n                        if (Math.abs(diff) <= this.swipeMax) {\n                            event.stopImmediatePropagation();\n                            return false;\n                        }\n                    }\n                }\n\n                return true;\n            }\n        }, {\n            key: 'resetSwipe',\n            value: function resetSwipe() {\n                var that = this;\n\n                that._swipeEvent = null;\n                clearTimeout(this._swipeTimeout);\n            }\n        }, {\n            key: 'initSwipe',\n            value: function initSwipe(event) {\n                var that = this;\n\n                that._maxSwipeVerticalDistance = 0;\n                that._maxSwipeHorizontalDistance = 0;\n                that._startX = event.pageX;\n                that._startY = event.pageY;\n                that._swipeLocked = false;\n                that._swipeEvent = null;\n                that._swipeTimeout = setTimeout(function () {\n                    that._swipeLocked = true;\n                }, that.swipeDelay);\n            }\n        }]);\n        return InputEvents;\n    }();\n\n    var Scroll = function () {\n        babelHelpers.createClass(Scroll, [{\n            key: 'scrollWidth',\n            get: function get() {\n                var that = this;\n\n                if (that.horizontalScrollBar) {\n                    return that.horizontalScrollBar.max;\n                }\n\n                return -1;\n            },\n            set: function set(value) {\n                var that = this;\n\n                if (value < 0) {\n                    value = 0;\n                }\n\n                if (that.horizontalScrollBar) {\n                    that.horizontalScrollBar.max = value;\n                }\n            }\n        }, {\n            key: 'scrollHeight',\n            get: function get() {\n                var that = this;\n\n                if (that.verticalScrollBar) {\n                    return that.verticalScrollBar.max;\n                }\n\n                return -1;\n            },\n            set: function set(value) {\n                var that = this;\n\n                if (value < 0) {\n                    value = 0;\n                }\n\n                if (that.verticalScrollBar) {\n                    that.verticalScrollBar.max = value;\n                }\n            }\n        }, {\n            key: 'scrollLeft',\n            get: function get() {\n                var that = this;\n\n                if (that.horizontalScrollBar) {\n                    return that.horizontalScrollBar.value;\n                }\n\n                return -1;\n            },\n            set: function set(value) {\n                var that = this;\n\n                if (that.horizontalScrollBar) {\n                    that.horizontalScrollBar.value = value;\n                }\n            }\n        }, {\n            key: 'scrollTop',\n            get: function get() {\n                var that = this;\n\n                if (that.verticalScrollBar) {\n                    return that.verticalScrollBar.value;\n                }\n\n                return -1;\n            },\n            set: function set(value) {\n                var that = this;\n\n                if (that.verticalScrollBar) {\n                    that.verticalScrollBar.value = value;\n                }\n            }\n        }, {\n            key: 'vScrollBar',\n            get: function get() {\n                var that = this;\n\n                return that.verticalScrollBar;\n            }\n        }, {\n            key: 'hScrollBar',\n            get: function get() {\n                var that = this;\n\n                return that.horizontalScrollBar;\n            }\n        }]);\n\n        function Scroll(container, horizontalScrollBar, verticalScrollBar) {\n            babelHelpers.classCallCheck(this, Scroll);\n\n            var that = this;\n            var isMobile = Core.isMobile;\n\n            that.inputEvents = new InputEvents(container);\n            that.horizontalScrollBar = horizontalScrollBar;\n            that.verticalScrollBar = verticalScrollBar;\n\n            var dragStarted = void 0,\n                rafId = void 0,\n                pointerCaptured = void 0,\n                timestamp = void 0,\n                ticker = void 0,\n                now = void 0,\n                elapsed = void 0,\n                timeConstant = 500,\n                currentScrollInfo = void 0;\n\n            var createScrollInfo = function createScrollInfo(scrollBar) {\n                return {\n                    amplitude: 0,\n                    delta: 0,\n                    initialValue: 0,\n                    min: 0,\n                    max: scrollBar.max,\n                    previousValue: 0,\n                    pointerPosition: 0,\n                    targetValue: 0,\n                    scrollBar: scrollBar,\n                    value: 0,\n                    velocity: 0\n                };\n            };\n\n            var hScrollInfo = createScrollInfo(horizontalScrollBar);\n            var vScrollInfo = createScrollInfo(verticalScrollBar);\n\n            var track = function track() {\n                now = Date.now();\n                elapsed = now - timestamp;\n                timestamp = now;\n\n                var updateScrollInfo = function updateScrollInfo(scrollInfo) {\n                    scrollInfo.delta = scrollInfo.value - scrollInfo.previousValue;\n                    scrollInfo.previousValue = scrollInfo.value;\n                    var velocity = 1000 * scrollInfo.delta / (1 + elapsed);\n                    scrollInfo.velocity = 0.8 * velocity + 0.2 * scrollInfo.velocity;\n                };\n\n                updateScrollInfo(vScrollInfo);\n                updateScrollInfo(hScrollInfo);\n            };\n\n            var scroll = function scroll(value) {\n                currentScrollInfo.value = value > currentScrollInfo.max ? currentScrollInfo.max : value < currentScrollInfo.min ? currentScrollInfo.min : value;\n                currentScrollInfo.scrollBar.value = currentScrollInfo.value;\n\n                return value > currentScrollInfo.max ? 'max' : value < currentScrollInfo.min ? 'min' : 'value';\n            };\n\n            function autoScroll() {\n                var elapsed, delta;\n                if (currentScrollInfo.amplitude) {\n                    elapsed = Date.now() - timestamp;\n                    delta = -currentScrollInfo.amplitude * Math.exp(-elapsed / timeConstant);\n                    if (delta > 5 || delta < -5) {\n                        scroll(currentScrollInfo.targetValue + delta);\n                        cancelAnimationFrame(rafId);\n                        rafId = 0;\n                        rafId = requestAnimationFrame(autoScroll);\n                    } else {\n                        scroll(currentScrollInfo.targetValue);\n                    }\n                }\n            }\n\n            that.inputEvents['down'](function (event) {\n                if (!isMobile) {\n                    return;\n                }\n\n                pointerCaptured = true;\n                dragStarted = false;\n\n                var updateScrollInfo = function updateScrollInfo(scrollInfo, pointerPosition) {\n                    scrollInfo.amplitude = 0;\n                    scrollInfo.pointerPosition = pointerPosition;\n                    scrollInfo.previousValue = scrollInfo.value;\n                    scrollInfo.value = scrollInfo.scrollBar.value;\n                    scrollInfo.initialValue = scrollInfo.value;\n                    scrollInfo.max = scrollInfo.scrollBar.max;\n                };\n\n                updateScrollInfo(vScrollInfo, event.clientY);\n                updateScrollInfo(hScrollInfo, event.clientX);\n\n                timestamp = Date.now();\n                clearInterval(ticker);\n                ticker = setInterval(track, timeConstant);\n            });\n\n            that.inputEvents['up'](function () {\n                if (!pointerCaptured) {\n                    return true;\n                }\n\n                clearInterval(ticker);\n\n                var startScroll = function startScroll(scrollInfo) {\n                    currentScrollInfo = scrollInfo;\n                    scrollInfo.amplitude = 0.8 * scrollInfo.velocity;\n                    scrollInfo.targetValue = Math.round(scrollInfo.value + scrollInfo.amplitude);\n                    timestamp = Date.now();\n                    cancelAnimationFrame(rafId);\n                    rafId = requestAnimationFrame(autoScroll);\n                    scrollInfo.velocity = 0;\n                };\n\n                if (vScrollInfo.velocity > 10 || vScrollInfo.velocity < -10) {\n                    startScroll(vScrollInfo);\n                } else if (hScrollInfo.velocity > 10 || hScrollInfo.velocity < -10) {\n                    startScroll(hScrollInfo);\n                }\n\n                pointerCaptured = false;\n            });\n\n            that.inputEvents['move'](function (event) {\n                if (!pointerCaptured) {\n                    return true;\n                }\n\n                if (dragStarted) {\n                    event.originalEvent.preventDefault();\n                    event.originalEvent.stopPropagation();\n                }\n\n                hScrollInfo.visible = horizontalScrollBar.offsetHeight > 0;\n                vScrollInfo.visible = verticalScrollBar.offsetWidth > 0;\n\n                if (!pointerCaptured || !hScrollInfo.visible && !vScrollInfo.visible) {\n                    return;\n                }\n\n                vScrollInfo.ratio = -vScrollInfo.max / vScrollInfo.scrollBar.offsetHeight;\n                vScrollInfo.delta = (event.clientY - vScrollInfo.pointerPosition) * vScrollInfo.ratio;\n\n                hScrollInfo.ratio = -hScrollInfo.max / hScrollInfo.scrollBar.offsetWidth;\n                hScrollInfo.delta = (event.clientX - hScrollInfo.pointerPosition) * hScrollInfo.ratio;\n\n                var dragged = 'value';\n\n                var doDrag = function doDrag(scrollInfo, pointerPosition, event) {\n                    if (scrollInfo.delta > 5 || scrollInfo.delta < -5) {\n                        currentScrollInfo = scrollInfo;\n\n                        dragged = scrollInfo.initialValue + scrollInfo.delta > currentScrollInfo.max ? 'max' : scrollInfo.initialValue + scrollInfo.delta < currentScrollInfo.min ? 'min' : 'value';\n\n                        if (dragged === 'min' && scrollInfo.initialValue === 0) {\n                            return true;\n                        }\n\n                        if (dragged === 'max' && scrollInfo.initialValue === scrollInfo.max) {\n                            return true;\n                        }\n\n                        if (!scrollInfo.visible) {\n                            return true;\n                        }\n\n                        scroll(scrollInfo.initialValue + scrollInfo.delta);\n                        track();\n\n                        event.originalEvent.preventDefault();\n                        event.originalEvent.stopPropagation();\n                        dragStarted = true;\n\n                        return false;\n                    }\n\n                    return null;\n                };\n\n                var verticalDragResult = doDrag(vScrollInfo, event.clientY, event);\n                if (verticalDragResult === null) {\n                    var horizontalDragResult = doDrag(hScrollInfo, event.clientX, event);\n                    if (horizontalDragResult !== null) {\n                        return horizontalDragResult;\n                    }\n                } else {\n                    return verticalDragResult;\n                }\n            });\n\n            that.inputEvents.listen();\n        }\n\n        babelHelpers.createClass(Scroll, [{\n            key: 'unlisten',\n            value: function unlisten() {\n                var that = this;\n\n                if (that.inputEvents) {\n                    that.inputEvents.unlisten();\n                }\n\n                delete that.inputEvents;\n            }\n        }]);\n        return Scroll;\n    }();\n\n    /** This is a class which extends an element with utility methods. */\n\n\n    var _Extend = function () {\n        function Extend(element) {\n            babelHelpers.classCallCheck(this, Extend);\n\n            this.events = {};\n            this.handlers = {};\n            this.element = element;\n        }\n\n        /**\r\n         * Gets whether an element has a CSS Class. \r\n         * @param {String}.\r\n         */\n\n\n        babelHelpers.createClass(Extend, [{\n            key: 'hasClass',\n            value: function hasClass(className) {\n                var that = this;\n\n                if (that.element.className.indexOf) {\n                    return that.element.className.indexOf(className) >= 0;\n                }\n\n                return [].indexOf.call(that.element.classList, className) >= 0;\n            }\n\n            /**\r\n             * Adds a CSS Class to an element. \r\n             * @param {String}.\r\n             */\n\n        }, {\n            key: 'addClass',\n            value: function addClass(className) {\n                var _that$element$classLi;\n\n                var that = this;\n\n                if (that.hasClass(className)) {\n                    return;\n                }\n\n                (_that$element$classLi = that.element.classList).add.apply(_that$element$classLi, babelHelpers.toConsumableArray(className.split(' ')));\n                StyleObserver.observeElement(that.element);\n            }\n\n            /**\r\n             * Removes a CSS Class from an element. \r\n             * @param {String}.\r\n             */\n\n        }, {\n            key: 'removeClass',\n            value: function removeClass(className) {\n                var _that$element$classLi2;\n\n                var that = this;\n\n                if (!that.hasClass(className)) {\n                    return;\n                }\n\n                (_that$element$classLi2 = that.element.classList).remove.apply(_that$element$classLi2, babelHelpers.toConsumableArray(className.split(' ')));\n                if (that.element.className === '') {\n                    that.element.removeAttribute('class');\n                }\n                StyleObserver.observeElement(that.element);\n            }\n\n            /** Determines whether this element is native HTMLElement. */\n\n        }, {\n            key: 'dispatch',\n\n\n            /** \r\n             * Applies the event handlers.\r\n             * @param {Event} - event object.\r\n             */\n            value: function dispatch(event) {\n                var that = this;\n                var handleObjects = that.events[event.type];\n\n                for (var i = 0; i < handleObjects.length; i++) {\n                    var handleObject = handleObjects[i];\n                    event.namespace = handleObject.namespace;\n                    event.context = handleObject.context;\n\n                    if (event.defaultPrevented) {\n                        break;\n                    }\n\n                    var result = handleObject.handler.apply(that.element, [event]);\n\n                    if (result !== undefined) {\n                        event.result = result;\n\n                        if (result === false) {\n                            event.preventDefault();\n                            event.stopPropagation();\n                            break;\n                        }\n                    }\n                }\n\n                return event.result;\n            }\n\n            /** \r\n             * Fires a new event.\r\n             * @param {String} - event type.\r\n             * @param {Object} - event details.\r\n             * @param {Object} - event options.\r\n             */\n\n        }, {\n            key: 'fireEvent',\n            value: function fireEvent(eventType, detail, options) {\n                var that = this;\n\n                if (!options) {\n                    options = {\n                        bubbles: true,\n                        cancelable: true\n                    };\n                }\n                options.detail = detail || {};\n\n                var customEvent = new CustomEvent(eventType, options);\n                customEvent.originalStopPropagation = customEvent.stopPropagation;\n                customEvent.stopPropagation = function () {\n                    customEvent.isPropagationStopped = true;\n                    return customEvent.originalStopPropagation();\n                };\n\n                that.dispatchEvent(customEvent);\n\n                return customEvent;\n            }\n\n            /** \r\n            * Dispatches an event.\r\n            * @param {CustomEvent} - event.\r\n            */\n\n        }, {\n            key: 'dispatchEvent',\n            value: function dispatchEvent(customEvent) {\n                var that = this;\n                var eventType = customEvent.type;\n                var context = that.element.context;\n\n                that.element.context = document;\n\n                if (that.element['on' + eventType]) {\n                    that.element['on' + eventType](customEvent);\n                } else {\n                    that.element.dispatchEvent(customEvent);\n                }\n\n                that.element.context = context;\n            }\n\n            /** \r\n             * Adds an event listener.\r\n             * @param {String} - event types.\r\n             * @param {Function} - the event handler.\r\n             */\n\n        }, {\n            key: 'listen',\n            value: function listen(types, handler) {\n                var that = this;\n                var typesArray = types.split('.');\n                var namespace = typesArray.slice(1).join('.');\n                var eventType = typesArray[0];\n\n                if (!that.events[eventType]) {\n                    that.events[eventType] = [];\n                }\n\n                var handleObject = {\n                    type: eventType,\n                    handler: handler,\n                    context: that.element,\n                    namespace: namespace\n                };\n\n                if (inputEventTypes.indexOf(eventType) >= 0) {\n                    if (!that.inputEvents) {\n                        that.inputEvents = new InputEvents(that.element);\n                    }\n\n                    that.inputEvents[eventType](function (event) {\n                        that.dispatchEvent(event);\n                    });\n\n                    that.inputEvents.boundEventTypes.push(eventType);\n                    that.inputEvents.listen(eventType);\n                }\n\n                if (that.events[eventType].length === 0) {\n                    that.handlers[eventType] = that.dispatch.bind(that);\n                    that.element.addEventListener(eventType, that.handlers[eventType], false);\n                }\n\n                that.events[eventType].push(handleObject);\n            }\n\n            /** \r\n             * Removes an event listener.\r\n             * @param {String} - event types.\r\n             */\n\n        }, {\n            key: 'unlisten',\n            value: function unlisten(types) {\n                var that = this;\n                var typesArray = types.split('.');\n                var namespace = typesArray.slice(1).join('.');\n                var eventType = typesArray[0];\n\n                var handleObjects = that.events[eventType];\n\n                if (that.inputEvents && that.inputEvents.boundEventTypes.indexOf(eventType) >= 0) {\n                    that.inputEvents.boundEventTypes.splice(that.inputEvents.boundEventTypes.indexOf(eventType), 1);\n                    if (that.inputEvents.boundEventTypes.length === 0) {\n                        that.inputEvents.unlisten(eventType);\n                    }\n                }\n\n                if (!handleObjects) {\n                    return;\n                }\n\n                for (var i = 0; i < handleObjects.length; i++) {\n                    if (namespace !== '') {\n                        var index = handleObjects.findIndex(function (o) {\n                            return o.namespace === namespace;\n                        });\n                        handleObjects.splice(index, 1);\n                    } else {\n                        handleObjects = [];\n                    }\n                }\n                if (handleObjects.length === 0) {\n                    that.element.removeEventListener(eventType, that.handlers[eventType]);\n                    that.events[eventType] = [];\n                    delete that.handlers[eventType];\n                }\n            }\n\n            /** \r\n            * Gets the element's attribute value by using the property's value.\r\n            * @param {String} - attribute's name.\r\n            * @param {String} - property's type.\r\n            * @return {Object} The converted from String attribute value. \r\n            */\n\n        }, {\n            key: 'getAttributeValue',\n            value: function getAttributeValue(attributeName, type) {\n                var that = this;\n                var attributeString = that.element.getAttribute(attributeName);\n\n                if (that.isNativeElement) {\n                    return that.deserialize(attributeString, type);\n                }\n\n                var propertyConfig = that.element.propertyByAttributeName[attributeName];\n                var typedValue = propertyConfig.deserialize === undefined ? that.deserialize(attributeString, type, propertyConfig.nullable) : that.element[propertyConfig.deserialize](attributeString);\n\n                return typedValue;\n            }\n\n            /** \r\n             * Sets the element's attribute using the property's value.\r\n             * @param {String} - attribute's name.\r\n             * @param {Object} - property's value.\r\n             * @param {String} - property's type.\r\n             */\n\n        }, {\n            key: 'setAttributeValue',\n            value: function setAttributeValue(attributeName, value, type) {\n                var that = this;\n                var newAttributeValue = void 0;\n                var nullable = false;\n\n                if (!that.isNativeElement) {\n                    var propertyConfig = that.element.propertyByAttributeName[attributeName];\n\n                    nullable = propertyConfig.nullable;\n\n                    if (propertyConfig.serialize) {\n                        newAttributeValue = that.element[propertyConfig.serialize](value);\n                    } else {\n                        newAttributeValue = that.serialize(value, type, nullable);\n                    }\n                } else {\n                    newAttributeValue = that.serialize(value, type);\n                    if (type === 'boolean') {\n                        var booleans = ['checked', 'selected', 'async', 'autofocus', 'autoplay', 'controls', 'defer', 'disabled', 'hidden', 'ismap', 'loop', 'multiple', 'open', 'readonly', 'required', 'scoped'];\n                        if (booleans.indexOf(attributeName) >= 0) {\n                            if (!value) {\n                                that.element.removeAttribute(attributeName);\n                            } else {\n                                that.element.setAttribute(attributeName, '');\n                            }\n                            return;\n                        }\n                    }\n                }\n\n                if (type === 'array' || type === 'object') {\n                    if (newAttributeValue === '[]' || newAttributeValue === '{}') {\n                        that.element.removeAttribute(attributeName);\n                        return;\n                    }\n                }\n\n                if (newAttributeValue === undefined) {\n                    that.element.removeAttribute(attributeName);\n                } else {\n                    that.element.setAttribute(attributeName, newAttributeValue);\n                }\n            }\n\n            /** \r\n             * Converts a javascript value to string.\r\n             * @param {Object} the value to be converted.\r\n             * @return {String} The converted to String value. If the type is unknown, returns undefined.\r\n             */\n\n        }, {\n            key: 'serialize',\n            value: function serialize(value, type, nullable) {\n                if (type === undefined) {\n                    type = Utilities.Types.getType(value);\n                }\n\n                if (value === undefined || !nullable && value === null) {\n                    return undefined;\n                }\n\n                if (nullable && value === null) {\n                    return 'null';\n                }\n\n                if (type === 'string') {\n                    return Utilities.Core.escapeHTML(value);\n                }\n\n                if (type === 'boolean' || type === 'bool') {\n                    if (value === true || value === 'true' || value === 1 || value === '1') {\n                        return '';\n                    } else if (value === false || value === 'false' || value === 0 || value === '0') {\n                        return undefined;\n                    }\n                }\n\n                if (type === 'array') {\n                    return JSON.stringify(value);\n                }\n\n                var types = ['string', 'number', 'int', 'integer', 'float', 'date', 'any', 'function'];\n                if (types.indexOf(type) >= 0) {\n                    return value.toString();\n                }\n\n                if (type === 'object') {\n                    return JSON.stringify(value);\n                }\n\n                return undefined;\n            }\n\n            /** \r\n             * Converts a string to a Javascript value.\r\n             * @param {String}\r\n             * @param {String}\r\n             * @return {Object} The converted String value.\r\n             */\n\n        }, {\n            key: 'deserialize',\n            value: function deserialize(stringValue, type, nullable) {\n                var nullValue = stringValue === 'null';\n\n                if (stringValue === undefined || nullValue && !nullable) {\n                    return undefined;\n                }\n\n                if (nullValue && nullable) {\n                    return null;\n                }\n\n                if (type === 'boolean' || type === 'bool') {\n                    if (stringValue === null) {\n                        return false;\n                    }\n\n                    // Boolean properties are set based on the presence of the attribute: if the attribute exists at all, the value is true.\n                    return true;\n                } else if (type === 'number' || type === 'float') {\n                    if (stringValue === 'NaN') {\n                        return NaN;\n                    }\n\n                    if (stringValue === 'Infinity') {\n                        return Infinity;\n                    }\n\n                    return parseFloat(stringValue);\n                } else if (type === 'int' || type === 'integer') {\n                    if (stringValue === 'NaN') {\n                        return NaN;\n                    }\n\n                    if (stringValue === 'Infinity') {\n                        return Infinity;\n                    }\n\n                    return parseInt(stringValue);\n                } else if (type === 'string' || type === 'any') {\n                    return stringValue;\n                } else if (type === 'date') {\n                    return new Date(stringValue);\n                } else if (type === 'function') {\n                    if (typeof window[stringValue] === 'function') {\n                        return window[stringValue];\n                    }\n                } else if (type === 'array' || type === 'object') {\n                    try {\n                        var jsonObject = JSON.parse(stringValue);\n\n                        if (jsonObject) {\n                            return jsonObject;\n                        }\n                    } catch (er) {\n                        if (window[stringValue] && babelHelpers.typeof(window[stringValue]) === 'object') {\n                            return window[stringValue];\n                        }\n                    }\n                }\n\n                return undefined;\n            }\n        }, {\n            key: 'isNativeElement',\n            get: function get() {\n                var that = this;\n\n                if (that.element instanceof window.JQX.BaseElement === false) {\n                    return true;\n                }\n\n                return false;\n            }\n        }]);\n        return Extend;\n    }();\n\n    /** Utilities class. */\n\n\n    var Utilities = function () {\n        function Utilities() {\n            babelHelpers.classCallCheck(this, Utilities);\n        }\n\n        babelHelpers.createClass(Utilities, null, [{\n            key: 'Extend',\n\n\n            /**\r\n             * Extends Element with useful methods.\r\n             * @param {HTMLElement}\r\n             */\n            value: function Extend(element) {\n                return new _Extend(element);\n            }\n        }, {\n            key: 'Assign',\n            value: function Assign(moduleName, module) {\n                Utilities[moduleName] = module;\n            }\n        }, {\n            key: 'Types',\n\n\n            /** Get access to Types class. */\n            get: function get() {\n                return Types;\n            }\n        }, {\n            key: 'Core',\n            get: function get() {\n                return Core;\n            }\n        }, {\n            key: 'Scroll',\n            get: function get() {\n                return Scroll;\n            }\n        }, {\n            key: 'InputEvents',\n            get: function get() {\n                return InputEvents;\n            }\n        }]);\n        return Utilities;\n    }();\n\n    var $document = Utilities.Extend(document);\n\n    BindingModule.cache = {};\n    /**\r\n     * This is a base class for JQX Elements. It extends HTMLElement.\r\n     */\n\n    var BaseElement = function (_HTMLElement) {\n        babelHelpers.inherits(BaseElement, _HTMLElement);\n\n        function BaseElement() {\n            babelHelpers.classCallCheck(this, BaseElement);\n            return babelHelpers.possibleConstructorReturn(this, (BaseElement.__proto__ || Object.getPrototypeOf(BaseElement)).apply(this, arguments));\n        }\n\n        babelHelpers.createClass(BaseElement, [{\n            key: 'template',\n\n\n            /**\r\n             * Gets the element's HTML Template.\r\n             *\r\n             * @returns {String} - element's template.\r\n             */\n            value: function template() {\n                return '<div></div>';\n            }\n\n            /** Called when the element is registered. */\n\n        }, {\n            key: 'registered',\n            value: function registered() {\n                var that = this;\n\n                if (that.onRegistered) {\n                    that.onRegistered();\n                }\n            }\n\n            /** Called when the element has been created. */\n\n        }, {\n            key: 'created',\n            value: function created() {\n                var that = this;\n\n                that.isReady = false;\n                that._initElement(that);\n                that._setModuleState('created');\n\n                if (that.onCreated) {\n                    that.onCreated();\n                }\n            }\n\n            /** Called when the element is ready. Use for one-time configuration of your element. */\n\n        }, {\n            key: 'ready',\n            value: function ready() {\n                var that = this;\n\n                if (that.onReady) {\n                    that.onReady();\n                }\n            }\n        }, {\n            key: 'setup',\n            value: function setup() {\n                var that = this;\n\n                that.context = this;\n\n                if (that.isReady) {\n                    that._setModuleState('attached');\n                    that.isAttached = true;\n                    that.attached();\n                    that._handleListeners('listen');\n                    that.context = document;\n                    return;\n                }\n\n                that.isReady = true;\n\n                /* Updates the properties by using the attribute values. */\n\n                for (var i = 0; i < that.attributes.length; i += 1) {\n                    var property = that.propertyByAttributeName[that.attributes[i].name];\n\n                    if (!property) {\n                        continue;\n                    }\n\n                    var attributeValue = that.$.getAttributeValue(property.attributeName, property.type);\n                    var attributeValueString = attributeValue ? attributeValue.toString() : '';\n\n                    if (attributeValueString.indexOf('{{') >= 0 || attributeValueString.indexOf('[[') >= 0) {\n                        continue;\n                    }\n\n                    if (property.type !== 'object' && property.type !== 'array') {\n                        if (that.attributes[i].value.indexOf('{{') >= 0 || that.attributes[i].value.indexOf('[[') >= 0) {\n                            continue;\n                        }\n                    }\n\n                    if (attributeValue !== undefined && property.value !== attributeValue) {\n                        var attributeValueType = Utilities.Types.getType(attributeValue);\n\n                        if (attributeValueType === 'number' && isNaN(attributeValue)) {\n                            var localizedError = that.localize('propertyInvalidValueType', { name: property.name, actualType: 'string', type: property.type });\n                            that.log(localizedError);\n                        }\n\n                        property.isUpdatingFromAttribute = true;\n                        that[property.name] = attributeValue;\n                        property.isUpdatingFromAttribute = false;\n                    }\n                }\n\n                /* Set the default boolean and innerhtml attributes by using the property values. */\n                for (var propertyName in that._properties) {\n                    var _property = that._properties[propertyName];\n\n                    if (propertyName === 'innerHTML' && _property.value === _property.defaultValue) {\n                        _property.value = _property.defaultValue = Utilities.Core.html(that);\n                    }\n\n                    if (_property.type === 'boolean' || _property.type === 'bool') {\n                        if (that.getAttribute(_property.attributeName) === 'false') {\n                            _property.isUpdating = true;\n                            that.setAttribute(_property.attributeName, '');\n                            _property.isUpdating = false;\n                        }\n                    }\n\n                    if (!_property.defaultReflectToAttribute || !_property.reflectToAttribute) {\n                        continue;\n                    }\n\n                    that.$.setAttributeValue(_property.attributeName, _property.value, _property.type);\n                }\n\n                that.applyTemplate();\n\n                that.complete = function () {\n                    if (!that.templateBindingsReady) {\n                        var updateTemplateBindings = function updateTemplateBindings(node) {\n                            if (node.templateBindingsReady) {\n                                return;\n                            }\n\n                            node.templateBindingsReady = true;\n                            node.updateTextNodes();\n                            node.updateBoundNodes();\n                        };\n\n                        if (!that.ownerElement) {\n                            updateTemplateBindings(that);\n                        } else {\n                            var owner = that.ownerElement;\n                            var owners = [];\n                            while (owner) {\n                                owners.push(owner);\n                                owner = owner.ownerElement;\n                            }\n\n                            for (var _i2 = owners.length - 1; _i2 >= 0; _i2--) {\n                                updateTemplateBindings(owners[_i2]);\n                            }\n\n                            updateTemplateBindings(that);\n                        }\n                    }\n\n                    that._setModuleState('ready');\n\n                    that.ready();\n\n                    that.isAttached = true;\n                    that._setModuleState('attached');\n                    that.attached();\n                    that._handleListeners('listen');\n\n                    if (that.offsetWidth === 0 || that.offsetHeight === 0) {\n                        that.isHidden = true;\n                    }\n\n                    that.context = document;\n\n                    if (that.onCompleted) {\n                        that.onCompleted();\n                    }\n\n                    that.isCompleted = true;\n                };\n\n                var templateNodes = that.querySelectorAll('[data-id]');\n                if (templateNodes.length === 0) {\n                    that.complete();\n                } else {\n                    that._readyListeners = 0;\n\n                    for (var _i3 = 0; _i3 < templateNodes.length; _i3++) {\n                        var node = templateNodes[_i3];\n\n                        if (node instanceof window.JQX.BaseElement) {\n                            var readyEventHandler = function () {\n                                that._readyListeners--;\n                                if (that._readyListeners === 0) {\n                                    that.complete();\n\n                                    delete that._readyListeners;\n                                }\n                            }.bind(that);\n\n                            if (!node.isCompleted) {\n                                that._readyListeners++;\n                                node.onCompleted = readyEventHandler;\n                            }\n                        }\n                    }\n\n                    if (that._readyListeners === 0) {\n                        that.complete();\n                    }\n                }\n            }\n        }, {\n            key: 'visibilityChangedHandler',\n            value: function visibilityChangedHandler() {\n                var that = this;\n\n                if (!that.isReady) {\n                    return;\n                }\n\n                if (that.offsetWidth === 0 || that.offsetHeight === 0) {\n                    that.isHidden = true;\n                } else {\n                    if (that.isHidden) {\n                        that.$.fireEvent('resize', that, {\n                            bubbles: false,\n                            cancelable: true\n                        });\n                        that.isHidden = false;\n                    }\n                }\n            }\n\n            /** Called when an attribute is changed. */\n\n        }, {\n            key: 'attributeChangedCallback',\n            value: function attributeChangedCallback(name, oldValue, newValue) {\n                var that = this;\n                var property = that.propertyByAttributeName[name];\n\n                if (name === 'class' || name === 'style') {\n                    that.visibilityChangedHandler();\n                }\n\n                if (!property) {\n                    that.attributeChanged(name, oldValue, newValue);\n                }\n\n                if (!property || property && property.isUpdating) {\n                    return;\n                }\n\n                var newPropertyValue = that.$.getAttributeValue(property.attributeName, property.type);\n                if (newValue !== undefined && that[property.name] !== newPropertyValue) {\n                    property.isUpdatingFromAttribute = true;\n                    if (newPropertyValue !== undefined) {\n                        that[property.name] = newPropertyValue;\n                    } else {\n                        that[property.name] = that._properties[property.name].defaultValue;\n                    }\n                    property.isUpdatingFromAttribute = false;\n                }\n            }\n\n            /** Called when one of the element's attributes is changed. Use to handle attribute changes that don't correspond to declared properties. */\n\n        }, {\n            key: 'attributeChanged',\n            value: function attributeChanged(name, oldValue, newValue) {\n                if (oldValue !== newValue) {\n                    /* attribute change handling logic here. */\n                }\n            }\n\n            /** Called after the element is attached to the document. Can be called multiple times during the lifetime of an element. */\n\n        }, {\n            key: 'attached',\n            value: function attached() {\n                var that = this;\n\n                StyleObserver.watch(that);\n\n                if (that.onAttached) {\n                    that.onAttached();\n                }\n            }\n\n            /** Called after the element is detached from the document. Can be called multiple times during the lifetime of an element. */\n\n        }, {\n            key: 'detached',\n            value: function detached() {\n                var that = this;\n\n                StyleObserver.unwatch(that);\n\n                that._setModuleState('detached');\n                that.isAttached = false;\n\n                that._handleListeners('unlisten');\n\n                if (that.onDetached) {\n                    that.onDetached();\n                }\n            }\n\n            /** Called when a property value is changed. */\n\n        }, {\n            key: 'propertyChangedHandler',\n            value: function propertyChangedHandler(propertyName, oldValue, newValue) {\n                var that = this;\n\n                if (oldValue === newValue) {\n                    return;\n                }\n\n                if (that.propertyChanged) {\n                    that.propertyChanged(propertyName, oldValue, newValue);\n                }\n                /* Property changed logic goes here. */\n            }\n        }, {\n            key: '_handleListeners',\n            value: function _handleListeners(action) {\n                var that = this;\n                var tagName = that.tagName.toLowerCase();\n                var listeners = that.getStaticMember('listeners');\n\n                var processListeners = function processListeners(listeners) {\n                    var _loop2 = function _loop2(listener) {\n                        var path = listener.split('.');\n                        var eventType = path[0];\n                        var element = that.$;\n\n                        if (path[1]) {\n                            eventType = path[1];\n                            element = that['$' + path[0]];\n\n                            if (path[0] === 'document') {\n                                var id = that.id;\n                                if (id === '') {\n                                    id = Utilities.Core.toCamelCase(tagName);\n                                }\n                                eventType = eventType + '.' + id;\n                            }\n                        }\n\n                        var handlerName = listeners[listener];\n                        var handler = function handler(event) {\n                            var context = that.context;\n                            that.context = that;\n                            that[handlerName].apply(that, [event]);\n                            that.context = context;\n                        };\n\n                        if (!element) {\n                            return 'continue';\n                        }\n\n                        element[action](eventType, handler);\n                    };\n\n                    for (var listener in listeners) {\n                        var _ret3 = _loop2(listener);\n\n                        if (_ret3 === 'continue') continue;\n                    }\n                };\n\n                processListeners(listeners);\n                processListeners(that.templateListeners);\n            }\n\n            /** Parses the element's template. */\n\n        }, {\n            key: 'parseTemplate',\n            value: function parseTemplate() {\n                var that = this;\n                var template = that.template();\n                var fragment = document.createDocumentFragment();\n\n                if (template === '') {\n                    return null;\n                }\n\n                /* Create a wrapper DIV tag. */\n                var tmpElement = document.createElement('div');\n                fragment.appendChild(tmpElement);\n\n                /* Fill the nodes array with the wrapper's childNodes. */\n                tmpElement.innerHTML = template;\n                var nodes = tmpElement.childNodes;\n\n                /* Remove the wrapper DIV tag. */\n                tmpElement.parentNode.removeChild(tmpElement);\n\n                /* Add the nodes to the fragment. */\n                for (var i = 0; i < nodes.length; i++) {\n                    fragment.appendChild(nodes[i]);\n                }\n\n                return fragment;\n            }\n        }, {\n            key: 'applyTemplate',\n            value: function applyTemplate() {\n                var that = this;\n\n                var templateElement = that.parseTemplate();\n\n                if (!templateElement) {\n                    return;\n                }\n\n                var template = document.importNode(templateElement, true);\n\n                if (!template.hasChildNodes) {\n                    return;\n                }\n\n                var rootElement = template.childNodes[0];\n                var map = function map(name, element) {\n                    that['$' + name] = element.$ = Utilities.Extend(element);\n                    that.$[name] = element;\n                    element.ownerElement = that;\n                };\n\n                /* Create a content element. */\n                var contentElement = rootElement;\n\n                if (rootElement.getElementsByTagName('content').length > 0) {\n                    var contentInsertionPoint = rootElement.getElementsByTagName('content')[0];\n                    contentElement = contentInsertionPoint.parentNode;\n                    contentElement.removeChild(contentInsertionPoint);\n                } else {\n                    var preudoContentElement = template.querySelectorAll('[inner-h-t-m-l]');\n                    if (preudoContentElement && preudoContentElement.length > 0) {\n                        contentElement = preudoContentElement[0];\n                    }\n                }\n\n                /* Build nodes map. */\n                var templateNodes = template.querySelectorAll('[id]');\n                if (templateNodes.length === 0) {\n                    templateNodes = template.querySelectorAll('*');\n                }\n\n                map('root', rootElement);\n                map('content', contentElement);\n\n                that.$.html = that.innerHTML.toString().trim();\n\n                for (var i = 0; i < templateNodes.length; i += 1) {\n                    var templateNode = templateNodes[i];\n                    if (templateNode.id === '') {\n                        templateNode.id = 'child' + i;\n                    }\n\n                    map(templateNode.id, templateNode);\n                    templateNode.setAttribute('data-id', templateNode.id);\n\n                    if (!that.shadowRoot) {\n                        templateNode.removeAttribute('id');\n                    }\n                }\n\n                that.bindings = that.getBindings(template);\n                that.$root.addClass('jqx-container');\n                /* Move element's initial nodes to the content element. */\n                while (that.childNodes.length) {\n                    contentElement.appendChild(that.firstChild);\n                }\n\n                /* Append the template. */\n                that.appendTemplate(template);\n            }\n        }, {\n            key: 'appendTemplate',\n            value: function appendTemplate(template) {\n                var that = this;\n\n                that.appendChild(template);\n            }\n\n            /** Defines the custom element's default modules. The function is called once when the element's script file is referred. */\n\n        }, {\n            key: 'defineElementModules',\n            value: function defineElementModules() {\n                var that = this;\n\n                var proto = that.constructor.prototype;\n                proto.modules = that.constructor.modules;\n\n                var modules = proto.modules;\n\n                for (var i = 0; i < modules.length; i += 1) {\n                    that.addModule(modules[i]);\n                }\n            }\n        }, {\n            key: 'watch',\n            value: function watch(properties, propertyChangedCallback) {\n                var that = this;\n\n                if (properties === null || propertyChangedCallback === null) {\n                    that._watch = null;\n                    return;\n                }\n\n                that._watch = {\n                    properties: properties,\n                    propertyChangedCallback: propertyChangedCallback\n                };\n            }\n        }, {\n            key: 'unwatch',\n            value: function unwatch() {\n                var that = this;\n\n                that._watch = null;\n            }\n        }, {\n            key: '_setModuleState',\n            value: function _setModuleState(stateName, args) {\n                var that = this;\n                var statusName = 'is' + stateName.substring(0, 1).toUpperCase() + stateName.substring(1);\n                var callbackName = 'on' + stateName.substring(0, 1).toUpperCase() + stateName.substring(1);\n\n                for (var i = 0; i < that.modulesList.length; i++) {\n                    var module = that.modulesList[i];\n\n                    module[statusName] = true;\n\n                    if (module[stateName]) {\n                        module[stateName](args);\n                    }\n\n                    if (module[callbackName]) {\n                        module[callbackName](args);\n                    }\n                }\n            }\n\n            /**\r\n             * Adds a module to the the element. Module's methods and properties are mixed into the element's prototype.\r\n             * @param {Object}.\r\n             */\n\n        }, {\n            key: 'addModule',\n            value: function addModule(module) {\n                var that = this;\n\n                if (!module) {\n                    return;\n                }\n\n                var modules = that.modules;\n                var proto = module.prototype;\n\n                if (!module.moduleName && module.name) {\n                    module.moduleName = module.name;\n                }\n\n                if (modules.findIndex(function (currentModule) {\n                    return module.moduleName === currentModule.moduleName;\n                }) === -1) {\n                    modules.push(module);\n                }\n\n                that.defineModule(module);\n                that.defineElementMethods(proto.methodNames, proto);\n                that.defineElementProperties(module.properties);\n            }\n\n            /** Defines a module and creates its properties. */\n\n        }, {\n            key: 'defineModule',\n            value: function defineModule(module) {\n                if (module.isDefined) {\n                    return;\n                }\n\n                module.prototype._initModule = function (element) {\n                    var that = this;\n\n                    that.ownerElement = element;\n                };\n\n                var properties = module.properties || {};\n                var propertyNames = Object.keys(properties);\n                var methodNames = Object.getOwnPropertyNames(module.prototype);\n\n                module.prototype.methodNames = methodNames;\n\n                var _loop3 = function _loop3(j) {\n                    var propertyName = propertyNames[j];\n                    var property = properties[propertyName];\n\n                    Object.defineProperty(module.prototype, propertyName, {\n                        configurable: false,\n                        enumerable: true,\n                        get: function get() {\n                            var that = this;\n\n                            if (!that.ownerElement) {\n                                return property.value;\n                            }\n\n                            return that.ownerElement[propertyName];\n                        },\n                        set: function set(value) {\n                            var that = this;\n\n                            that.ownerElement[propertyName] = value;\n                        }\n                    });\n                };\n\n                for (var j = 0; j < propertyNames.length; j += 1) {\n                    _loop3(j);\n                }\n\n                module.isDefined = true;\n            }\n        }, {\n            key: 'getStaticMember',\n            value: function getStaticMember(memberName) {\n                var that = this;\n                var element = window.JQX[that.elementName];\n\n                var staticMember = element[memberName];\n                var inheritedStaticMember = {};\n                var baseProto = Object.getPrototypeOf(element);\n\n                while (baseProto[memberName]) {\n                    inheritedStaticMember = Utilities.Core.assign(inheritedStaticMember, baseProto[memberName]);\n                    baseProto = Object.getPrototypeOf(baseProto);\n                }\n\n                return Utilities.Core.assign(inheritedStaticMember, staticMember);\n            }\n\n            /** Defines the element properties, methods and modules. */\n\n        }, {\n            key: 'defineElement',\n            value: function defineElement() {\n                var that = this;\n                var proto = that.constructor.prototype;\n                var properties = that.getStaticMember('properties');\n                var methods = Object.getOwnPropertyNames(proto);\n\n                proto.extendedProperties = {};\n                proto.boundProperties = {};\n                proto.templateListeners = {};\n\n                that.defineElementModules();\n                that.defineElementMethods(methods, proto);\n                that.defineElementProperties(properties);\n\n                /* Initialization of element's instance properties. */\n                proto._initElement = function () {\n                    var that = this;\n\n                    var properties = proto.extendedProperties;\n                    var propertyNames = Object.keys(properties);\n                    var modules = that.modules;\n\n                    that.$ = Utilities.Extend(that);\n                    that.$document = $document;\n\n                    that.modulesList = [];\n                    that._properties = [];\n                    that.propertyByAttributeName = [];\n\n                    for (var i = 0; i < modules.length; i += 1) {\n                        var module = modules[i];\n                        var moduleInstance = new module();\n                        moduleInstance._initModule(that);\n                        that.modulesList.push(moduleInstance);\n                    }\n\n                    var _loop4 = function _loop4(_i4) {\n                        var propertyName = propertyNames[_i4];\n                        var property = properties[propertyName];\n                        var defaultValue = property.value;\n\n                        if (isOldChrome && propertyName === 'innerHTML') {\n                            delete that[propertyName];\n                        }\n\n                        that._properties[propertyName] = {\n                            name: propertyName,\n                            notify: property.notify,\n                            allowedValues: property.allowedValues,\n                            type: property.type,\n                            nullable: property.nullable,\n                            reflectToAttribute: property.reflectToAttribute,\n                            defaultReflectToAttribute: property.defaultReflectToAttribute,\n                            value: defaultValue,\n                            readOnly: property.readOnly,\n                            defaultValue: defaultValue,\n                            attributeName: property.attributeName,\n                            observer: property.observer,\n                            inherit: property.inherit,\n                            extend: property.extend,\n                            validator: property.validator\n                        };\n\n                        that.propertyByAttributeName[property.attributeName] = that._properties[propertyName];\n\n                        if (!property.hasOwnProperty('type')) {\n                            var localizedError = that.localize('propertyUnknownType', { name: propertyName });\n                            that.log(localizedError);\n                        }\n\n                        if (property.type === 'any') {\n                            return 'continue';\n                        }\n\n                        var defaultValueType = Utilities.Types.getType(defaultValue);\n                        if (defaultValue !== undefined && defaultValue !== null && property.type !== defaultValueType && !property.validator) {\n                            if (property.type === 'object' && defaultValueType === 'array') {\n                                return 'continue';\n                            }\n\n                            if (defaultValueType === 'number') {\n                                var types = ['integer', 'int', 'float'];\n                                var propertyIndex = types.findIndex(function (type) {\n                                    return type === property.type;\n                                });\n\n                                if (propertyIndex >= 0) {\n                                    return 'continue';\n                                }\n                            }\n                            var _localizedError = that.localize('propertyInvalidValueType', { name: propertyName, actualType: defaultValueType, type: property.type });\n                            that.log(_localizedError);\n                        }\n                    };\n\n                    for (var _i4 = 0; _i4 < propertyNames.length; _i4 += 1) {\n                        var _ret5 = _loop4(_i4);\n\n                        if (_ret5 === 'continue') continue;\n                    }\n                };\n\n                /* Calls the registered method. It is useful for one-time configuration. */\n                proto.registered();\n            }\n\n            /**\r\n             * Defines Element's methods. \r\n             * {Array} - methods.\r\n             * {Object} - method owner's prototype.\r\n             */\n\n        }, {\n            key: 'defineElementMethods',\n            value: function defineElementMethods(methods, proto) {\n                var that = this;\n                var elementProto = that.constructor.prototype;\n\n                var invokeMethod = function invokeMethod(method, methodName) {\n                    var args = Array.prototype.slice.call(arguments, 2);\n\n                    var elementMethod = function elementMethod() {\n                        /* Raise an exception when the method is invoked while the element is not in Ready state. */\n                        if (!this.isReady && methodName !== 'localize' && methodName !== 'log') {\n                            var localizedError = this.localize('elementNotInDOM');\n                            this.log(localizedError);\n                        }\n\n                        var methodContext = this;\n                        for (var i = 0; i < this.modulesList.length; i++) {\n                            var module = this.modulesList[i];\n                            if (methodName in module) {\n                                methodContext = module;\n                                break;\n                            }\n                        }\n\n                        var context = this.context;\n                        this.context = this;\n                        var result = method.apply(methodContext, args.concat(Array.prototype.slice.call(arguments)));\n                        this.context = context;\n\n                        return result;\n                    };\n\n                    return elementMethod;\n                };\n\n                /* Exclude these methods. */\n                var excludeMethods = ['constructor', 'ready', 'created', 'attached', 'detached', 'appendChild', 'insertBefore', 'removeChild', 'propertyChangedHandler'];\n\n                /* Wrap Custom Element's methods. */\n\n                var _loop5 = function _loop5(index) {\n                    var methodName = methods[index];\n\n                    if (methodName.startsWith('_') || excludeMethods.find(function (excludeMethodName) {\n                        return excludeMethodName === methodName;\n                    }) !== undefined) {\n                        return 'continue';\n                    }\n\n                    if (elementProto.extendedProperties[methodName]) return 'continue';\n\n                    if (!Utilities.Types.isFunction(proto[methodName])) return 'continue';\n\n                    elementProto[methodName] = invokeMethod(proto[methodName], methodName);\n                };\n\n                for (var index in methods) {\n                    var _ret6 = _loop5(index);\n\n                    if (_ret6 === 'continue') continue;\n                }\n            }\n\n            /** Defines the custom element's properties. The function is called once when an element's script file is referred. */\n\n        }, {\n            key: 'defineElementProperties',\n            value: function defineElementProperties(properties) {\n                if (!properties) {\n                    return;\n                }\n\n                var that = this;\n                var proto = that.constructor.prototype;\n                var propertyNames = Object.keys(properties);\n                var defaultProperties = that.getStaticMember('properties');\n\n                Object.assign(proto.extendedProperties, properties);\n\n                /* Called when a property is set. Updates the property and synchronizes with the attribute. */\n                var updateProperty = function updateProperty(context, property, value) {\n                    var that = context;\n\n                    if (property.readOnly) {\n                        return;\n                    }\n\n                    /* Raises an exception when the new value is not in the allowedValues list. */\n                    if (property.allowedValues) {\n                        var isValidValue = false;\n\n                        for (var i = 0; i < property.allowedValues.length; i++) {\n                            if (property.allowedValues[i] === value) {\n                                isValidValue = true;\n                                break;\n                            }\n                        }\n\n                        if (!isValidValue) {\n                            var allowedValuesString = JSON.stringify(property.allowedValues).replace(/\\[|\\]/gi, '').replace(',', ', ').replace(/\"/gi, '\\'');\n                            var actualValueString = '\\'' + value + '\\'';\n                            var localizedError = that.localize('propertyInvalidValue', { name: property.name, actualValue: actualValueString, value: allowedValuesString });\n\n                            that.log(localizedError);\n                            return;\n                        }\n                    }\n\n                    var propertyName = property.name;\n                    var oldValue = that._properties[propertyName].value;\n\n                    /* Calls the property's validator, if defined. */\n                    if (property.validator) {\n                        if (that[property.validator]) {\n                            that.context = that;\n                            var validatedResult = that[property.validator](oldValue, value);\n                            if (validatedResult !== undefined) {\n                                value = validatedResult;\n                            }\n\n                            that.context = document;\n                        }\n                    }\n\n                    if (oldValue === value) {\n                        return;\n                    }\n\n                    if (!property.hasOwnProperty('type')) {\n                        var _localizedError2 = that.localize('propertyUnknownType', { name: propertyName });\n                        that.log(_localizedError2);\n                    }\n\n                    if (property.type === 'array' && '' + oldValue === '' + value) {\n                        return;\n                    }\n\n                    if (value !== undefined && value !== null && property.type !== 'any' && property.type !== Utilities.Types.getType(value) && !property.validator || value === null && !property.nullable) {\n                        var throwError = true;\n\n                        if (property.type === 'object' && Utilities.Types.getType(value) === 'array') {\n                            throwError = false;\n                        }\n\n                        if (Utilities.Types.getType(value) === 'number') {\n                            var types = ['integer', 'int', 'float'];\n                            var propertyIndex = types.findIndex(function (type) {\n                                return type === property.type;\n                            });\n\n                            if (propertyIndex >= 0) {\n                                throwError = false;\n                            }\n                        }\n\n                        if (throwError) {\n                            var _localizedError3 = that.localize('propertyInvalidValueType', { name: propertyName, actualType: Utilities.Types.getType(value), type: property.type });\n                            that.log(_localizedError3);\n                            return;\n                        }\n                    }\n\n                    property.isUpdating = true;\n                    that._properties[propertyName].value = value;\n\n                    /* Updates the element's attribute value. */\n                    if (!property.isUpdatingFromAttribute && property.reflectToAttribute) {\n                        that.$.setAttributeValue(property.attributeName, value, property.type);\n                    }\n\n                    /* Calls the element's propertyChangedHandler function when the element is in Ready state and the property is observed. */\n                    var isReady = that.isReady && (!that.ownerElement || that.ownerElement && that.ownerElement.isReady);\n\n                    if (isReady) {\n                        if (that.context !== that) {\n                            /* Setting context to that prevents calling propertyChangedHandler, if the custom element's developer\r\n                             * sets another element property within the propertyChangedHandler. \r\n                            */\n                            that.context = that;\n                            that.propertyChangedHandler(propertyName, oldValue, value);\n                            that.context = document;\n\n                            /* Calls the property's observer, if defined. */\n                            if (property.observer) {\n                                if (that[property.observer]) {\n                                    that.context = that;\n                                    that[property.observer](oldValue, value);\n                                    that.context = document;\n                                }\n                            }\n\n                            if (that._watch && that._watch.properties.indexOf(propertyName) >= 0) {\n                                that._watch.propertyChangedCallback(propertyName, oldValue, value);\n                            }\n                        }\n\n                        /* Dispatch an event when property's notify member is set. */\n                        var notify = property.notify || that.boundProperties[propertyName];\n                        if (notify) {\n                            that.$.fireEvent(property.attributeName + '-changed', { oldValue: oldValue, value: value });\n                            if (that.boundProperties[propertyName]) {\n                                that.updateBoundNodes(propertyName);\n                            }\n                        }\n                    }\n                    property.isUpdating = false;\n                };\n\n                /* Defines element's properties. */\n\n                var _loop6 = function _loop6(i) {\n                    var propertyName = propertyNames[i];\n                    var property = properties[propertyName];\n                    var attributeName = Utilities.Core.toDash(propertyName);\n                    var type = property.type || 'any';\n                    var nullable = type.indexOf('?') >= 0 || type === 'any';\n\n                    if (nullable && type !== 'any') {\n                        property.type = type.substring(0, type.length - 1);\n                    }\n\n                    property.nullable = nullable;\n                    property.attributeName = attributeName.toLowerCase();\n                    property.name = propertyName;\n                    property.reflectToAttribute = property.reflectToAttribute !== undefined ? property.reflectToAttribute : true;\n\n                    if (property.inherit && defaultProperties[propertyName]) {\n                        property.value = defaultProperties[propertyName].value;\n                    }\n\n                    if (property.extend && defaultProperties[propertyName]) {\n                        Utilities.Core.assign(property.value, defaultProperties[propertyName].value);\n                    }\n\n                    if (proto.hasOwnProperty(propertyName)) {\n                        return 'continue';\n                    }\n\n                    Object.defineProperty(proto, propertyName, {\n                        configurable: false,\n                        enumerable: true,\n                        get: function get() {\n                            var that = this;\n\n                            return that._properties[propertyName].value;\n                        },\n                        set: function set(value) {\n                            var that = this;\n\n                            updateProperty(that, that._properties[propertyName], value);\n                        }\n                    });\n                };\n\n                for (var i = 0; i < propertyNames.length; i += 1) {\n                    var _ret7 = _loop6(i);\n\n                    if (_ret7 === 'continue') continue;\n                }\n            }\n        }, {\n            key: 'properties',\n            get: function get() {\n                var that = this;\n\n                if (!that._properties) {\n                    that._properties = [];\n                }\n\n                return that._properties;\n            }\n\n            /**\r\n             * Gets the element's parents.\r\n             *\r\n             * @return {Array<HTMLElement>} - element's parents.\r\n             */\n\n        }, {\n            key: 'parents',\n            get: function get() {\n                var that = this;\n\n                var matched = [],\n                    current = that.parentNode;\n\n                while (current && current.nodeType !== 9) {\n                    if (current instanceof HTMLElement === true) {\n                        matched.push(current);\n                    }\n                    current = current.parentNode;\n                }\n                return matched;\n            }\n        }], [{\n            key: 'properties',\n\n            /**\r\n             * Element's properties.\r\n             *\r\n             * @return {Object} - element's properties.\r\n             */\n            get: function get() {\n                return {\n                    'disabled': {\n                        value: false,\n                        type: 'boolean'\n                    },\n                    'rightToLeft': {\n                        value: false,\n                        type: 'boolean'\n                    },\n                    'messages': {\n                        value: {\n                            'en': {\n                                'propertyUnknownType': '\\'{{name}}\\' property is with undefined \\'type\\' member!',\n                                'propertyInvalidValue': 'Invalid \\'{{name}}\\' property value! Actual value: {{actualValue}}, Expected value: {{value}}!',\n                                'propertyInvalidValueType': 'Invalid \\'{{name}}\\' property value type! Actual type: {{actualType}}, Expected type: {{type}}!',\n                                'elementNotInDOM': 'Element does not exist in DOM! Please, add the element to the DOM, before invoking a method.',\n                                'moduleUndefined': 'Module is undefined.'\n                            }\n                        },\n                        reflectToAttribute: false,\n                        type: 'object'\n                    }\n                };\n            }\n\n            /**\r\n             * Element's listeners.\r\n             *\r\n             * @return {Object} - element's listeners.\r\n             */\n\n        }, {\n            key: 'listeners',\n            get: function get() {\n                return {};\n            }\n\n            /**\r\n             * Element's modules.\r\n             *\r\n             * @return {Array<Module>} - element's modules.\r\n             */\n\n        }, {\n            key: 'modules',\n            get: function get() {\n                return window.JQX.Modules;\n            }\n        }]);\n        return BaseElement;\n    }(HTMLElement);\n\n    var customElements = [];\n    var registeredCallbacks = [];\n    var registeredLoadedCallbacks = [];\n    var isOldChrome = false;\n\n    var chromeAgent = navigator.userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./);\n    if (chromeAgent) {\n        var chromeVersion = parseInt(chromeAgent[2], 10);\n        if (chromeVersion <= 50) {\n            isOldChrome = true;\n        }\n    }\n\n    //const isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\n    var supportsCustomElementsV1 = false; //isChrome && 'customElements' in window;\n    var connectElements = function connectElements() {\n        for (var i = 0; i < registeredLoadedCallbacks.length; i++) {\n            registeredLoadedCallbacks[i]();\n        }\n\n        registeredLoadedCallbacks = [];\n        document.removeEventListener('DOMContentLoaded', connectElements);\n    };\n\n    document.addEventListener('DOMContentLoaded', connectElements);\n\n    var BaseCustomElement = function (_BaseElement) {\n        babelHelpers.inherits(BaseCustomElement, _BaseElement);\n\n        function BaseCustomElement() {\n            babelHelpers.classCallCheck(this, BaseCustomElement);\n            return babelHelpers.possibleConstructorReturn(this, (BaseCustomElement.__proto__ || Object.getPrototypeOf(BaseCustomElement)).apply(this, arguments));\n        }\n\n        babelHelpers.createClass(BaseCustomElement, [{\n            key: 'createdCallback',\n\n            /** Called when an instance of the custom element is created. */\n            value: function createdCallback() {\n                /*  initialization code goes here. */\n                var that = this;\n\n                that.created();\n            }\n\n            /** Called when an instance of custom element is attached to the DOM. */\n\n        }, {\n            key: 'attachedCallback',\n            value: function attachedCallback() {\n                var that = this;\n\n                if (document.readyState !== 'loading') {\n                    that.setup();\n                } else {\n                    registeredLoadedCallbacks.push(function () {\n                        if (this.isReady) {\n                            return;\n                        }\n\n                        this.setup();\n                    }.bind(that));\n                }\n            }\n\n            /** Called when an instance of custom element is detached from the DOM. V0 spec. */\n\n        }, {\n            key: 'detachedCallback',\n            value: function detachedCallback() {\n                var that = this;\n\n                that.detached();\n            }\n        }]);\n        return BaseCustomElement;\n    }(BaseElement);\n\n    var BaseCustomElementV1 = function (_BaseElement2) {\n        babelHelpers.inherits(BaseCustomElementV1, _BaseElement2);\n        babelHelpers.createClass(BaseCustomElementV1, [{\n            key: 'scopedStyle',\n            value: function scopedStyle() {\n                var scopedStyle = '\\n                :host {\\n                    display: block;\\n                    overflow: hidden;\\n                }\\n                :host, :host > *:first-child, :host > * {\\n                    box-sizing: border-box;\\n                }\\n                :host[disabled] {\\n                    opacity: 0.55;\\n                    cursor: default;\\n                }\\n                .jqx-container {\\n                    box-sizing: border-box;\\n                    font-family: Arial, sans-serif;\\n                    font-size: inherit;\\n                    display: block;\\n                    width: 100%;\\n                    height: 100%;\\n                    outline: none;\\n                    margin: 0;\\n                    padding: 0;\\n                }\\n            ';\n                return scopedStyle;\n            }\n        }, {\n            key: 'addExternalStylesheet',\n            value: function addExternalStylesheet(path) {\n                var that = this;\n\n                if (!that.shadowRoot || !path) {\n                    return;\n                }\n\n                var link = document.createElement('link');\n\n                link.rel = 'stylesheet';\n                link.type = 'text/css';\n                link.href = path;\n\n                that.shadowRoot.insertBefore(link, that.shadowRoot.firstChild);\n            }\n        }, {\n            key: 'attributeChanged',\n            value: function attributeChanged(name, oldValue, newValue) {\n                if (name === 'external-style') {\n                    this.externalStyle = newValue;\n                }\n            }\n        }, {\n            key: 'attributeChangedCallback',\n            value: function attributeChangedCallback(name, oldValue, newValue) {\n                var that = this;\n\n                if (!that.isReady) {\n                    return;\n                }\n\n                babelHelpers.get(BaseCustomElementV1.prototype.__proto__ || Object.getPrototypeOf(BaseCustomElementV1.prototype), 'attributeChangedCallback', this).call(this, name, oldValue, newValue);\n            }\n            /** Called when an instance of the custom element is created. */\n\n        }, {\n            key: 'externalStyle',\n            get: function get() {\n                return this._externalStylePath;\n            },\n            set: function set(path) {\n                this._externalStylePath = path;\n            }\n        }], [{\n            key: 'observedAttributes',\n            get: function get() {\n                var that = this;\n                var observedAttributes = ['external-style'];\n\n                for (var _propertyName2 in that.prototype.extendedProperties) {\n                    var propertyConfig = that.prototype.extendedProperties[_propertyName2];\n\n                    observedAttributes.push(propertyConfig.attributeName);\n                }\n\n                return observedAttributes;\n            }\n        }]);\n\n        function BaseCustomElementV1() {\n            babelHelpers.classCallCheck(this, BaseCustomElementV1);\n\n            /*  initialization code goes here. */\n            var _this4 = babelHelpers.possibleConstructorReturn(this, (BaseCustomElementV1.__proto__ || Object.getPrototypeOf(BaseCustomElementV1)).call(this));\n\n            var that = _this4;\n\n            that._externalStylePath = '';\n            // Uncomment when scopedStyle is implemented in all elements.\n            //that.attachShadow({ mode: 'open' });\n            that.created();\n            return _this4;\n        }\n\n        babelHelpers.createClass(BaseCustomElementV1, [{\n            key: 'connect',\n            value: function connect() {\n                var that = this;\n\n                var isReady = that.isReady;\n                var templateStyle = void 0;\n\n                if (!isReady) {\n                    if (that.children.length > 0 && that.children[0] instanceof HTMLStyleElement) {\n                        templateStyle = that.children[0];\n                        that.removeChild(templateStyle);\n                    }\n                }\n\n                that.setup();\n\n                if (!isReady && that.shadowRoot) {\n                    if (templateStyle) {\n                        that.shadowRoot.insertBefore(templateStyle, that.shadowRoot.firstChild);\n                    }\n\n                    that.addExternalStylesheet(that._externalStylePath);\n\n                    var scopedStyle = document.createElement('style');\n                    scopedStyle.innerHTML = that.scopedStyle();\n                    that.shadowRoot.insertBefore(scopedStyle, that.shadowRoot.firstChild);\n                }\n            }\n            /** Called when an instance of custom element is attached to the DOM. */\n\n        }, {\n            key: 'connectedCallback',\n            value: function connectedCallback() {\n                var that = this;\n\n                if (document.readyState !== 'loading') {\n                    that.connect();\n                } else {\n                    registeredLoadedCallbacks.push(function () {\n                        if (this.isReady) {\n                            return;\n                        }\n\n                        this.connect();\n                    }.bind(that));\n                }\n            }\n\n            /** Called when an instance of custom element is attached to the DOM. */\n\n        }, {\n            key: 'adoptedCallback',\n            value: function adoptedCallback() {\n                var that = this;\n\n                that.setup();\n            }\n        }, {\n            key: 'appendTemplate',\n            value: function appendTemplate(template) {\n                var that = this;\n\n                if (that.shadowRoot) {\n                    that.shadowRoot.appendChild(template);\n                } else {\n                    that.appendChild(template);\n                }\n            }\n        }]);\n        return BaseCustomElementV1;\n    }(BaseElement);\n\n    /**\r\n     * This is a base class for registration of custom elements.\r\n     */\n\n\n    var ElementRegistry = function () {\n        function ElementRegistry() {\n            babelHelpers.classCallCheck(this, ElementRegistry);\n        }\n\n        babelHelpers.createClass(ElementRegistry, null, [{\n            key: 'register',\n\n            /**\r\n             * Called by each custom element to register it. \r\n               @param {String} - tag name.\r\n               @param {Object} - element's object like Button, NumericTextBox, etc.\r\n             */\n            value: function register(tagName, element) {\n                var proto = element.prototype;\n                var elementName = Core.toCamelCase(tagName).replace(/[a-z]+/, '');\n\n                if (customElements[tagName]) {\n                    return;\n                }\n\n                customElements[tagName] = window.JQX[elementName] = element;\n                proto.elementName = elementName;\n                proto.defineElement();\n                if (registeredCallbacks[tagName]) {\n                    registeredCallbacks[tagName](proto);\n                }\n\n                /** Use customElements v1 spec, if it is supported. */\n                if (supportsCustomElementsV1) {\n                    window.customElements.define(tagName, element);\n                    return;\n                }\n\n                document.registerElement(tagName, element);\n            }\n        }, {\n            key: 'registerElements',\n            value: function registerElements() {\n                var that = this;\n\n                if (!that.toRegister) {\n                    return;\n                }\n\n                for (var i = 0; i < that.toRegister.length; i++) {\n                    var toRegisterItem = that.toRegister[i];\n\n                    that.register(toRegisterItem.tagName, toRegisterItem.element);\n                }\n            }\n\n            /**\r\n             * Returns the element's object.\r\n             * @param {String} - tag name.\r\n             * @return {Object} - custom element's object.\r\n             */\n\n        }, {\n            key: 'get',\n            value: function get(tagName) {\n                if (customElements[tagName]) {\n                    return customElements[tagName];\n                }\n                return undefined;\n            }\n\n            /**\r\n             * Determines whether the element is registered.\r\n             * @param {String} - tag name.\r\n             * @param {Function} - the callback function which is called when the element is registered.\r\n             */\n\n        }, {\n            key: 'whenRegistered',\n            value: function whenRegistered(tagName, callback) {\n                var that = this;\n\n                if (!registeredCallbacks[tagName]) {\n                    registeredCallbacks[tagName] = function (proto) {\n                        callback(proto);\n                    };\n                    if (that.get(tagName)) {\n                        registeredCallbacks[tagName](that.get(tagName).prototype);\n                    }\n                } else {\n                    registeredCallbacks[tagName](that.get(tagName).prototype);\n                }\n                if (!tagName) {\n                    throw new Error('Syntax Error: Invalid tag name');\n                }\n            }\n        }]);\n        return ElementRegistry;\n    }();\n\n    ElementRegistry.lazyRegister = false;\n\n    /*\r\n     * Defines the 'JQX' namespace.\r\n     * @param {String} - the tag's name.\r\n     * @param {Object} - the custom element.\r\n     */\n    window.JQX = function (tagName, element) {\n        if (ElementRegistry.lazyRegister) {\n            if (!ElementRegistry.toRegister) {\n                ElementRegistry.toRegister = [];\n            }\n\n            var elementName = Core.toCamelCase(tagName).replace(/[a-z]+/, '');\n            window.JQX[elementName] = element;\n\n            ElementRegistry.toRegister.push({ tagName: tagName, element: element });\n            return;\n        }\n\n        ElementRegistry.register(tagName, element);\n    };\n\n    Object.assign(window.JQX, {\n        Elements: ElementRegistry,\n        Modules: [ErrorModule, LocalizationModule, BindingModule],\n        BaseElement: supportsCustomElementsV1 ? BaseCustomElementV1 : BaseCustomElement,\n        Utilities: Utilities,\n        Version: '1.3.23'\n    });\n\n    /**\r\n    * Content element.\r\n    */\n    window.JQX('jqx-content-element', function (_window$JQX$BaseEleme) {\n        babelHelpers.inherits(ContentElement, _window$JQX$BaseEleme);\n\n        function ContentElement() {\n            babelHelpers.classCallCheck(this, ContentElement);\n            return babelHelpers.possibleConstructorReturn(this, (ContentElement.__proto__ || Object.getPrototypeOf(ContentElement)).apply(this, arguments));\n        }\n\n        babelHelpers.createClass(ContentElement, [{\n            key: 'template',\n\n\n            /** Content Element's template. */\n            value: function template() {\n                return '<div inner-h-t-m-l=\\'[[innerHTML]]\\'></div>';\n            }\n        }, {\n            key: 'ready',\n            value: function ready() {\n                babelHelpers.get(ContentElement.prototype.__proto__ || Object.getPrototypeOf(ContentElement.prototype), 'ready', this).call(this);\n\n                var that = this;\n                that.applyContent();\n            }\n        }, {\n            key: 'clearContent',\n            value: function clearContent() {\n                var that = this;\n\n                while (that.$.content.firstChild) {\n                    that.$.content.removeChild(that.$.content.firstChild);\n                }\n            }\n        }, {\n            key: 'applyContent',\n            value: function applyContent() {\n                var that = this;\n\n                if (that.content === undefined) {\n                    that.content = that.$.content;\n                    return;\n                }\n\n                if (that.content === '' || that.content === null) {\n                    that.clearContent();\n                    return;\n                }\n\n                if (that.content instanceof HTMLElement) {\n                    that.clearContent();\n                    that.$.content.appendChild(that.content);\n                    return;\n                }\n\n                var fragment = document.createDocumentFragment();\n\n                /* Create a wrapper DIV tag. */\n                var tmpElement = document.createElement('div');\n                fragment.appendChild(tmpElement);\n\n                /* Fill the nodes array with the wrapper's childNodes. */\n                if (that.content instanceof HTMLElement) {\n                    tmpElement.appendChild(that.content);\n                } else {\n                    tmpElement.innerHTML = that.content;\n                }\n\n                var nodes = tmpElement.childNodes;\n\n                /* Remove the wrapper DIV tag. */\n                tmpElement.parentNode.removeChild(tmpElement);\n\n                /* Add the nodes to the fragment. */\n                while (nodes.length) {\n                    fragment.appendChild(nodes[0]);\n                }\n\n                that.clearContent();\n                that.$.content.appendChild(fragment);\n            }\n        }, {\n            key: 'propertyChangedHandler',\n            value: function propertyChangedHandler(propertyName, oldValue, newValue) {\n                babelHelpers.get(ContentElement.prototype.__proto__ || Object.getPrototypeOf(ContentElement.prototype), 'propertyChangedHandler', this).call(this, propertyName, oldValue, newValue);\n\n                var that = this;\n\n                if (oldValue === newValue) {\n                    return;\n                }\n\n                if (propertyName === 'innerHTML') {\n                    that.content = newValue;\n                    that.applyContent();\n                }\n\n                if (propertyName === 'content') {\n                    that.applyContent();\n                }\n            }\n        }], [{\n            key: 'properties',\n\n            // Button's properties.\n            get: function get() {\n                return {\n                    'content': {\n                        type: 'any',\n                        reflectToAttribute: false\n                    },\n                    'innerHTML': {\n                        type: 'string',\n                        reflectToAttribute: false\n                    }\n                };\n            }\n        }]);\n        return ContentElement;\n    }(window.JQX.BaseElement));\n})();"]}