{"version":3,"sources":["ni-graph-legend.js","ni-legend-helpers.js","ni-light-plot-legend.js","ni-plot-legend.js","ni-plot-legend-helpers.js","ni-plot-legend-item-display.js","ni-cursor-legend.js","ni-cursor-legend-item-display.js","ni-cursor-legend-helpers.js","ni-scale-legend.js","ni-scale-legend-helpers.js","ni-graph-tools.js"],"names":["NationalInstruments","HtmlVI","Elements","GraphLegend","window","JQX","BaseElement","properties","Object","assign","super","graphRef","value","type","isInEditMode","[object Object]","document","querySelector","this","NI_SUPPORT","NISupport","$","Globals","jQuery","LegendHelpers","helpers","legendItemDisplay","proto","prototype","addButtons","menuItem","div","index","btn","current","that","children","forEach","createElement","className","jqxToggleButton","toggled","cssClass","classList","add","on","handleClick","name","updateShape","state","getState","undefined","appendChild","addComboBox","iconWidth","i","selectedIndex","init","jqxDropDownList","width","dropDownHeight","length","text","i18n","tag","substring","id","html","event","args","item","label","getTextElementByColor","color","hex","element","foreColor","r","g","b","css","addClass","addColorBox","dropList","append","colorbox","jqxColorPicker","height","colorMode","e","jqxDropDownButton","parsedColor","parse","jqx","rgb","addCheckBox","jqxCheckBox","checked","show","position","propertyName","oldValue","newValue","propertyChangedHandler","graphElement","findGraph","hasChildNodes","removeChild","firstChild","updateGraphConfig","whenRegistered","addModule","NILightLegendModule","moduleName","settings","ownerElement","getSettingsWorkaround","legend","findLegend","legendSettings","container","lastChild","getLegendContainer","margin","createLegendRow","createRow","tbl","nPlots","addRenderer","removeLegendRow","removeRow","clearRenderer","mode","created","currentExpander","PlotLegendHelpers","plotLegendItemDisplay","PlotLegendItemDisplay","uihelpers","deferLegendUpdates","graph","graphPlots","plots","enableThrottling","throttlePlotUpdates","detachFromGraph","isReady","createRows","registerPlotLegend","clearCache","removeRows","childElement","attached","style","overflowX","overflowY","addEventListener","plotAdded","evt","source","detail","originalSource","getIndex","plotRemoved","updatePlotName","getPlotName","rendererToIndex","plotCount","attachToGraph","tr","exp","header","content","plotName","p","span","createHeaderDisplay","getPlot","createTextNode","jqxExpander","expanded","disabled","expandAnimationDuration","collapseAnimationDuration","initContent","loadContent","expander","applyFont","titles","find","j","td1","td2","menu","row","removeHeaderDisplay","fontSize","fontFamily","fontWeight","fontStyle","textDecoration","firstElementChild","thisRef","jqrefContent","jqrefItemTitle","jqrefItemContentTitle","font-size","font-family","font-weight","font-style","plotLegend","each","defaultPlotColors","CartesianGraph","lineStyleValues","dot","dashdot","mediumdash","largedash","solid","renderers","child","plot","childNodes","localName","_parentGraph","indexOf","getRenderer","renderer","lastElementChild","itemName","arg","initialColor","lineStroke","pointColor","barFill","areaFill","lineWidth","pointShape","lineStyle","areaBaseLine","barBaseLine","enableHover","getPlotColorFromRenderer","getPlotColor","getLineWidth","getLineShape","lineShape","getLineStyle","getPointShape","pointTypes","creator","createEllipseShape","createRectangleShape","createDiamondShape","createCrossShape","createPlusShape","lineTypes","createLine","createFillArea","createBars","createPoints","shapes","svgns","svg","createElementNS","setAttribute","setAttributeNS","shapesGroup","createLineTypes","splice","shape","line","fill","bar","group","points","x","y","pointGroups","center","size","path","updateLinesAttributes","updatePointVisibility","currentLineShape","currentPointShape","updateVisibility","table","selectedRow","addButton","deleteButton","centerButton","currentRow","currentBtn","observer","CursorLegendHelpers","cursorLegendItemDisplay","CursorLegendItemDisplay","cursor","cursorAdded","cursorPositionChanged","data","updatePosition","cursorNumber","niControlId","xEl","yEl","textValue","formatCursorPosition","innerText","xTextValue","yTextValue","eq","remove","clearShape","cursorRemoved","updateName","updateVisible","removeClass","registerCursorLegend","uniqueId","buttonsRow","jqxButton","addCursor","cursorChanged","cursors","getCursor","createMainRow","createDetailsRow","display","td0","td3","td4","button","showHideButton","parseFloat","title","class","subtable","td","colSpan","createDetailsItem","getMenuItem","jqrefItemName","jqrefItemX","jqrefItemY","jqrefItemDetails","cursorLegend","items","addShapes","push","makeShape","makeCursorCross","crosshairStyle","makeLine","rect","circle","targetShape","getComputedStyle","x1","y1","x2","y2","defaultCursorName","showValue","nextCursorName","changed","Error","maxIndex","parseInt","deleteCursor","snapToPlot","setColor","getTargetShape","getCrosshair","nScales","ScaleLegendHelpers","scale","scaleToIndex","addScale","toRemove","clearScale","getScale","scaleRemoved","registerScaleLegend","scaleAdded","labels","lockButtons","first","setLockBackground","btnLock","btnResetOffset","scaleName","scaleLegend","prop","scales","autoScale","initialAutoscale","resetOffset","setupGrid","draw","MODE_ENUM","freeze","LOCKED","PAN","ZOOM","navigationStates","ready","addListeners","registerGraphTools","axes","axis","CartesianAxis","syncWithFlot","ranges","getAxes","options","disableZoom","selection","opts","offsetBelow","from","min","offsetAbove","to","max","offset","below","above","applySelection","clearSelection","updateCartesianAxesFromFlot","CartesianGraphBase","detached","empty","userBackgroundColor","failureCallback","sources","graphCanvas","getCanvas","backgroundSVG","graphSVG","getSurface","SVGContainer","cursorsFlotOverlay","getEventHolder","cursorThumbs","parentGraph","placeholder","getPlaceholder","getSVGForCursorThumbs","legendSVG","containerClassNames","result","searchQuery","getSVGFromLegendLayer","pixelRatio","browser","getPixelRatio","getContext","bkBorderWidth2xScaled","bkBorderWidth","body","insertBefore","svgLeft","getBoundingClientRect","left","scrollX","svgTop","top","scrollY","createBackgroundSVG","rectangle","baseVal","drawARectangleOnSVG","backgroundColor","destinationCanvas","takeGraphSnapshot","then","parentNode","getDisposeBackgroundSVG","getCopyCanvasToImg","canvas","img","src","toDataURL","downloadBlob","blob","url","URL","createObjectURL","currentTime","year","month","date","hours","minutes","seconds","downloadLinkElement","download","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","href","clickEvent","MouseEvent","dispatchEvent","isEdge","msToBlob","toBlob","asyncSnapshot","asyncProcessAllImagesForComposition","removeEventListener","td5","navNone","btnPan","btnZoom","btnZoomOut","btnSnapshot","setMode","states","locked","pan","zoom","apply","downloadSnapshot","eventConfig","bubbles","cancelable","CustomEvent","sendEventToParentGraph"],"mappings":"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","file":"webcharts-legends.min.js","sourcesContent":["\r\n(function() {\r\n    'use strict';\r\n\r\n    class GraphLegend extends window.JQX.BaseElement {\r\n        static get properties() {\r\n            const props = Object.assign({}, super.properties, {\r\n                /** **graph-ref** - the graph id to connect to. Default: ''*/\r\n                'graphRef': {\r\n                    value: '',\r\n                    type: 'string'\r\n                },\r\n                /** **is-in-edit-mode** - makes the legend non-interactive*/\r\n                'isInEditMode': {\r\n                    value: false,\r\n                    type: 'boolean'\r\n                }\r\n            });\r\n\r\n            return props;\r\n        }\r\n\r\n        findGraph() {\r\n            return document.querySelector('ni-cartesian-graph[graph-ref=\\'' + this.graphRef + '\\']') ||\r\n                document.querySelector('ni-chart[graph-ref=\\'' + this.graphRef + '\\']') ||\r\n                document.querySelector('ni-intensity-graph[graph-ref=\\'' + this.graphRef + '\\']') ||\r\n                // eventually the ni-control-id will have to go away\r\n                document.querySelector('ni-cartesian-graph[ni-control-id=\\'' + this.graphRef + '\\']') ||\r\n                document.querySelector('ni-chart[ni-control-id=\\'' + this.graphRef + '\\']') ||\r\n                document.querySelector('ni-intensity-graph[ni-control-id=\\'' + this.graphRef + '\\']');\r\n        }\r\n\r\n        template() {\r\n            return '';\r\n        }\r\n    };\r\n\r\n    NationalInstruments.HtmlVI.Elements.GraphLegend = GraphLegend;\r\n}());\r\n","//****************************************\r\n// Legend Helpers Prototype\r\n// DOM Registration: Not an element\r\n// National Instruments Copyright 2015\r\n//****************************************\r\n\r\n(function () {\r\n    'use strict';\r\n    // Static Private Reference Aliases\r\n    var NI_SUPPORT = NationalInstruments.HtmlVI.NISupport;\r\n    var $ = NationalInstruments.Globals.jQuery;\r\n\r\n    // Constructor Function\r\n    NationalInstruments.HtmlVI.Elements.LegendHelpers = function (helpers, legendItemDisplay) {\r\n        this.helpers = helpers;\r\n        this.legendItemDisplay = legendItemDisplay;\r\n    };\r\n\r\n    // Static Public Variables\r\n    // None\r\n\r\n    var child = NationalInstruments.HtmlVI.Elements.LegendHelpers;\r\n    var proto = child.prototype;\r\n\r\n    // Static Private Variables\r\n    // None\r\n\r\n    // Static Private Functions\r\n    // None\r\n\r\n    // Public Prototype Methods\r\n    proto.addButtons = function (menuItem, div, index) {\r\n        var that = this;\r\n        var btn, current;\r\n        menuItem.children.forEach(function (children) {\r\n            btn = document.createElement('button');\r\n            btn.type = 'button';\r\n            btn.className = 'ni-button';\r\n            $(btn).jqxToggleButton({ toggled: false });\r\n            if (children.cssClass !== '') {\r\n                btn.classList.add(children.cssClass);\r\n            }\r\n\r\n            $(btn).on('click', function () {\r\n                $(current).jqxToggleButton('toggle');\r\n                current = this;\r\n\r\n                that.helpers.handleClick(children.name, null, index);\r\n                that.legendItemDisplay.updateShape(index);\r\n            });\r\n\r\n            var state = that.helpers.getState(children.name, index);\r\n            if (state !== undefined) {\r\n                $(btn).jqxToggleButton({ 'toggled': state });\r\n                if (state === true) {\r\n                    current = btn;\r\n                }\r\n            }\r\n\r\n            div.appendChild(btn);\r\n        });\r\n    };\r\n\r\n    proto.addComboBox = function (menuItem, div, index, iconWidth) {\r\n        var that = this;\r\n        var i, selectedIndex = 0, init = true;\r\n        $(div).jqxDropDownList(\r\n            {\r\n                width: '100%',\r\n                dropDownHeight: menuItem.children.length * 26\r\n            });\r\n        for (i = 0; i < menuItem.children.length; i++) {\r\n            var text = NI_SUPPORT.i18n(menuItem.children[i].tag);\r\n            if (text.substring(0, 5) === '[msg_') { // in case server is not running\r\n                text = menuItem.name;\r\n            }\r\n\r\n            $(div).jqxDropDownList('addItem', { id: menuItem.children[i].name, html: '<div style=\"width: 100%\"><span class=\"ni-selector-title\">' + text + '</span><div class=\"ni-selector-icon ' + menuItem.children[i].cssClass + '\"' + ' style=\"background-size: ' + iconWidth + 'px 16px; width: ' + (iconWidth + 4) + 'px; \"></div></div>' });\r\n            var itemState = this.helpers.getState(menuItem.children[i].name, index);\r\n            if (itemState === true) {\r\n                selectedIndex = i;\r\n            }\r\n        }\r\n\r\n        $(div).on('select', function (event) {\r\n            var args = event.args;\r\n            if (init === true) {\r\n                return;\r\n            }\r\n\r\n            that.helpers.handleClick(args.item.label.id, null, index);\r\n            that.legendItemDisplay.updateShape(index);\r\n        });\r\n        $(div).jqxDropDownList({ 'selectedIndex': selectedIndex });\r\n        init = false;\r\n    };\r\n\r\n    proto.getTextElementByColor = function (color) {\r\n        if (color === 'transparent' || color.hex === '') {\r\n            return $('<div class=\"ni-colorbox-content\">transparent</div>');\r\n        }\r\n\r\n        var element = $('<div class=\"ni-colorbox-content\">#' + color.hex + '</div>');\r\n        var nThreshold = 105;\r\n        var bgDelta = (color.r * 0.299) + (color.g * 0.587) + (color.b * 0.114);\r\n        var foreColor = (255 - bgDelta < nThreshold) ? 'Black' : 'White';\r\n        element.css('color', foreColor);\r\n        element.css('background', '#' + color.hex);\r\n        element.addClass('jqx-rc-all');\r\n        return element;\r\n    };\r\n\r\n    proto.addColorBox = function (menuItem, div, index) {\r\n        var that = this;\r\n        var dropList = document.createElement('div');\r\n        $(div).append(dropList);\r\n        var colorbox = document.createElement('div');\r\n        colorbox.className = 'legend-colorbox-colorbox';\r\n        dropList.appendChild(colorbox);\r\n        $(colorbox).jqxColorPicker({\r\n            width: '200px',\r\n            height: '220px',\r\n            colorMode: 'hue'\r\n        });\r\n        $(colorbox).on('colorchange', function (e) {\r\n            $(div).jqxDropDownButton('setContent', that.getTextElementByColor(e.args.color));\r\n            that.helpers.handleClick(menuItem.name, e.args.color, index);\r\n            that.legendItemDisplay.updateShape(index);\r\n        });\r\n        $(div).jqxDropDownButton({\r\n            width: 'inherit'\r\n        });\r\n        var color = this.helpers.getState(menuItem.name, index);\r\n\r\n        var parsedColor = $.color.parse(color);\r\n\r\n        $(div).jqxDropDownButton('setContent', this.getTextElementByColor(new $.jqx.color({ rgb: parsedColor })));\r\n    };\r\n\r\n    proto.addCheckBox = function (menuItem, div, index) {\r\n        var that = this;\r\n        var btn = $(div).jqxCheckBox();\r\n        btn.className = 'legend-checkbox';\r\n        $(btn).on('change', function (e) {\r\n            that.helpers.handleClick(menuItem.name, e.args.checked, index);\r\n        });\r\n        var state = that.helpers.getState(menuItem.name, index);\r\n        if (state !== undefined) {\r\n            $(btn).jqxCheckBox({ checked: state });\r\n        }\r\n    };\r\n}());\r\n","//****************************************\r\n// Light Plot Legend Prototype\r\n// DOM Registration: No\r\n// National Instruments Copyright 2015\r\n//****************************************\r\n\r\n/**\r\n## ni-light-plot-legend\r\n\r\n> A custom element that provides a light legend for showing plot icons and names.\r\n\r\nUse it to visualize the plots of a graph or chart element.\r\n\r\nIt provides an svg image with all the plots of the graphs.\r\n\r\nBy changing position attribute you can place the legend over graph(\"nw\", \"ne\", \"sw\", \"se\"), or\r\ninside a container(\"container\"). Default is \"container\".\r\n\r\nExample:\r\n```html\r\n<ni-cartesian-graph graph-ref=\"g1\" value=\"[[2, 3, 5, 7, 11, 13, 17, 19],\r\n                          [0, 1, 1, 2, 3, 5, 8, 13]]\">\r\n    <ni-cartesian-axis show label=\"Index\" axis-position=\"bottom\"></ni-cartesian-axis>\r\n    <ni-cartesian-axis show label=\"Value\" axis-position=\"left\"></ni-cartesian-axis>\r\n    <ni-cartesian-plot show label=\"Prime Numbers\">\r\n        <ni-cartesian-plot-renderer line-width=\"2\" line-stroke=\"red\">\r\n        </ni-cartesian-plot-renderer>\r\n    </ni-cartesian-plot>\r\n    <ni-cartesian-plot show label=\"Fibonacci Numbers\">\r\n        <ni-cartesian-plot-renderer line-width=\"2\" line-stroke=\"blue\">\r\n        </ni-cartesian-plot-renderer>\r\n    </ni-cartesian-plot>\r\n</ni-cartesian-graph>\r\n\r\n<ni-light-plot-legend show graph-ref=\"g1\" position=\"ne\"></ni-light-plot-legend>\r\n```\r\n*/\r\n\r\n(function() {\r\n    'use strict';\r\n\r\n    class LightPlotLegend extends window.JQX.BaseElement {\r\n        /**### ni-light-plot-legend properties*/\r\n\r\n        static get properties() {\r\n            const props = Object.assign({}, super.properties, {\r\n                /** **show** (boolean) - the visibility of the plot legend. Default: false.\r\n                 Accepted values: true, false*/\r\n                'show': {\r\n                    value: false,\r\n                    type: 'boolean'\r\n                },\r\n                /** **graph-ref** (string) - the graph id to connect to. Default: ''.*/\r\n                'graphRef': {\r\n                    value: '',\r\n                    type: 'string'\r\n                },\r\n                /** **position** (string) - the position where the legend will be placed. Default: 'container'.\r\n                 Accepted values: 'nw', 'ne', 'sw', 'se', 'container'*/\r\n                'position': {\r\n                    value: 'container',\r\n                    type: 'string'\r\n                }\r\n            });\r\n\r\n            return props;\r\n        }\r\n\r\n        findGraph() {\r\n            return document.querySelector('ni-cartesian-graph[graph-ref=\\'' + this.graphRef + '\\']') ||\r\n                document.querySelector('ni-chart[graph-ref=\\'' + this.graphRef + '\\']');\r\n        }\r\n\r\n        propertyChangedHandler(propertyName, oldValue, newValue) {\r\n            super.propertyChangedHandler(propertyName, oldValue, newValue);\r\n            var graphElement = this.findGraph();\r\n            switch (propertyName) {\r\n                case 'position':\r\n                    while (this.hasChildNodes()) {\r\n                        this.removeChild(this.firstChild);\r\n                    }\r\n                    break;\r\n                case 'show':\r\n                    while (this.hasChildNodes()) {\r\n                        this.removeChild(this.firstChild);\r\n                    }\r\n                    break;\r\n            }\r\n            if (graphElement) {\r\n                graphElement.updateGraphConfig();\r\n            }\r\n        };\r\n    };\r\n\r\n    JQX('ni-light-plot-legend', LightPlotLegend);\r\n}());\r\n\r\nJQX.Elements.whenRegistered('ni-cartesian-graph', function(proto) {\r\n    proto.addModule(NILightLegendModule);\r\n});\r\n\r\nJQX.Elements.whenRegistered('ni-chart', function(proto) {\r\n    proto.addModule(NILightLegendModule);\r\n});\r\n\r\nclass NILightLegendModule {\r\n    static get moduleName() {\r\n        return 'NILightLegendModule';\r\n    }\r\n\r\n    getSettings() {\r\n        var settings = this.ownerElement.getSettingsWorkaround();\r\n        var legend = this.findLegend(this.ownerElement.graphRef);\r\n\r\n        if (!legend) {\r\n            return settings;\r\n        }\r\n\r\n        function getLegendContainer(legend) {\r\n            var container = null;\r\n            if (legend.position !== \"nw\" &&\r\n                legend.position !== \"ne\" &&\r\n                legend.position !== \"sw\" &&\r\n                legend.position !== \"se\") {\r\n                if (legend.hasChildNodes()) {\r\n                    container = legend.lastChild;\r\n                } else {\r\n                    container = document.createElement('div');\r\n                    legend.appendChild(container);\r\n                }\r\n            }\r\n\r\n            return container;\r\n        }\r\n\r\n        var legendSettings = {\r\n            show: legend.show,\r\n            container: getLegendContainer(legend), // container (as jQuery object) to put legend in, null means default on top of graph\r\n            position: legend.position,\r\n            margin: 5 // distance from grid edge to default legend container within plot\r\n        };\r\n\r\n        settings.legend = legendSettings;\r\n        return settings;\r\n    }\r\n\r\n    findLegend(graphRef) {\r\n        return document.querySelector('ni-light-plot-legend[graph-ref=\\'' + graphRef + '\\']');\r\n    }\r\n}\r\n","//****************************************\r\n// Plot Legend Prototype\r\n// DOM Registration: No\r\n// National Instruments Copyright 2015\r\n//****************************************\r\n\r\n/**\r\n## ni-plot-legend\r\n\r\n> A custom element that provides a plot legend.\r\n\r\nUse it to visualize and change the plots of a graph or chart element.\r\n\r\nIt provides an expandable list with all the plots of the graphs.\r\n\r\nExpand one of the plots and you get a panel where you can control the\r\nparameters of the plot - like plot style, line width, dash style, colors ...\r\n\r\nExample:\r\n```html\r\n<ni-cartesian-graph graph-ref=\"g1\" value=\"[[2, 3, 5, 7, 11, 13, 17, 19],\r\n                          [0, 1, 1, 2, 3, 5, 8, 13]]\">\r\n    <ni-cartesian-axis show label=\"Index\" axis-position=\"bottom\"></ni-cartesian-axis>\r\n    <ni-cartesian-axis show label=\"Value\" axis-position=\"left\"></ni-cartesian-axis>\r\n    <ni-cartesian-plot show label=\"Prime Numbers\">\r\n        <ni-cartesian-plot-renderer line-width=\"2\" line-stroke=\"red\">\r\n        </ni-cartesian-plot-renderer>\r\n    </ni-cartesian-plot>\r\n    <ni-cartesian-plot show label=\"Fibonacci Numbers\">\r\n        <ni-cartesian-plot-renderer line-width=\"2\" line-stroke=\"blue\">\r\n        </ni-cartesian-plot-renderer>\r\n    </ni-cartesian-plot>\r\n</ni-cartesian-graph>\r\n\r\n<ni-plot-legend graph-ref=\"g1\" mode=\"pan\"></ni-plot-legend>\r\n```\r\n*/\r\n\r\n(function() {\r\n    'use strict';\r\n\r\n    var NI_SUPPORT = NationalInstruments.HtmlVI.NISupport;\r\n    var $ = NationalInstruments.Globals.jQuery;\r\n\r\n    // create a view for a new plot at the end of the legend.\r\n    var createLegendRow = function(legend) {\r\n        legend.createRow(legend.tbl, legend.nPlots);\r\n        legend.helpers.addRenderer(legend.nPlots);\r\n        legend.nPlots++;\r\n    };\r\n\r\n    // remove the view for the plot at the specified index\r\n    var removeLegendRow = function(legend, index) {\r\n        legend.removeRow(legend.tbl, index);\r\n        legend.helpers.clearRenderer(index);\r\n        legend.nPlots--;\r\n    };\r\n\r\n    class PlotLegend extends NationalInstruments.HtmlVI.Elements.GraphLegend {\r\n        /**### ni-plot-legend properties*/\r\n\r\n        /// include ./ni-graph-legend.js\r\n        static get properties() {\r\n            const props = Object.assign({}, super.properties, {\r\n                /** **mode** (string) - the mode of the plot legend. Default: 'full'.\r\n                When in 'compact mode' only the plot icon and the plot name are shown.\r\n                In full mode you can expand the plots and can fully configure them at runtime.\r\n\r\n                Accepted values: 'full', 'compact' */\r\n                'mode': {\r\n                    value: 'full',\r\n                    type: 'string'\r\n                }\r\n            });\r\n\r\n            return props;\r\n        }\r\n\r\n        created() {\r\n            super.created();\r\n\r\n            this.tbl = undefined;\r\n            this.nPlots = 0;\r\n            this.currentExpander = null;\r\n            this.helpers = new NationalInstruments.HtmlVI.Elements.PlotLegendHelpers();\r\n            this.plotLegendItemDisplay = new NationalInstruments.HtmlVI.Elements.PlotLegendItemDisplay(this.helpers);\r\n            this.uihelpers = new NationalInstruments.HtmlVI.Elements.LegendHelpers(this.helpers, this.plotLegendItemDisplay);\r\n            this.deferLegendUpdates = false;\r\n        };\r\n\r\n        // respond to a plot add (unless the updates are defered)\r\n        plotAdded() {\r\n            if (!this.deferLegendUpdates) {\r\n                createLegendRow(this);\r\n            }\r\n        };\r\n\r\n        // respond to a plot remove (unless the updates are defered)\r\n        plotRemoved(index) {\r\n            if (!this.deferLegendUpdates) {\r\n                removeLegendRow(this, index);\r\n            }\r\n        };\r\n\r\n        // call syncPlotLegendWithGraph from time to time, when the updates are defered, to\r\n        // synchronize the legend with the current state of the plots in the graph.\r\n        syncPlotLegendWithGraph() {\r\n            if (this.deferLegendUpdates) {\r\n                var graph = this.findGraph();\r\n                if (!graph) {\r\n                    return;\r\n                }\r\n\r\n                var graphPlots = graph.plots.length;\r\n\r\n                while (graphPlots < this.nPlots) {\r\n                    var index = this.nPlots - 1;\r\n                    removeLegendRow(this, index);\r\n                }\r\n\r\n                while (graphPlots > this.nPlots) {\r\n                    createLegendRow(this);\r\n                }\r\n            }\r\n        };\r\n\r\n        createRows() {\r\n            var i;\r\n            for (i = 0; i < this.nPlots; i++) {\r\n                this.createRow(this.tbl, i);\r\n            }\r\n        };\r\n\r\n        removeRows() {\r\n            var i;\r\n            for (i = this.nPlots - 1; i >= 0; i--) {\r\n                this.removeRow(this.tbl, i);\r\n            }\r\n        };\r\n\r\n        throttlePlotUpdates(enableThrottling) {\r\n            var graph = this.findGraph();\r\n            if (graph !== null) {\r\n                graph.throttlePlotUpdates(enableThrottling);\r\n                this.deferLegendUpdates = enableThrottling;\r\n            }\r\n        };\r\n\r\n        attachToGraph(graphElement) {\r\n            this.detachFromGraph();\r\n            if (graphElement && graphElement.isReady) {\r\n                this.helpers.graph = graphElement;\r\n                this.nPlots = graphElement.plots.length;\r\n                this.createRows();\r\n                graphElement.registerPlotLegend(this);\r\n            }\r\n        };\r\n\r\n        detachFromGraph() {\r\n            this.helpers.clearCache();\r\n            this.helpers.graph = null;\r\n            this.removeRows();\r\n            this.nPlots = 0;\r\n        };\r\n\r\n        attached() {\r\n            var childElement,\r\n                that = this;\r\n\r\n            super.attached();\r\n\r\n            this.helpers.graph = this.findGraph();\r\n            this.helpers.isInEditMode = this.isInEditMode;\r\n            childElement = document.createElement('div');\r\n            childElement.style.width = '100%';\r\n            childElement.style.height = '100%';\r\n            childElement.style.overflowX = 'auto';\r\n            childElement.style.overflowY = 'hidden';\r\n            this.appendChild(childElement);\r\n            this.tbl = document.createElement('table');\r\n            this.tbl.style.width = '100%';\r\n            this.tbl.style.height = '100%';\r\n            childElement.appendChild(this.tbl);\r\n\r\n            this.addEventListener('ni-cartesian-plot-attached', function() {\r\n                that.plotAdded();\r\n                that.helpers.clearCache(); // clears the renderer cache\r\n            });\r\n\r\n            this.addEventListener('ni-cartesian-plot-detached', function(evt) {\r\n                var index;\r\n                var source = evt.detail.originalSource;\r\n                index = that.helpers.getIndex(source);\r\n\r\n                that.plotRemoved(index);\r\n                that.helpers.clearCache(); // clears the renderer cache\r\n            });\r\n\r\n            this.addEventListener('ni-cartesian-plot-changed', function(evt) {\r\n                var index;\r\n                var source = evt.detail.originalSource;\r\n                index = that.helpers.getIndex(source);\r\n                that.updatePlotName(index, that.helpers.getPlotName(index));\r\n            });\r\n\r\n            this.addEventListener('ni-cartesian-plot-renderer-changed', function(evt) {\r\n                var index;\r\n                var source = evt.detail.originalSource;\r\n                index = that.helpers.rendererToIndex(source); // the event is routed through a plot and we gat a plot as a source\r\n                that.plotLegendItemDisplay.updateShape(index);\r\n            });\r\n\r\n            this.addEventListener('ni-cartesian-plot-renderer-attached', function(evt) {\r\n                var index;\r\n                var source = evt.detail.originalSource;\r\n\r\n                that.helpers.clearCache(); // clears the renderers cache\r\n                index = that.helpers.rendererToIndex(source); // the event is routed through a plot and we got a plot as a source\r\n                that.plotLegendItemDisplay.updateShape(index);\r\n            });\r\n\r\n            this.addEventListener('ni-cartesian-plot-renderer-detached', function(evt) {\r\n                var index;\r\n                var source = evt.detail.originalSource;\r\n\r\n                that.helpers.clearCache(); // clears the renderers cache\r\n                index = that.helpers.rendererToIndex(source); // the event is routed through a plot and we got a plot as a source\r\n                that.plotLegendItemDisplay.updateShape(index);\r\n            });\r\n\r\n            // update the entries in plot legend based on data series length\r\n            // The legend will apply this updates only at runtime in compact mode\r\n            this.addEventListener('ni-plot-count-changed', function(evt) {\r\n                var source = evt.detail.originalSource;\r\n                if (that.mode === \"compact\") {\r\n                    while (source.plotCount < that.nPlots) {\r\n                        var index = that.nPlots - 1;\r\n                        removeLegendRow(that, index);\r\n                    }\r\n                    while (source.plotCount > that.nPlots) {\r\n                        createLegendRow(that);\r\n                    }\r\n                }\r\n            });\r\n\r\n            var graph = this.findGraph();\r\n\r\n            if (graph !== null) {\r\n                this.attachToGraph(graph);\r\n            }\r\n        };\r\n\r\n        createRow(tbl, index) {\r\n            var that = this;\r\n            var tr, exp, header, content, div, plotName, p, span;\r\n\r\n            tr = document.createElement('tr');\r\n            tbl.appendChild(tr);\r\n            exp = document.createElement('div');\r\n            exp.id = 'expander' + index;\r\n            exp.className = 'ni-plot-legend-box';\r\n            tr.appendChild(exp);\r\n            header = document.createElement('div');\r\n            header.id = 'header' + index;\r\n            header.className = 'ni-master-row';\r\n            exp.appendChild(header);\r\n\r\n            div = document.createElement('div');\r\n            div.className = 'ni-plot-display';\r\n            header.appendChild(div);\r\n            this.plotLegendItemDisplay.createHeaderDisplay(div, index);\r\n            this.plotLegendItemDisplay.updateShape(index);\r\n\r\n            span = document.createElement('span');\r\n            span.className = 'ni-plot-title';\r\n\r\n            plotName = this.helpers.getPlotName(index);\r\n            if (this.mode === 'compact') {\r\n                if (!this.helpers.getPlot(index)) {\r\n                    plotName = 'Plot ' + (index + 1);\r\n                }\r\n            }\r\n\r\n            p = document.createTextNode(plotName);\r\n            span.appendChild(p);\r\n            header.appendChild(span);\r\n\r\n            content = document.createElement('div');\r\n            content.id = 'content' + index;\r\n            content.className = 'ni-details-box';\r\n            exp.appendChild(content);\r\n\r\n            if (this.mode === 'full') {\r\n                $(exp).jqxExpander({\r\n                    expanded: false,\r\n                    disabled: this.isInEditMode,\r\n                    expandAnimationDuration: 50,\r\n                    collapseAnimationDuration: 50,\r\n                    initContent: function() {\r\n                        that.loadContent(content, index);\r\n                    }\r\n                });\r\n\r\n                $(exp).on('expanded', function() {\r\n                    if (this !== that.currentExpander) {\r\n                        var expander = that.currentExpander;\r\n                        that.currentExpander = this;\r\n                        if (expander !== null) {\r\n                            $(expander).jqxExpander({\r\n                                expanded: false\r\n                            });\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\r\n            this.applyFont();\r\n        };\r\n\r\n        updatePlotName(index, name) {\r\n            var titles = $(this.tbl).find('.ni-plot-title');\r\n            $(titles[index]).text(name);\r\n        };\r\n\r\n        loadContent(content, index) {\r\n            var tbl, tr, j, span, p, td1, td2, div;\r\n            content.style.height = ((this.helpers.menu.length + 1) * 30) + 10 + 'px';\r\n            tbl = document.createElement('table');\r\n            tbl.className = 'ni-details';\r\n            content.appendChild(tbl);\r\n\r\n            for (j = 0; j < this.helpers.menu.length; j++) {\r\n                var menuItem = this.helpers.menu[j];\r\n                tr = document.createElement('tr');\r\n                tr.className = 'ni-details-row ' + (menuItem.cssClass || '');\r\n                tbl.appendChild(tr);\r\n                td1 = document.createElement('td');\r\n                td1.className = 'ni-detail-row-title-box';\r\n                tr.appendChild(td1);\r\n                span = document.createElement('span');\r\n                span.className = 'ni-detail-row-title';\r\n                td1.appendChild(span);\r\n                var text = NI_SUPPORT.i18n(menuItem.tag);\r\n                if (text.substring(0, 5) === '[msg_') { // in case server is not running\r\n                    text = menuItem.name + '!';\r\n                }\r\n\r\n                p = document.createTextNode(text);\r\n                span.appendChild(p);\r\n                td2 = document.createElement('td');\r\n                td2.className = 'ni-details-row-operations-box';\r\n                tr.appendChild(td2);\r\n                switch (menuItem.type) {\r\n                    case 'buttons':\r\n                        this.uihelpers.addButtons(menuItem, td2, index);\r\n                        break;\r\n                    case 'combobox':\r\n                        div = document.createElement('div');\r\n                        div.className = 'ni-selector';\r\n                        td2.appendChild(div);\r\n                        this.uihelpers.addComboBox(menuItem, div, index, 60);\r\n                        break;\r\n                    case 'colorbox':\r\n                        div = document.createElement('div');\r\n                        div.className = 'ni-colorbox-selector ni-selector';\r\n                        td2.appendChild(div);\r\n                        this.uihelpers.addColorBox(menuItem, div, index);\r\n                        break;\r\n                    case 'checkbox':\r\n                        div = document.createElement('div');\r\n                        div.className = 'ni-hover-box';\r\n                        td2.appendChild(div);\r\n                        this.uihelpers.addCheckBox(menuItem, div, index);\r\n                        break;\r\n                }\r\n            }\r\n        };\r\n\r\n        removeRow(tbl, index) {\r\n            var row = tbl.children[index];\r\n            this.plotLegendItemDisplay.removeHeaderDisplay(null, index);\r\n            if (row !== null && row !== undefined) {\r\n                tbl.removeChild(row);\r\n            }\r\n        };\r\n\r\n        setFont(fontSize, fontFamily, fontWeight, fontStyle, textDecoration) {\r\n            var childElement = this.firstElementChild,\r\n                thisRef = $(this),\r\n                jqrefContent = $(childElement).find(' .jqx-widget-content'),\r\n                jqrefItemTitle = $(childElement).find(' .ni-plot-title'),\r\n                jqrefItemContentTitle = $(childElement).find(' .ni-detail-row-title');\r\n\r\n            thisRef.css({\r\n                'font-size': fontSize,\r\n                'font-family': fontFamily,\r\n                'font-weight': fontWeight,\r\n                'font-style': fontStyle\r\n            });\r\n\r\n            jqrefContent.css({\r\n                'font-size': fontSize,\r\n                'font-family': fontFamily,\r\n                'font-weight': fontWeight,\r\n                'font-style': fontStyle\r\n            });\r\n            jqrefItemTitle.css({\r\n                'font-size': fontSize,\r\n                'font-family': fontFamily,\r\n                'font-weight': fontWeight,\r\n                'font-style': fontStyle\r\n            });\r\n            jqrefItemContentTitle.css({\r\n                'font-size': fontSize,\r\n                'font-family': fontFamily,\r\n                'font-weight': fontWeight,\r\n                'font-style': fontStyle\r\n            });\r\n        };\r\n\r\n        applyFont() {\r\n            var childElement = this.firstElementChild,\r\n                jqrefContent = $(childElement).find(' .jqx-widget-content'),\r\n                jqrefItemTitle = $(childElement).find(' .ni-plot-title'),\r\n                jqrefItemContentTitle = $(childElement).find(' .ni-detail-row-title');\r\n\r\n            var fontSize = $(this).css('font-size');\r\n            var fontFamily = $(this).css('font-family');\r\n            var fontWeight = $(this).css('font-weight');\r\n            var fontStyle = $(this).css('font-style');\r\n            jqrefContent.css({\r\n                'font-size': fontSize,\r\n                'font-family': fontFamily,\r\n                'font-weight': fontWeight,\r\n                'font-style': fontStyle\r\n            });\r\n            jqrefItemTitle.css({\r\n                'font-size': fontSize,\r\n                'font-family': fontFamily,\r\n                'font-weight': fontWeight,\r\n                'font-style': fontStyle\r\n            });\r\n            jqrefItemContentTitle.css({\r\n                'font-size': fontSize,\r\n                'font-family': fontFamily,\r\n                'font-weight': fontWeight,\r\n                'font-style': fontStyle\r\n            });\r\n        };\r\n\r\n        propertyChangedHandler(propertyName, oldValue, newValue) {\r\n            super.propertyChangedHandler(propertyName, oldValue, newValue);\r\n\r\n            switch (propertyName) {\r\n                case 'graphRef':\r\n                    // TODO: add a plot-legend-detached event for parent graph\r\n                    this.helpers.graph.plotLegend = null;\r\n                    var graphElement = this.findGraph();\r\n                    this.attachToGraph(graphElement);\r\n\r\n                    break;\r\n                case 'isInEditMode':\r\n                    // this changes once after the element is created\r\n                    this.helpers.isInEditMode = this.isInEditMode;\r\n                    $(this.tbl).find('.ni-plot-legend-box').each(function() {\r\n                        $(this).jqxExpander({\r\n                            disabled: this.isInEditMode\r\n                        });\r\n                    });\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        };\r\n    };\r\n\r\n    JQX('ni-plot-legend', PlotLegend);\r\n}());\r\n","//****************************************\r\n// Plot Legend Helpers Prototype\r\n// DOM Registration: Not an element\r\n// National Instruments Copyright 2015\r\n//****************************************\r\n\r\n(function () {\r\n    'use strict';\r\n    var NI_SUPPORT = NationalInstruments.HtmlVI.NISupport;\r\n\r\n    // Constructor Function\r\n    NationalInstruments.HtmlVI.Elements.PlotLegendHelpers = function () {\r\n        this.graph = null;\r\n        this.isInEditMode = false;\r\n        this.defaultPlotColors = window.JQX.CartesianGraph.defaultPlotColors;\r\n\r\n        // values that are used for the dasharray attribute of the line\r\n        this.lineStyleValues = {\r\n            dot: '1, 2',\r\n            dashdot: '3, 3, 1, 3',\r\n            mediumdash: '3, 3',\r\n            largedash: '5, 4',\r\n            solid: '0'\r\n        };\r\n        this.renderers = [];\r\n    };\r\n\r\n    // Static Public Variables\r\n    // None\r\n\r\n    var child = NationalInstruments.HtmlVI.Elements.PlotLegendHelpers;\r\n    var proto = child.prototype;\r\n\r\n    // Static Private Variables\r\n    // None\r\n\r\n    // Static Private Functions\r\n    // None\r\n\r\n    // Public Prototype Methods\r\n    proto.menu = [\r\n        {\r\n            name: 'Plot Style',\r\n            tag: 'msg_plotstyle',\r\n            type: 'buttons',\r\n            children: [\r\n                { name: 'Line', tag: 'msg_line', cssClass: 'ni-line-style-icon' },\r\n                { name: 'Point', tag: 'msg_point', cssClass: 'ni-point-style-icon' },\r\n                { name: 'Line & Point', tag: 'msg_lineandpoint', cssClass: 'ni-line-and-point-style-icon' },\r\n                { name: 'Bar', tag: 'msg_bar', cssClass: 'ni-bar-style-icon' },\r\n                { name: 'Fill', tag: 'msg_fill', cssClass: 'ni-fill-style-icon' }\r\n            ]\r\n        },\r\n        {\r\n            name: 'Point Style',\r\n            tag: 'msg_pointstyle',\r\n            type: 'buttons',\r\n            children: [\r\n                { name: 'Ellipse', tag: 'msg_ellipse', cssClass: 'ni-ellipse-point-style-icon' },\r\n                { name: 'Rectangle', tag: 'msg_rectangle', cssClass: 'ni-rect-point-style-icon' },\r\n                { name: 'Diamond', tag: 'msg_diamond', cssClass: 'ni-diamond-point-style-icon' },\r\n                { name: 'Cross', tag: 'msg_cross', cssClass: 'ni-cross-point-style-icon' },\r\n                { name: 'Plus', tag: 'msg_plus', cssClass: 'ni-plus-point-style-icon' }\r\n            ]\r\n        },\r\n        {\r\n            name: 'Line Width',\r\n            tag: 'msg_linewidth',\r\n            cssClass: 'line_width',\r\n            type: 'combobox',\r\n            children: [\r\n                { name: 'No line', tag: 'msg_noline', cssClass: '' },\r\n                { name: '1-pixel', tag: 'msg_1pixel', cssClass: 'ni-1-pixel-line-width-icon' },\r\n                { name: '2-pixels', tag: 'msg_2pixels', cssClass: 'ni-2-pixels-line-width-icon' },\r\n                { name: '3-pixels', tag: 'msg_3pixels', cssClass: 'ni-3-pixels-line-width-icon' },\r\n                { name: '4-pixels', tag: 'msg_4pixels', cssClass: 'ni-4-pixels-line-width-icon' },\r\n                { name: '5-pixels', tag: 'msg_5pixels', cssClass: 'ni-5-pixels-line-width-icon' }\r\n            ]\r\n        },\r\n        {\r\n            name: 'Line Style',\r\n            tag: 'msg_linestyle',\r\n            cssClass: 'line_style',\r\n            type: 'combobox',\r\n            children: [\r\n                { name: 'No style', tag: 'msg_nostyle', cssClass: '' },\r\n                { name: 'Solid', tag: 'msg_solid', cssClass: 'ni-solid-line-style-icon' },\r\n                { name: 'Dot', tag: 'msg_dot', cssClass: 'ni-dot-line-style-icon' },\r\n                { name: 'Dot-dash', tag: 'msg_dashdot', cssClass: 'ni-dot-dash-line-style-icon' },\r\n                { name: 'Medium dash', tag: 'msg_mediumdash', cssClass: 'ni-medium-dash-line-style-icon' },\r\n                { name: 'Large dash', tag: 'msg_largedash', cssClass: 'ni-large-dash-line-style-icon' }\r\n            ]\r\n        },\r\n        {\r\n            name: 'Fill Baseline',\r\n            tag: 'msg_fillbaseline',\r\n            type: 'buttons',\r\n            children: [\r\n                { name: 'Zero', tag: 'msg_zero', cssClass: 'ni-fill-to-zero-style-icon' },\r\n                { name: '-Inf', tag: 'msg_neginf', cssClass: 'ni-fill-base-line-negative-infinity-icon' },\r\n                { name: 'Inf', tag: 'msg_inf', cssClass: 'ni-fill-base-line-positive-infinity-icon' }\r\n            ]\r\n        },\r\n        {\r\n            name: 'Color',\r\n            tag: 'msg_color',\r\n            type: 'colorbox',\r\n            children: []\r\n        },\r\n        {\r\n            name: 'Hover',\r\n            tag: 'msg_hover',\r\n            cssClass: 'hover',\r\n            type: 'checkbox',\r\n            children: []\r\n        }\r\n    ];\r\n\r\n    proto.addRenderer = function () {\r\n    };\r\n\r\n    proto.clearRenderer = function (index) {\r\n        this.renderers[index] = null;\r\n    };\r\n\r\n    proto.clearCache = function () {\r\n        for (var i = 0; i < this.renderers.length; i++) {\r\n            this.renderers[i] = null;\r\n        }\r\n    };\r\n\r\n    proto.getPlot = function (index) {\r\n        var i = 0;\r\n        var plot = null;\r\n        var graph = this.graph;\r\n\r\n        if (graph !== null) {\r\n            for (child in graph.childNodes) {\r\n                if (graph.childNodes[child].localName === 'ni-cartesian-plot') {\r\n                    if (i === index) {\r\n                        plot = graph.childNodes[child];\r\n                        break;\r\n                    }\r\n\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n\r\n        return plot;\r\n    };\r\n\r\n    proto.getIndex = function (plot) {\r\n        var index, graph;\r\n        // graph = this.graph;\r\n        graph = plot._parentGraph;\r\n        if (graph !== null) {\r\n            index = graph.plots.indexOf(plot);\r\n        }\r\n\r\n        return index;\r\n    };\r\n\r\n    proto.getPlotName = function (index) {\r\n        var plot = this.getPlot(index);\r\n\r\n        if (plot && (typeof plot.label === 'string')) {\r\n            return plot.label;\r\n        } else {\r\n            return NI_SUPPORT.i18n('msg_defaultplotname');\r\n        }\r\n    };\r\n\r\n    proto.getRenderer = function (index) {\r\n        var plot = null;\r\n        var renderer = null;\r\n        if (this.renderers[index] === null || this.renderers[index] === undefined) {\r\n            plot = this.getPlot(index);\r\n\r\n            if (plot !== null) {\r\n                renderer = plot.lastElementChild;\r\n            }\r\n\r\n            if (renderer === null) {\r\n                return null;\r\n            }\r\n\r\n            this.renderers[index] = renderer;\r\n        }\r\n\r\n        return this.renderers[index];\r\n    };\r\n\r\n    proto.rendererToIndex = function (renderer) {\r\n        var i = 0, index, graph, child, currentRenderer;\r\n        graph = this.graph;\r\n        if (graph !== null) {\r\n            for (child in graph.childNodes) {\r\n                if (graph.childNodes[child].localName === 'ni-cartesian-plot') {\r\n                    currentRenderer = graph.childNodes[child].lastElementChild;\r\n                    if (currentRenderer === renderer) {\r\n                        index = i;\r\n                        break;\r\n                    }\r\n\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n\r\n        return index;\r\n    };\r\n\r\n    proto.handleClick = function (itemName, arg, index) {\r\n        if (this.isInEditMode !== true) {\r\n            var initialColor = '';\r\n            var plot;\r\n            var renderer = this.getRenderer(index);\r\n            if (renderer === null) {\r\n                return;\r\n            }\r\n\r\n            if (renderer.lineStroke !== '') {\r\n                initialColor = renderer.lineStroke;\r\n            }\r\n\r\n            if (renderer.pointColor !== '') {\r\n                initialColor = renderer.pointColor;\r\n            }\r\n\r\n            if (renderer.barFill !== '') {\r\n                initialColor = renderer.barFill;\r\n            }\r\n\r\n            if (renderer.areaFill !== '') {\r\n                initialColor = renderer.areaFill;\r\n            }\r\n\r\n            switch (itemName) {\r\n                case 'No line':\r\n                    renderer.lineWidth = 0;\r\n                    break;\r\n                case '1-pixel':\r\n                    renderer.lineWidth = 1;\r\n                    break;\r\n                case '2-pixels':\r\n                    renderer.lineWidth = 2;\r\n                    break;\r\n                case '3-pixels':\r\n                    renderer.lineWidth = 3;\r\n                    break;\r\n                case '4-pixels':\r\n                    renderer.lineWidth = 4;\r\n                    break;\r\n                case '5-pixels':\r\n                    renderer.lineWidth = 5;\r\n                    break;\r\n                case 'Line':\r\n                    renderer.lineStroke = initialColor;\r\n                    renderer.pointColor = '';\r\n                    renderer.barFill = '';\r\n                    renderer.areaFill = '';\r\n                    break;\r\n                case 'Point':\r\n                    renderer.lineStroke = '';\r\n                    renderer.pointColor = initialColor;\r\n                    renderer.barFill = '';\r\n                    renderer.areaFill = '';\r\n                    break;\r\n                case 'Line & Point':\r\n                    renderer.lineStroke = initialColor;\r\n                    renderer.pointColor = initialColor;\r\n                    renderer.barFill = '';\r\n                    renderer.areaFill = '';\r\n                    break;\r\n                case 'Bar':\r\n                    renderer.lineStroke = '';\r\n                    renderer.pointColor = '';\r\n                    renderer.barFill = initialColor;\r\n                    renderer.areaFill = '';\r\n                    break;\r\n                case 'Fill':\r\n                    renderer.lineStroke = '';\r\n                    renderer.pointColor = '';\r\n                    renderer.barFill = '';\r\n                    renderer.areaFill = initialColor;\r\n                    break;\r\n                case 'Ellipse':\r\n                    renderer.pointShape = 'ellipse';\r\n                    break;\r\n                case 'Rectangle':\r\n                    renderer.pointShape = 'rectangle';\r\n                    break;\r\n                case 'Diamond':\r\n                    renderer.pointShape = 'diamond';\r\n                    break;\r\n                case 'Cross':\r\n                    renderer.pointShape = 'cross';\r\n                    break;\r\n                case 'Plus':\r\n                    renderer.pointShape = 'plus';\r\n                    break;\r\n                case 'No style':\r\n                    renderer.lineStyle = '';\r\n                    break;\r\n                case 'Solid':\r\n                    renderer.lineStyle = 'solid';\r\n                    break;\r\n                case 'Dot':\r\n                    renderer.lineStyle = 'dot';\r\n                    break;\r\n                case 'Dot-dash':\r\n                    renderer.lineStyle = 'dashdot';\r\n                    break;\r\n                case 'Medium dash':\r\n                    renderer.lineStyle = 'mediumdash';\r\n                    break;\r\n                case 'Large dash':\r\n                    renderer.lineStyle = 'largedash';\r\n                    break;\r\n                case 'Zero':\r\n                    renderer.areaBaseLine = 'zero';\r\n                    renderer.barBaseLine = 'zero';\r\n                    break;\r\n                case '-Inf':\r\n                    renderer.areaBaseLine = 'negativeinfinity';\r\n                    renderer.barBaseLine = 'negativeinfinity';\r\n                    break;\r\n                case 'Inf':\r\n                    renderer.areaBaseLine = 'positiveinfinity';\r\n                    renderer.barBaseLine = 'positiveinfinity';\r\n                    break;\r\n                case 'Color':\r\n                    if (renderer.lineStroke !== '') {\r\n                        renderer.lineStroke = '#' + arg.hex;\r\n                    } else if (renderer.pointColor !== '') {\r\n                        renderer.pointColor = '#' + arg.hex;\r\n                    } else if (renderer.barFill !== '') {\r\n                        renderer.barFill = '#' + arg.hex;\r\n                    } else if (renderer.areaFill !== '') {\r\n                        renderer.areaFill = '#' + arg.hex;\r\n                    }\r\n\r\n                    break;\r\n                case 'Hover':\r\n                    plot = this.getPlot(index);\r\n                    plot.enableHover = arg;\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n\r\n    proto.getState = function (itemName, index) {\r\n        var plot;\r\n        var renderer = this.getRenderer(index);\r\n        if (renderer === null) {\r\n            return undefined;\r\n        }\r\n\r\n        var state;\r\n        switch (itemName) {\r\n            case 'No line':\r\n                state = renderer.lineWidth === 0;\r\n                break;\r\n            case '1-pixel':\r\n                state = renderer.lineWidth === 1;\r\n                break;\r\n            case '2-pixels':\r\n                state = renderer.lineWidth === 2;\r\n                break;\r\n            case '3-pixels':\r\n                state = renderer.lineWidth === 3;\r\n                break;\r\n            case '4-pixels':\r\n                state = renderer.lineWidth === 4;\r\n                break;\r\n            case '5-pixels':\r\n                state = renderer.lineWidth === 5;\r\n                break;\r\n            case 'Line':\r\n                state = renderer.lineStroke !== '' && renderer.pointColor === '';\r\n                break;\r\n            case 'Point':\r\n                state = renderer.lineStroke === '' && renderer.pointColor !== '';\r\n                break;\r\n            case 'Line & Point':\r\n                state = renderer.lineStroke !== '' && renderer.pointColor !== '';\r\n                break;\r\n            case 'Bar':\r\n                state = renderer.barFill !== '';\r\n                break;\r\n            case 'Fill':\r\n                state = renderer.areaFill !== '';\r\n                break;\r\n            case 'Ellipse':\r\n                state = renderer.pointShape === 'ellipse';\r\n                break;\r\n            case 'Rectangle':\r\n                state = renderer.pointShape === 'rectangle';\r\n                break;\r\n            case 'Diamond':\r\n                state = renderer.pointShape === 'diamond';\r\n                break;\r\n            case 'Cross':\r\n                state = renderer.pointShape === 'cross';\r\n                break;\r\n            case 'Plus':\r\n                state = renderer.pointShape === 'plus';\r\n                break;\r\n            case 'No style':\r\n                state = renderer.lineStyle === '';\r\n                break;\r\n            case 'Solid':\r\n                state = renderer.lineStyle === 'solid';\r\n                break;\r\n            case 'Dot':\r\n                state = renderer.lineStyle === 'dot';\r\n                break;\r\n            case 'Dot-dash':\r\n                state = renderer.lineStyle === 'dashdot';\r\n                break;\r\n            case 'Medium dash':\r\n                state = renderer.lineStyle === 'mediumdash';\r\n                break;\r\n            case 'Large dash':\r\n                state = renderer.lineStyle === 'largedash';\r\n                break;\r\n            case 'Zero':\r\n                state = renderer.barFill !== '' ? renderer.barBaseLine === 'zero' || renderer.barBaseLine === '' : renderer.areaBaseLine === 'zero' || renderer.areaBaseLine === '';\r\n                break;\r\n            case '-Inf':\r\n                state = renderer.barFill !== '' ? renderer.barBaseLine === 'negativeinfinity' : renderer.areaBaseLine === 'negativeinfinity';\r\n                break;\r\n            case 'Inf':\r\n                state = renderer.barFill !== '' ? renderer.barBaseLine === 'positiveinfinity' : renderer.areaBaseLine === 'positiveinfinity';\r\n                break;\r\n            case 'Color':\r\n                state = this.getPlotColorFromRenderer(renderer);\r\n                break;\r\n            case 'Hover':\r\n                plot = this.getPlot(index);\r\n                state = plot.enableHover;\r\n                break;\r\n        }\r\n\r\n        return state;\r\n    };\r\n\r\n    proto.getPlotColor = function (index) {\r\n        var renderer = this.getRenderer(index);\r\n        if (renderer !== null) {\r\n            return this.getPlotColorFromRenderer(renderer);\r\n        }\r\n\r\n        return this.defaultPlotColors[index % this.defaultPlotColors.length];\r\n    };\r\n\r\n    proto.getPlotColorFromRenderer = function (renderer) {\r\n        var state = 'rgba(0, 0, 0, 1)';\r\n        if (renderer.lineStroke !== '') {\r\n            state = renderer.lineStroke;\r\n        } else if (renderer.pointColor !== '') {\r\n            state = renderer.pointColor;\r\n        } else if (renderer.barFill !== '') {\r\n            state = renderer.barFill;\r\n        } else if (renderer.areaFill !== '') {\r\n            state = renderer.areaFill;\r\n        }\r\n\r\n        return state;\r\n    };\r\n\r\n    proto.getLineWidth = function (index) {\r\n        var renderer = this.getRenderer(index);\r\n        if (renderer !== null) {\r\n            return renderer.lineWidth;\r\n        }\r\n\r\n        // Return the default line width if there is no renderer.\r\n        return 1;\r\n    };\r\n\r\n    proto.getLineShape = function (index) {\r\n        var lineShape = 'line';\r\n        var renderer = this.getRenderer(index);\r\n        if (renderer !== null) {\r\n            if (renderer.lineStroke !== '' && renderer.pointColor === '') {\r\n                lineShape = 'line';\r\n            } else if (renderer.lineStroke === '' && renderer.pointColor !== '') {\r\n                lineShape = 'points';\r\n            } else if (renderer.lineStroke !== '' && renderer.pointColor !== '') {\r\n                lineShape = 'line & point';\r\n            } else if (renderer.barFill !== '') {\r\n                lineShape = 'bar';\r\n            } else if (renderer.areaFill !== '') {\r\n                lineShape = 'fill';\r\n            }\r\n        }\r\n\r\n        // Return the default line shape if there is no renderer.\r\n        return lineShape;\r\n    };\r\n\r\n    proto.getLineStyle = function (index) {\r\n        var renderer = this.getRenderer(index);\r\n        if (renderer !== null) {\r\n            switch (renderer.lineStyle) {\r\n                case 'dot':\r\n                    return this.lineStyleValues.dot;\r\n                case 'dashdot':\r\n                    return this.lineStyleValues.dashdot;\r\n                case 'mediumdash':\r\n                    return this.lineStyleValues.mediumdash;\r\n                case 'largedash':\r\n                    return this.lineStyleValues.largedash;\r\n                default:\r\n                    return this.lineStyleValues.solid;\r\n            }\r\n        }\r\n\r\n        return '0';\r\n    };\r\n\r\n    proto.getPointShape = function (index) {\r\n        var renderer = this.getRenderer(index);\r\n        if (renderer !== null) {\r\n            return renderer.pointShape;\r\n        }\r\n\r\n        // Return the default point shape if there is no renderer.\r\n        return 'ellipse';\r\n    };\r\n}());\r\n","//****************************************\r\n// Plot Legend Prototype\r\n// DOM Registration: Not an element\r\n// National Instruments Copyright 2015\r\n//****************************************\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    // Constructor Function\r\n    NationalInstruments.HtmlVI.Elements.PlotLegendItemDisplay = function (helpers) {\r\n        this.pointTypes = [\r\n            { name: 'ellipse', creator: createEllipseShape },\r\n            { name: 'rectangle', creator: createRectangleShape },\r\n            { name: 'diamond', creator: createDiamondShape },\r\n            { name: 'cross', creator: createCrossShape },\r\n            { name: 'plus', creator: createPlusShape }\r\n        ];\r\n\r\n        this.lineTypes = [\r\n            { name: 'line', creator: createLine },\r\n            { name: 'fill', creator: createFillArea },\r\n            { name: 'bar', creator: createBars },\r\n            { name: 'points', creator: createPoints }\r\n        ];\r\n\r\n        this.shapes = [];\r\n        this.helpers = helpers;\r\n    };\r\n\r\n    // Static Public Variables\r\n    // None\r\n\r\n    var child = NationalInstruments.HtmlVI.Elements.PlotLegendItemDisplay;\r\n    var proto = child.prototype;\r\n\r\n    // Static Private Variables\r\n    // None\r\n\r\n    // Static Private Functions\r\n    // None\r\n\r\n    // Public Prototype Methods\r\n    proto.createHeaderDisplay = function (div, index) {\r\n        var svgns, svg;\r\n        svgns = 'http://www.w3.org/2000/svg';\r\n        svg = document.createElementNS(svgns, 'svg');\r\n        svg.setAttribute('width', '16');\r\n        svg.setAttribute('height', '16');\r\n        svg.setAttribute('viewBox', '0,0,16,16');\r\n        svg.setAttributeNS('http://www.w3.org/2000/xmlns/', 'xmlns:xlink', 'http://www.w3.org/1999/xlink');\r\n        div.appendChild(svg);\r\n\r\n        var shapesGroup = document.createElementNS(svgns, 'g');\r\n        var that = this;\r\n        svg.appendChild(shapesGroup);\r\n        this.shapes[index] = {};\r\n        this.shapes[index].shapesGroup = shapesGroup;\r\n\r\n        createLineTypes(index, shapesGroup, svgns, that);\r\n        shapesGroup.setAttribute('stroke', 'rgba(255, 0, 0, 1)');\r\n    };\r\n\r\n    proto.removeHeaderDisplay = function (div, index) {\r\n        this.shapes.splice(index, 1);\r\n    };\r\n\r\n    var createLineTypes = function (index, shapesGroup, svgns, plotLegendItemDisplay) {\r\n        var i;\r\n\r\n        for (i = 0; i < plotLegendItemDisplay.lineTypes.length; i++) {\r\n            plotLegendItemDisplay.lineTypes[i].creator(index, shapesGroup, svgns, plotLegendItemDisplay);\r\n        }\r\n    };\r\n\r\n    var createLine = function (index, shapesGroup, svgns, plotLegendItemDisplay) {\r\n        var shape = document.createElementNS(svgns, 'polyline');\r\n        shape.setAttribute('points', '0,15 5,5 10,10 15,0');\r\n        shape.setAttribute('fill', 'none');\r\n        shape.setAttribute('stroke-width', plotLegendItemDisplay.helpers.getLineWidth(index));\r\n        shape.setAttribute('stroke-dasharray', plotLegendItemDisplay.helpers.getLineStyle(index));\r\n\r\n        shapesGroup.appendChild(shape);\r\n        plotLegendItemDisplay.shapes[index].shapesGroup.line = shape;\r\n    };\r\n\r\n    var createFillArea = function (index, shapesGroup, svgns, plotLegendItemDisplay) {\r\n        var shape = document.createElementNS(svgns, 'polyline');\r\n        shape.setAttribute('points', '0,15 5,5 10,10 15,0, 15,15, 0,15');\r\n        shape.setAttribute('fill', plotLegendItemDisplay.helpers.getPlotColor(index));\r\n        shape.setAttribute('stroke-width', plotLegendItemDisplay.helpers.getLineWidth(index));\r\n        shape.setAttribute('visibility', 'hidden');\r\n\r\n        shapesGroup.appendChild(shape);\r\n        plotLegendItemDisplay.shapes[index].shapesGroup.fill = shape;\r\n    };\r\n\r\n    var createBars = function (index, shapesGroup, svgns, plotLegendItemDisplay) {\r\n        var shape = document.createElementNS(svgns, 'polyline');\r\n        shape.setAttribute('points', '1.5,15.5 1.5,12.5, 4.5,12.5 4.5,15.5 6.5,15.5 6.5,3.5, 9.5,3.5 9.5,15.5 11.5,15.5 11.5,7.5 14.5,7.5 14.5,15.5 1.5,15.5');\r\n        shape.setAttribute('fill', plotLegendItemDisplay.helpers.getPlotColor(index));\r\n        shape.setAttribute('stroke-width', 1);\r\n        shape.setAttribute('visibility', 'hidden');\r\n\r\n        shapesGroup.appendChild(shape);\r\n        plotLegendItemDisplay.shapes[index].shapesGroup.bar = shape;\r\n    };\r\n\r\n    var createPoints = function (index, shapesGroup, svgns, plotLegendItemDisplay) {\r\n        var i, j;\r\n        var group;\r\n        var points = [\r\n            { x: 0.5, y: 15.5 },\r\n            { x: 10.5, y: 10.5 },\r\n            { x: 5.5, y: 5.5 },\r\n            { x: 15.5, y: 0.5 }\r\n        ];\r\n        var shape;\r\n\r\n        var pointGroups = document.createElementNS(svgns, 'g');\r\n        plotLegendItemDisplay.shapes[index].shapesGroup.points = pointGroups;\r\n        for (j = 0; j < plotLegendItemDisplay.pointTypes.length; j++) {\r\n            group = document.createElementNS(svgns, 'g');\r\n            for (i = 0; i < 4; i++) {\r\n                shape = plotLegendItemDisplay.pointTypes[j].creator(svgns, points[i], 4);\r\n                group.appendChild(shape);\r\n            }\r\n\r\n            group.setAttribute('fill', plotLegendItemDisplay.helpers.getPlotColor(index));\r\n            group.setAttribute('stroke-width', 1);\r\n            group.setAttribute('visibility', 'hidden');\r\n            pointGroups.appendChild(group);\r\n            plotLegendItemDisplay.shapes[index].shapesGroup.points[plotLegendItemDisplay.pointTypes[j].name] = group;\r\n        }\r\n\r\n        shapesGroup.appendChild(pointGroups);\r\n    };\r\n\r\n    var createEllipseShape = function (svgns, center, size) {\r\n        var shape = document.createElementNS(svgns, 'circle');\r\n        shape.setAttribute('cx', center.x);\r\n        shape.setAttribute('cy', center.y);\r\n        shape.setAttribute('r', size / 2);\r\n        return shape;\r\n    };\r\n\r\n    var createRectangleShape = function (svgns, center, size) {\r\n        var shape = document.createElementNS(svgns, 'rect');\r\n        shape.setAttribute('x', center.x - size / 2);\r\n        shape.setAttribute('y', center.y - size / 2);\r\n        shape.setAttribute('width', size);\r\n        shape.setAttribute('height', size);\r\n        return shape;\r\n    };\r\n\r\n    var createDiamondShape = function (svgns, center, size) {\r\n        var shape = document.createElementNS(svgns, 'path');\r\n        var path = 'M' + (center.x - size / 2) + ',' + center.y;\r\n        path += ' L' + center.x + ',' + (center.y - size / 2);\r\n        path += ' L' + (center.x + size / 2) + ',' + center.y;\r\n        path += ' L' + center.x + ',' + (center.y + size / 2);\r\n        path += ' Z';\r\n        shape.setAttribute('d', path);\r\n        return shape;\r\n    };\r\n\r\n    var createCrossShape = function (svgns, center, size) {\r\n        var shape = document.createElementNS(svgns, 'path');\r\n        var path = 'M' + (center.x - size / 2) + ',' + (center.y - size / 2);\r\n        path += ' L' + (center.x + size / 2) + ',' + (center.y + size / 2);\r\n        path += 'M' + (center.x + size / 2) + ',' + (center.y - size / 2);\r\n        path += ' L' + (center.x - size / 2) + ',' + (center.y + size / 2);\r\n        shape.setAttribute('d', path);\r\n        return shape;\r\n    };\r\n\r\n    var createPlusShape = function (svgns, center, size) {\r\n        var shape = document.createElementNS(svgns, 'path');\r\n        var path = 'M' + center.x + ',' + (center.y - size / 2);\r\n        path += ' L' + center.x + ',' + (center.y + size / 2);\r\n        path += 'M' + (center.x - size / 2) + ',' + center.y;\r\n        path += ' L' + (center.x + size / 2) + ',' + center.y;\r\n        shape.setAttribute('d', path);\r\n        return shape;\r\n    };\r\n\r\n    proto.updateLinesAttributes = function (index, group, color) {\r\n        var lineShape = this.helpers.getLineShape(index);\r\n\r\n        if (lineShape === 'line' || lineShape === 'line & point') {\r\n            group.line.setAttribute('stroke-width', this.helpers.getLineWidth(index));\r\n            group.line.setAttribute('stroke-dasharray', this.helpers.getLineStyle(index));\r\n        }\r\n\r\n        group.fill.setAttribute('fill', color);\r\n        group.bar.setAttribute('fill', color);\r\n        for (var i = 0; i < this.pointTypes.length; i++) {\r\n            group.points[this.pointTypes[i].name].setAttribute('fill', color);\r\n        }\r\n    };\r\n\r\n    proto.updatePointVisibility = function (index, group, currentLineShape) {\r\n        var currentPointShape = this.helpers.getPointShape(index);\r\n        for (var j = 0; j < this.pointTypes.length; j++) {\r\n            if (currentPointShape === this.pointTypes[j].name && (currentLineShape === 'line & point' || currentLineShape === 'points')) {\r\n                group.points[this.pointTypes[j].name].setAttribute('visibility', 'visible');\r\n            } else {\r\n                group.points[this.pointTypes[j].name].setAttribute('visibility', 'hidden');\r\n            }\r\n        }\r\n    };\r\n\r\n    proto.updateVisibility = function (index, group) {\r\n        var currentLineShape = this.helpers.getLineShape(index);\r\n\r\n        for (var i = 0; i < this.lineTypes.length; i++) {\r\n            if (currentLineShape === this.lineTypes[i].name) {\r\n                group[this.lineTypes[i].name].setAttribute('visibility', 'visible');\r\n            } else {\r\n                group[this.lineTypes[i].name].setAttribute('visibility', 'hidden');\r\n            }\r\n        }\r\n\r\n        if (currentLineShape === 'line & point') {\r\n            group.line.setAttribute('visibility', 'visible');\r\n            group.points.setAttribute('visibility', 'visible');\r\n        }\r\n\r\n        this.updatePointVisibility(index, group, currentLineShape);\r\n    };\r\n\r\n    proto.updateShape = function (index) {\r\n        var shape = this.shapes[index];\r\n\r\n        if (shape === undefined || shape === null) {\r\n            return;\r\n        }\r\n\r\n        var color = this.helpers.getPlotColor(index);\r\n\r\n        this.updateLinesAttributes(index, shape.shapesGroup, color);\r\n        this.updateVisibility(index, shape.shapesGroup);\r\n        shape.shapesGroup.setAttribute('stroke', color);\r\n    };\r\n}());\r\n","//****************************************\r\n// Cursor Legend Prototype\r\n// DOM Registration: No\r\n// National Instruments Copyright 2015\r\n//****************************************\r\n\r\n/**\r\n## ni-cursor-legend\r\n\r\n> A custom element that provides a cursor legend.\r\n\r\nUse it to visualize, add, remove and configure cursors. It can be attached to a graph or chart element.\r\n\r\nIt provides a list with all the cursors of the graphs and a way to add/remove cursors.\r\n\r\nExample:\r\n```html\r\n<ni-cartesian-graph graph-ref=\"g1\" value=\"[[2, 3, 5, 7, 11, 13, 17, 19],\r\n                          [0, 1, 1, 2, 3, 5, 8, 13]]\">\r\n    <ni-cartesian-axis show label=\"Index\" axis-position=\"bottom\"></ni-cartesian-axis>\r\n    <ni-cartesian-axis show label=\"Value\" axis-position=\"left\"></ni-cartesian-axis>\r\n    <ni-cartesian-plot show label=\"Prime Numbers\">\r\n        <ni-cartesian-plot-renderer line-width=\"2\" line-stroke=\"red\">\r\n        </ni-cartesian-plot-renderer>\r\n    </ni-cartesian-plot>\r\n    <ni-cartesian-plot show label=\"Fibonacci Numbers\">\r\n        <ni-cartesian-plot-renderer line-width=\"2\" line-stroke=\"blue\">\r\n        </ni-cartesian-plot-renderer>\r\n    </ni-cartesian-plot>\r\n</ni-cartesian-graph>\r\n\r\n<ni-cursor-legend graph-ref=\"g1\" mode=\"pan\"></ni-cursor-legend>\r\n```\r\n*/\r\n\r\n(function() {\r\n    'use strict';\r\n    // Static Private Reference Aliases\r\n    var $ = NationalInstruments.Globals.jQuery;\r\n    var NI_SUPPORT = NationalInstruments.HtmlVI.NISupport;\r\n\r\n    class CursorLegend extends NationalInstruments.HtmlVI.Elements.GraphLegend {\r\n        /**### ni-cursor-legend properties*/\r\n\r\n        /// include ./ni-graph-legend.js\r\n\r\n        created() {\r\n            super.created();\r\n\r\n            this.table = undefined;\r\n            this.selectedRow = null;\r\n            this.addButton = null;\r\n            this.deleteButton = null;\r\n            this.centerButton = null;\r\n            this.currentRow = null;\r\n            this.currentBtn = null;\r\n            this.observer = null;\r\n            this.helpers = new NationalInstruments.HtmlVI.Elements.CursorLegendHelpers();\r\n            this.cursorLegendItemDisplay = new NationalInstruments.HtmlVI.Elements.CursorLegendItemDisplay(this.helpers);\r\n            this.uihelpers = new NationalInstruments.HtmlVI.Elements.LegendHelpers(this.helpers, this.cursorLegendItemDisplay);\r\n        };\r\n\r\n        cursorAdded(cursor) {\r\n            var that = this;\r\n            that.createRow(that.table, cursor);\r\n            that.helpers.cursorAdded(cursor);\r\n            //cursor.label = that.helpers.nextCursorName();\r\n            that.helpers.cursorPositionChanged(cursor, function(data) {\r\n                that.updatePosition(cursor, data);\r\n            });\r\n        };\r\n\r\n        updatePosition(cursor, data) {\r\n            if (!cursor._parentGraph) {\r\n                return;\r\n            }\r\n\r\n            var cursorNumber = cursor.niControlId,\r\n                xEl = this.querySelector('#x_' + cursorNumber),\r\n                yEl = this.querySelector('#y_' + cursorNumber),\r\n                plot = cursor._parentGraph.graph,\r\n                textValue = plot.formatCursorPosition(plot, cursor.cursor);\r\n\r\n            if (xEl !== null) {\r\n                xEl.innerText = textValue.xTextValue;\r\n            }\r\n\r\n            if (yEl !== null) {\r\n                yEl.innerText = textValue.yTextValue;\r\n            }\r\n        };\r\n\r\n        // cursor can be removed at runtime or edit time from legend, or at edit time from right rail\r\n        cursorRemoved(cursor) {\r\n            var index = this.helpers.getIndex(cursor);\r\n            if (index >= 0) {\r\n                $(this).find('.ni-master-row').eq(index).remove();\r\n                $(this).find('.ni-details-box').eq(index).remove();\r\n                this.cursorLegendItemDisplay.clearShape(index);\r\n                this.helpers.cursorRemoved(cursor);\r\n            }\r\n        };\r\n\r\n        cursorChanged(cursor) {\r\n            this.cursorLegendItemDisplay.updateShape(cursor);\r\n            this.updateName(cursor);\r\n            this.updateVisible(cursor);\r\n        };\r\n\r\n        updateName(cursor) {\r\n            $('#name_' + cursor.niControlId).text(this.helpers.getState('name', cursor));\r\n        };\r\n\r\n        updateVisible(cursor) {\r\n            var visible = this.helpers.getState('visible', cursor);\r\n            if (visible) {\r\n                $('#visible_' + cursor.niControlId).removeClass('ni-visibility-off-icon').addClass('ni-visibility-on-icon');\r\n            } else {\r\n                $('#visible_' + cursor.niControlId).removeClass('ni-visibility-on-icon').addClass('ni-visibility-off-icon');\r\n            }\r\n        };\r\n\r\n        attachToGraph(graphElement) {\r\n            this.detachFromGraph();\r\n            if (graphElement && graphElement.isReady) {\r\n                this.helpers.graph = graphElement;\r\n                graphElement.registerCursorLegend(this);\r\n            }\r\n        };\r\n\r\n        detachFromGraph() {\r\n            this.removeRows();\r\n            this.helpers.clearCache();\r\n            this.helpers.graph = null;\r\n        };\r\n\r\n        attached() {\r\n            super.attached();\r\n\r\n            var that = this;\r\n\r\n            that.helpers.graph = that.findGraph();\r\n            that.helpers.isInEditMode = that.isInEditMode;\r\n            var div = document.createElement('div');\r\n            div.style.width = '100%';\r\n            div.style.height = '100%';\r\n            div.id = 'div' + NI_SUPPORT.uniqueId();\r\n            that.appendChild(div);\r\n            that.table = document.createElement('table');\r\n            that.table.className = 'ni-cursors-box';\r\n            div.appendChild(that.table);\r\n\r\n            var buttonsRow = document.createElement('div');\r\n            div.appendChild(buttonsRow);\r\n\r\n            var add = document.createElement('button');\r\n            add.className = 'ni-add-icon ni-command-button';\r\n            $(add).jqxButton({\r\n                disabled: that.isInEditMode\r\n            });\r\n\r\n            buttonsRow.appendChild(add);\r\n            that.addButton = add;\r\n            $(add).on('click', function() {\r\n                if (!that.isInEditMode) {\r\n                    that.helpers.addCursor();\r\n                }\r\n            });\r\n\r\n            that.addEventListener('ni-cursor-attached', function(evt) {\r\n                that.cursorAdded(evt.detail.originalSource);\r\n            });\r\n            that.addEventListener('ni-cursor-detached', function(evt) {\r\n                that.cursorRemoved(evt.detail.originalSource);\r\n            });\r\n            that.addEventListener('ni-cursor-changed', function(evt) {\r\n                that.cursorChanged(evt.detail.originalSource);\r\n            });\r\n\r\n            var graph = this.findGraph();\r\n\r\n            if (graph !== null) {\r\n                this.attachToGraph(graph);\r\n            }\r\n        };\r\n\r\n        removeRows() {\r\n            var i;\r\n            for (i = this.helpers.cursors.length - 1; i >= 0; i--) {\r\n                var cursor = this.helpers.getCursor(i);\r\n                this.cursorRemoved(cursor);\r\n            }\r\n        };\r\n\r\n        createRow(table, cursor) {\r\n            var that = this;\r\n            var btn = that.createMainRow(table, cursor);\r\n            var row = that.createDetailsRow(table, cursor);\r\n            $(btn).on('click', function() {\r\n                if (that.currentRow !== row) {\r\n                    var currentRow = that.currentRow;\r\n                    var currentBtn = that.currentBtn;\r\n                    row.style.display = 'table-row';\r\n                    that.currentRow = row;\r\n                    btn.classList.remove('ni-closed-icon');\r\n                    btn.classList.add('ni-open-icon');\r\n                    that.currentBtn = btn;\r\n                    if (currentRow !== null) {\r\n                        currentRow.style.display = 'none';\r\n                    }\r\n\r\n                    if (currentBtn !== null) {\r\n                        currentBtn.classList.remove('ni-open-icon');\r\n                        currentBtn.classList.add('ni-closed-icon');\r\n                    }\r\n                } else {\r\n                    row.style.display = 'none';\r\n                    btn.classList.remove('ni-open-icon');\r\n                    btn.classList.add('ni-closed-icon');\r\n                    that.currentRow = null;\r\n                    that.currentBtn = null;\r\n                }\r\n            });\r\n            that.applyFont();\r\n        };\r\n\r\n        createMainRow(table, cursor) {\r\n            var that = this;\r\n            var cursorNumber;\r\n            cursorNumber = cursor.niControlId;\r\n\r\n            var tr, td0, td1, td2, td3, td4, span, p, display, button, showHideButton, visible;\r\n            tr = document.createElement('tr');\r\n            tr.className = 'ni-master-row';\r\n            table.appendChild(tr);\r\n\r\n            td0 = document.createElement('td');\r\n            td0.className = 'ni-expand-box';\r\n            tr.appendChild(td0);\r\n            showHideButton = document.createElement('input');\r\n            showHideButton.className = 'ni-expand-button ni-closed-icon';\r\n            showHideButton.type = 'button';\r\n            showHideButton.id = 'details_' + cursorNumber;\r\n            td0.appendChild(showHideButton);\r\n            $(showHideButton).jqxButton({\r\n                width: 20,\r\n                height: 20,\r\n                disabled: that.isInEditMode\r\n            });\r\n\r\n            td1 = document.createElement('td');\r\n            td1.className = 'ni-cursor-box';\r\n            tr.appendChild(td1);\r\n            display = that.cursorLegendItemDisplay.createHeaderDisplay(cursor);\r\n            if (display !== null) {\r\n                display.id = 'display_' + cursorNumber;\r\n                td1.appendChild(display);\r\n            }\r\n\r\n            span = document.createElement('span');\r\n            span.className = 'ni-cursor-title';\r\n            span.id = 'name_' + cursorNumber;\r\n            p = document.createTextNode(that.helpers.getState('name', cursor));\r\n            span.appendChild(p);\r\n            td1.appendChild(span);\r\n\r\n            td2 = document.createElement('td');\r\n            td2.className = 'ni-x-box';\r\n            tr.appendChild(td2);\r\n            span = document.createElement('span');\r\n            span.className = 'ni-x-title';\r\n            span.id = 'x_' + cursorNumber;\r\n            p = document.createTextNode(parseFloat(that.helpers.getState('x', cursor)));\r\n            span.appendChild(p);\r\n            td2.appendChild(span);\r\n\r\n            td3 = document.createElement('td');\r\n            td3.className = 'ni-y-box';\r\n            tr.appendChild(td3);\r\n            span = document.createElement('span');\r\n            span.className = 'ni-y-title';\r\n            span.id = 'y_' + cursorNumber;\r\n            p = document.createTextNode(parseFloat(that.helpers.getState('y', cursor)));\r\n            span.appendChild(p);\r\n            td3.appendChild(span);\r\n\r\n            td4 = document.createElement('td');\r\n            td4.className = 'ni-actions-box';\r\n            tr.appendChild(td4);\r\n\r\n            button = document.createElement('input');\r\n            button.className = 'ni-delete-icon ni-action-button';\r\n            button.type = 'button';\r\n            button.id = 'delete' + cursorNumber;\r\n            td4.appendChild(button);\r\n            $(button).on('click', function() {\r\n                that.helpers.handleClick('delete', '', cursor);\r\n            });\r\n            $(button).jqxToggleButton({\r\n                disabled: that.isInEditMode\r\n            });\r\n\r\n            button = document.createElement('input');\r\n            button.className = 'ni-center-icon ni-action-button';\r\n            button.type = 'button';\r\n            button.id = 'center' + cursorNumber;\r\n            td4.appendChild(button);\r\n            $(button).on('click', function() {\r\n                that.helpers.handleClick('center', '', cursor);\r\n            });\r\n            $(button).jqxButton({\r\n                disabled: that.isInEditMode\r\n            });\r\n\r\n            button = document.createElement('input');\r\n            button.className = 'ni-snap-icon ni-action-button';\r\n            button.type = 'button';\r\n            button.id = 'snap_' + cursorNumber;\r\n            td4.appendChild(button);\r\n            $(button).on('click', function() {\r\n                that.helpers.handleClick('snap', '', cursor);\r\n            });\r\n            $(button).jqxToggleButton({\r\n                disabled: that.isInEditMode\r\n            });\r\n\r\n            button = document.createElement('input');\r\n            button.className = 'ni-visibility-button ni-action-button';\r\n            button.type = 'button';\r\n            button.id = 'visible_' + cursorNumber;\r\n            visible = that.helpers.getState('visible', cursor);\r\n            if (visible) {\r\n                button.classList.add('ni-visibility-on-icon');\r\n            } else {\r\n                button.classList.add('ni-visibility-off-icon');\r\n            }\r\n\r\n            $(button).on('click', function() {\r\n                that.helpers.handleClick('visible', '', cursor);\r\n            });\r\n\r\n            td4.appendChild(button);\r\n            $(button).jqxToggleButton({\r\n                disabled: that.isInEditMode\r\n            });\r\n\r\n            return showHideButton;\r\n        };\r\n\r\n        createDetailsItem(table, title, className) {\r\n            var tr, td1, td2, div, span, p;\r\n            tr = document.createElement('tr');\r\n            tr.className = 'ni-details-row';\r\n            table.appendChild(tr);\r\n\r\n            td1 = document.createElement('td');\r\n            td1.className = 'ni-details-row-title-box';\r\n            tr.appendChild(td1);\r\n            span = document.createElement('span');\r\n            span.class = 'ni-details-row-title';\r\n            td1.appendChild(span);\r\n            p = document.createTextNode(title);\r\n            span.appendChild(p);\r\n\r\n            td2 = document.createElement('td');\r\n            td2.className = 'ni-details-row-control-box';\r\n            tr.appendChild(td2);\r\n            div = document.createElement('div');\r\n            div.className = className;\r\n            td2.appendChild(div);\r\n            return div;\r\n        };\r\n\r\n        createDetailsRow(table, cursor) {\r\n            var subtable, tr, td, div;\r\n\r\n            tr = document.createElement('tr');\r\n            tr.className = 'ni-details-box';\r\n            tr.style.display = 'none';\r\n            table.appendChild(tr);\r\n\r\n            td = document.createElement('td');\r\n            td.colSpan = 5;\r\n            tr.appendChild(td);\r\n\r\n            subtable = document.createElement('table');\r\n            subtable.className = 'ni-details';\r\n            td.appendChild(subtable);\r\n\r\n            div = this.createDetailsItem(subtable, 'Color', 'ni-colorbox-selector ni-selector');\r\n            this.uihelpers.addColorBox({\r\n                name: 'Color'\r\n            }, div, cursor);\r\n\r\n            div = this.createDetailsItem(subtable, 'Shape', 'ni-shape-selector ni-selector');\r\n            this.uihelpers.addComboBox(this.helpers.getMenuItem('shape'), div, cursor, 16);\r\n\r\n            div = this.createDetailsItem(subtable, 'Crosshair', 'ni-crosshair-selector ni-selector');\r\n            this.uihelpers.addComboBox(this.helpers.getMenuItem('crosshair'), div, cursor, 16);\r\n\r\n            return tr;\r\n        };\r\n\r\n        setFont(fontSize, fontFamily, fontWeight, fontStyle, textDecoration) {\r\n            var childElement = this.firstElementChild,\r\n                thisRef = $(this),\r\n                jqrefContent = $('#' + childElement.id + ' .jqx-widget-content'),\r\n                jqrefItemName = $('#' + childElement.id + ' .ni-cursor-title'),\r\n                jqrefItemX = $('#' + childElement.id + ' .ni-x-title'),\r\n                jqrefItemY = $('#' + childElement.id + ' .ni-y-title'),\r\n                jqrefItemDetails = $('#' + childElement.id + ' .ni-details-title');\r\n\r\n            thisRef.css({\r\n                'font-size': fontSize,\r\n                'font-family': fontFamily,\r\n                'font-weight': fontWeight,\r\n                'font-style': fontStyle\r\n            });\r\n\r\n            jqrefContent.css({\r\n                'font-size': fontSize,\r\n                'font-family': fontFamily,\r\n                'font-weight': fontWeight,\r\n                'font-style': fontStyle\r\n            });\r\n            jqrefItemName.css({\r\n                'font-size': fontSize,\r\n                'font-family': fontFamily,\r\n                'font-weight': fontWeight,\r\n                'font-style': fontStyle\r\n            });\r\n            jqrefItemX.css({\r\n                'font-size': fontSize,\r\n                'font-family': fontFamily,\r\n                'font-weight': fontWeight,\r\n                'font-style': fontStyle\r\n            });\r\n            jqrefItemY.css({\r\n                'font-size': fontSize,\r\n                'font-family': fontFamily,\r\n                'font-weight': fontWeight,\r\n                'font-style': fontStyle\r\n            });\r\n            jqrefItemDetails.css({\r\n                'font-size': fontSize,\r\n                'font-family': fontFamily,\r\n                'font-weight': fontWeight,\r\n                'font-style': fontStyle\r\n            });\r\n        };\r\n\r\n        applyFont() {\r\n            var childElement = this.firstElementChild,\r\n                jqrefContent = $('#' + childElement.id + ' .jqx-widget-content'),\r\n                jqrefItemName = $('#' + childElement.id + ' .ni-cursor-title'),\r\n                jqrefItemX = $('#' + childElement.id + ' .ni-x-title'),\r\n                jqrefItemY = $('#' + childElement.id + ' .ni-y-title'),\r\n                jqrefItemDetails = $('#' + childElement.id + ' .ni-details-title');\r\n\r\n            var fontSize = $(this).css('font-size');\r\n            var fontFamily = $(this).css('font-family');\r\n            var fontWeight = $(this).css('font-weight');\r\n            var fontStyle = $(this).css('font-style');\r\n            jqrefContent.css({\r\n                'font-size': fontSize,\r\n                'font-family': fontFamily,\r\n                'font-weight': fontWeight,\r\n                'font-style': fontStyle\r\n            });\r\n            jqrefItemName.css({\r\n                'font-size': fontSize,\r\n                'font-family': fontFamily,\r\n                'font-weight': fontWeight,\r\n                'font-style': fontStyle\r\n            });\r\n            jqrefItemX.css({\r\n                'font-size': fontSize,\r\n                'font-family': fontFamily,\r\n                'font-weight': fontWeight,\r\n                'font-style': fontStyle\r\n            });\r\n            jqrefItemY.css({\r\n                'font-size': fontSize,\r\n                'font-family': fontFamily,\r\n                'font-weight': fontWeight,\r\n                'font-style': fontStyle\r\n            });\r\n            jqrefItemDetails.css({\r\n                'font-size': fontSize,\r\n                'font-family': fontFamily,\r\n                'font-weight': fontWeight,\r\n                'font-style': fontStyle\r\n            });\r\n        };\r\n\r\n        propertyChangedHandler(propertyName, oldValue, newValue) {\r\n            var that = this;\r\n\r\n            super.propertyChangedHandler(propertyName, oldValue, newValue);\r\n\r\n            switch (propertyName) {\r\n                case 'graphRef':\r\n                    // TODO: add a cursor-legend-detached event for parent graph\r\n                    this.helpers.graph.cursorLegend = null;\r\n                    var graphElement = this.findGraph();\r\n                    this.attachToGraph(graphElement);\r\n                    break;\r\n                case 'isInEditMode':\r\n                    // this changes once after the element is created\r\n                    this.helpers.isInEditMode = this.isInEditMode;\r\n\r\n                    if (this.addButton !== null) {\r\n                        $(this.addButton).jqxButton({disabled: this.isInEditMode});\r\n                    }\r\n\r\n                    $(this.table).find('.ni-center-icon').each(function(button) {\r\n                        $(this).jqxButton({\r\n                            disabled: that.isInEditMode\r\n                        });\r\n                    });\r\n\r\n                    $(this.table).find('.ni-expand-button').each(function(button) {\r\n                        $(this).jqxButton({\r\n                            disabled: that.isInEditMode\r\n                        });\r\n                    });\r\n\r\n                    $(this.table).find('.ni-snap-icon').each(function(button) {\r\n                        $(this).jqxToggleButton({\r\n                            disabled: that.isInEditMode\r\n                        });\r\n                    });\r\n\r\n                    $(this.table).find('.ni-delete-icon').each(function(button) {\r\n                        $(this).jqxToggleButton({\r\n                            disabled: that.isInEditMode\r\n                        });\r\n                    });\r\n\r\n                    $(this.table).find('.ni-visibility-button').each(function(button) {\r\n                        $(this).jqxToggleButton({\r\n                            disabled: that.isInEditMode\r\n                        });\r\n                    });\r\n\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        };\r\n    };\r\n\r\n    JQX('ni-cursor-legend', CursorLegend);\r\n}());\r\n","//****************************************\r\n// Plot Legend Prototype\r\n// DOM Registration: Not an element\r\n// National Instruments Copyright 2015\r\n//****************************************\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    // Constructor Function\r\n    NationalInstruments.HtmlVI.Elements.CursorLegendItemDisplay = function (helpers) {\r\n        this.helpers = helpers;\r\n        this.items = [];\r\n    };\r\n\r\n    // Static Public Variables\r\n    // None\r\n\r\n    var child = NationalInstruments.HtmlVI.Elements.CursorLegendItemDisplay;\r\n    var proto = child.prototype;\r\n\r\n    // Static Private Variables\r\n    var svgns = 'http://www.w3.org/2000/svg';\r\n\r\n    // Static Private Functions\r\n    // None\r\n\r\n    // Public Prototype Methods\r\n    proto.clearShape = function (index) {\r\n        this.items.splice(index, 1);\r\n    };\r\n\r\n    //Methods\r\n    proto.createHeaderDisplay = function (cursor) {\r\n        var svg;\r\n        if (cursor === undefined) {\r\n            return null;\r\n        }\r\n\r\n        svg = document.createElementNS(svgns, 'svg');\r\n        svg.setAttribute('class', 'ni-cursor-display');\r\n        svg.setAttribute('width', '16');\r\n        svg.setAttribute('height', '16');\r\n        svg.setAttribute('viewBox', '0,0,16,16');\r\n        svg.setAttributeNS('http://www.w3.org/2000/xmlns/', 'xmlns:xlink', 'http://www.w3.org/1999/xlink');\r\n        this.addShapes(cursor, svg, svgns);\r\n        this.items.push(svg);\r\n        return svg;\r\n    };\r\n\r\n    proto.addShapes = function (cursor, svg, svgns) {\r\n        this.makeShape(cursor, svg, svgns);\r\n        this.makeCursorCross(cursor, svg, svgns);\r\n    };\r\n\r\n    proto.makeCursorCross = function (cursor, svg, svgns) {\r\n        var crosshair = cursor.crosshairStyle;\r\n\r\n        switch (crosshair) {\r\n            case 'none':\r\n                break;\r\n            case 'vertical':\r\n                this.makeLine(cursor, svg, svgns, '8', '1', '8', '4');\r\n                this.makeLine(cursor, svg, svgns, '8', '12', '8', '15');\r\n                break;\r\n            case 'horizontal':\r\n                this.makeLine(cursor, svg, svgns, '12', '8', '15', '8');\r\n                this.makeLine(cursor, svg, svgns, '1', '8', '4', '8');\r\n                break;\r\n            default:\r\n                this.makeLine(cursor, svg, svgns, '8', '1', '8', '4');\r\n                this.makeLine(cursor, svg, svgns, '12', '8', '15', '8');\r\n                this.makeLine(cursor, svg, svgns, '8', '12', '8', '15');\r\n                this.makeLine(cursor, svg, svgns, '1', '8', '4', '8');\r\n                break;\r\n        }\r\n    };\r\n\r\n    proto.makeShape = function (cursor, svg, svgns) {\r\n        var rect, circle,\r\n            shape = cursor.targetShape,\r\n            style = window.getComputedStyle(cursor),\r\n            color = style.color;\r\n        switch (shape) {\r\n            case 'ellipse':\r\n                circle = document.createElementNS(svgns, 'circle');\r\n                circle.setAttribute('cx', '8');\r\n                circle.setAttribute('cy', '8');\r\n                circle.setAttribute('r', '4');\r\n                circle.setAttribute('stroke', color);\r\n                circle.setAttribute('stroke-width', '1');\r\n                circle.setAttribute('fill', 'rgba(0, 0, 0, 0)');\r\n                svg.appendChild(circle);\r\n                break;\r\n            case 'rectangle':\r\n                rect = document.createElementNS(svgns, 'rect');\r\n                rect.setAttribute('x', '4');\r\n                rect.setAttribute('y', '4');\r\n                rect.setAttribute('width', '8');\r\n                rect.setAttribute('height', '8');\r\n                rect.setAttribute('stroke', color);\r\n                rect.setAttribute('stroke-width', '1');\r\n                rect.setAttribute('fill', 'rgba(0, 0, 0, 0)');\r\n                svg.appendChild(rect);\r\n                break;\r\n            case 'diamond':\r\n                this.makeLine(cursor, svg, svgns, '8', '4', '12', '8');\r\n                this.makeLine(cursor, svg, svgns, '12', '8', '8', '12');\r\n                this.makeLine(cursor, svg, svgns, '8', '12', '4', '8');\r\n                this.makeLine(cursor, svg, svgns, '4', '8', '8', '4');\r\n                break;\r\n            case 'cross':\r\n                this.makeLine(cursor, svg, svgns, '4', '4', '12', '12');\r\n                this.makeLine(cursor, svg, svgns, '4', '12', '12', '4');\r\n                break;\r\n            case 'plus':\r\n                this.makeLine(cursor, svg, svgns, '8', '4', '8', '12');\r\n                this.makeLine(cursor, svg, svgns, '4', '8', '12', '8');\r\n                break;\r\n        }\r\n    };\r\n\r\n    proto.makeLine = function (cursor, svg, svgns, x1, y1, x2, y2) {\r\n        var line = document.createElementNS(svgns, 'line'),\r\n            style = window.getComputedStyle(cursor),\r\n            color = style.color;\r\n        line.setAttribute('x1', x1);\r\n        line.setAttribute('y1', y1);\r\n        line.setAttribute('x2', x2);\r\n        line.setAttribute('y2', y2);\r\n        line.setAttribute('stroke', color);\r\n        line.setAttribute('stroke-width', 1);\r\n        svg.appendChild(line);\r\n    };\r\n\r\n    proto.updateShape = function (cursor) {\r\n        var index = this.helpers.getIndex(cursor);\r\n        var svg = this.items[index];\r\n\r\n        if (cursor === undefined) {\r\n            return null;\r\n        }\r\n\r\n        if (svg === undefined) {\r\n            return null;\r\n        }\r\n\r\n        while (svg.firstChild) {\r\n            svg.removeChild(svg.firstChild);\r\n        }\r\n\r\n        this.addShapes(cursor, svg, svgns);\r\n    };\r\n}());\r\n","//****************************************\r\n// Plot Legend Helpers Prototype\r\n// DOM Registration: Not an element\r\n// National Instruments Copyright 2015\r\n//****************************************\r\n\r\n(function () {\r\n    'use strict';\r\n    // Static Private Reference Aliases\r\n    var NI_SUPPORT = NationalInstruments.HtmlVI.NISupport;\r\n    var $ = NationalInstruments.Globals.jQuery;\r\n\r\n    // Constructor Function\r\n    NationalInstruments.HtmlVI.Elements.CursorLegendHelpers = function () {\r\n        this.graph = null;\r\n        this.isInEditMode = false;\r\n        this.cursors = [];\r\n        this.defaultCursorName = NI_SUPPORT.i18n('msg_defaultcursorname');\r\n    };\r\n\r\n    // Static Public Variables\r\n    // None\r\n\r\n    var child = NationalInstruments.HtmlVI.Elements.CursorLegendHelpers;\r\n    var proto = child.prototype;\r\n\r\n    // Static Private Variables\r\n    // None\r\n\r\n    // Static Private Functions\r\n    // None\r\n\r\n    // Public Prototype Methods\r\n    proto.getMenuItem = function (name) {\r\n        if (name === 'shape') {\r\n            return {\r\n                name: 'Target Shape',\r\n                tag: 'msg_targetshape',\r\n                children: [\r\n                    { name: 'Ellipse', tag: 'msg_ellipse', cssClass: 'ni-ellipse-point-style-icon' },\r\n                    { name: 'Rectangle', tag: 'msg_rectangle', cssClass: 'ni-rect-point-style-icon' },\r\n                    { name: 'Diamond', tag: 'msg_diamond', cssClass: 'ni-diamond-point-style-icon' },\r\n                    { name: 'Cross', tag: 'msg_cross', cssClass: 'ni-cross-point-style-icon' },\r\n                    { name: 'Plus', tag: 'msg_plus', cssClass: 'ni-plus-point-style-icon' }\r\n                ]\r\n            };\r\n        } else if (name === 'crosshair') {\r\n            return {\r\n                name: 'Crosshair Style',\r\n                tag: 'msg_crosshairstyle',\r\n                children: [\r\n                    { name: 'No style', tag: 'msg_nostyle', cssClass: 'ni-no-crosshair-icon' },\r\n                    { name: 'Vertical', tag: 'msg_vertical', cssClass: 'ni-vertical-crosshair-icon' },\r\n                    { name: 'Horizontal', tag: 'msg_horizontal', cssClass: 'ni-horizontal-crosshair-icon' },\r\n                    { name: 'Both', tag: 'msg_both', cssClass: 'ni-both-crosshair-icon' }\r\n                ]\r\n            };\r\n        }\r\n    };\r\n\r\n    proto.cursorAdded = function (cursor) {\r\n        var i;\r\n        for (i = 0; i < this.cursors.length; i++) {\r\n            if (this.cursors[i] === cursor ||\r\n                (cursor.niControlId != null && this.cursors[i].niControlId === cursor.niControlId)) {\r\n                return; // its already in the list\r\n            }\r\n        }\r\n\r\n        this.cursors.push(cursor);\r\n    };\r\n\r\n    // if cursor is not already removed from the list then remove it\r\n    proto.cursorRemoved = function (cursor) {\r\n        var i;\r\n        for (i = 0; i < this.cursors.length; i++) {\r\n            if (this.cursors[i].niControlId === cursor.niControlId) {\r\n                this.cursors.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    };\r\n\r\n    proto.addCursor = function () {\r\n        var graph = this.graph;\r\n        var cursor = document.createElement('ni-cursor');\r\n        cursor.niControlId = NI_SUPPORT.uniqueId();\r\n        cursor.show = true;\r\n        cursor.showValue = true;\r\n        this.cursors.push(cursor);\r\n        cursor.label = this.nextCursorName();\r\n        graph.appendChild(cursor);\r\n    };\r\n\r\n    proto.cursorPositionChanged = function (cursor, changed) {\r\n        // TODO mraj is undefined an expected value?\r\n        if (cursor === undefined) {\r\n            throw new Error('cursor is undefined');\r\n        }\r\n\r\n        $(cursor).on('cursorUpdated', function (e, data) {\r\n            changed(data);\r\n        });\r\n    };\r\n\r\n    proto.clearCache = function () {\r\n        this.cursors.length = 0;\r\n    };\r\n\r\n    proto.getCursor = function (index) {\r\n        var i = 0;\r\n        var graph;\r\n        var cursor = null;\r\n        var child;\r\n        if (this.cursors[index] === null || this.cursors[index] === undefined) {\r\n            graph = this.graph;\r\n            if (graph !== null) {\r\n                for (child in graph.childNodes) {\r\n                    if (graph.childNodes[child].localName === 'ni-cursor') {\r\n                        if (i === index) {\r\n                            cursor = graph.childNodes[child];\r\n                            break;\r\n                        }\r\n\r\n                        i++;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (cursor !== null) {\r\n                this.cursors[index] = cursor;\r\n            }\r\n        }\r\n\r\n        return this.cursors[index];\r\n    };\r\n\r\n    proto.nextCursorName = function () {\r\n        var maxIndex = 0, i, cursor;\r\n        var graph = this.graph;\r\n        if (graph !== null) {\r\n            for (child in graph.childNodes) {\r\n                if (graph.childNodes[child].localName === 'ni-cursor') {\r\n                    cursor = graph.childNodes[child];\r\n                    i = parseInt(cursor.label.substring(this.defaultCursorName.length));\r\n                    if (i > maxIndex) {\r\n                        maxIndex = i;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this.defaultCursorName + ' ' + (maxIndex + 1);\r\n    };\r\n\r\n    proto.deleteCursor = function (cursor) {\r\n        var graph = this.graph;\r\n        if (cursor !== null && cursor !== undefined) {\r\n            graph.removeChild(cursor);\r\n        }\r\n    };\r\n\r\n    proto.getIndex = function (cursor) {\r\n        var i, index = -1;\r\n        for (i = 0; i < this.cursors.length; i++) {\r\n            if (this.cursors[i] !== null && cursor.niControlId === this.cursors[i].niControlId) {\r\n                index = i;\r\n            }\r\n        }\r\n\r\n        return index;\r\n    };\r\n\r\n    proto.handleClick = function (itemName, arg, cursor) {\r\n        if (cursor === null && cursor === undefined) {\r\n            return;\r\n        }\r\n\r\n        switch (itemName) {\r\n            case 'name':\r\n                break;\r\n            case 'x':\r\n                break;\r\n            case 'y':\r\n                break;\r\n            case 'visible':\r\n                cursor.show = !cursor.show;\r\n                break;\r\n            case 'snap':\r\n                cursor.snapToPlot = cursor.snapToPlot !== -1 ? -1 : undefined;\r\n                break;\r\n            case 'center':\r\n                cursor.snapToPlot = undefined;\r\n                cursor.x = 0.5;\r\n                cursor.y = 0.5;\r\n                break;\r\n            case 'delete':\r\n                this.deleteCursor(cursor);\r\n                break;\r\n            case 'Ellipse':\r\n                cursor.targetShape = 'ellipse';\r\n                break;\r\n            case 'Rectangle':\r\n                cursor.targetShape = 'rectangle';\r\n                break;\r\n            case 'Diamond':\r\n                cursor.targetShape = 'diamond';\r\n                break;\r\n            case 'Cross':\r\n                cursor.targetShape = 'cross';\r\n                break;\r\n            case 'Plus':\r\n                cursor.targetShape = 'plus';\r\n                break;\r\n            case 'No style':\r\n                cursor.crosshairStyle = 'none';\r\n                break;\r\n            case 'Vertical':\r\n                cursor.crosshairStyle = 'vertical';\r\n                break;\r\n            case 'Horizontal':\r\n                cursor.crosshairStyle = 'horizontal';\r\n                break;\r\n            case 'Both':\r\n                cursor.crosshairStyle = 'both';\r\n                break;\r\n            case 'Color':\r\n                cursor.setColor('#' + arg.hex);\r\n                break;\r\n        }\r\n    };\r\n\r\n    proto.getState = function (itemName, cursor) {\r\n        if (cursor === null || cursor === undefined) {\r\n            return undefined;\r\n        }\r\n\r\n        var state;\r\n        switch (itemName) {\r\n            case 'name':\r\n                state = cursor.label;\r\n                break;\r\n            case 'x':\r\n                state = cursor.x;\r\n                break;\r\n            case 'y':\r\n                state = cursor.y;\r\n                break;\r\n            case 'visible':\r\n                state = cursor.show;\r\n                break;\r\n            case 'snap':\r\n                state = cursor.snapToPlot === -1;\r\n                break;\r\n            case 'center':\r\n                break;\r\n            case 'delete':\r\n                break;\r\n            case 'Ellipse':\r\n                state = cursor.targetShape === 'ellipse';\r\n                break;\r\n            case 'Rectangle':\r\n                state = cursor.targetShape === 'rectangle';\r\n                break;\r\n            case 'Diamond':\r\n                state = cursor.targetShape === 'diamond';\r\n                break;\r\n            case 'Cross':\r\n                state = cursor.targetShape === 'cross';\r\n                break;\r\n            case 'Plus':\r\n                state = cursor.targetShape === 'plus';\r\n                break;\r\n            case 'No style':\r\n                state = cursor.crosshairStyle === 'none';\r\n                break;\r\n            case 'Vertical':\r\n                state = cursor.crosshairStyle === 'vertical';\r\n                break;\r\n            case 'Horizontal':\r\n                state = cursor.crosshairStyle === 'horizontal';\r\n                break;\r\n            case 'Both':\r\n                state = cursor.crosshairStyle === 'both';\r\n                break;\r\n            case 'Color':\r\n                state = window.getComputedStyle(cursor).color;\r\n                break;\r\n        }\r\n\r\n        return state;\r\n    };\r\n\r\n    proto.getTargetShape = function (index) {\r\n        var cursor = this.getCursor(index);\r\n        if (cursor !== null && cursor !== undefined) {\r\n            return cursor.targetShape;\r\n        }\r\n\r\n        return 'ellipse';\r\n    };\r\n\r\n    proto.getCrosshair = function (index) {\r\n        var cursor = this.getCursor(index);\r\n        if (cursor !== null && cursor !== undefined) {\r\n            return cursor.crosshairStyle;\r\n        }\r\n    };\r\n}());\r\n","//****************************************\r\n// Scale Legend Prototype\r\n// DOM Registration: No\r\n// National Instruments Copyright 2015\r\n//****************************************\r\n\r\n/**\r\n## ni-scale-legend\r\n\r\n> A custom element that provides a scale legend.\r\n\r\nUse it to visualize and change the axis modes of a graph, chart or intensity graph element.\r\n\r\nIt provides a list with all the axes of the graphs.\r\n\r\nEach axis in the list has two buttons - one to turn on/off the autoscaling for that axis and\r\nthe other one sets the scale range to the data range (without changing the autoScale mode)\r\n\r\nExample:\r\n```html\r\n<ni-cartesian-graph graph-ref=\"g1\" value=\"[[2, 3, 5, 7, 11, 13, 17, 19],\r\n                          [0, 1, 1, 2, 3, 5, 8, 13]]\">\r\n    <ni-cartesian-axis show label=\"Index\" axis-position=\"bottom\"></ni-cartesian-axis>\r\n    <ni-cartesian-axis show label=\"Value\" axis-position=\"left\"></ni-cartesian-axis>\r\n    <ni-cartesian-plot show label=\"Prime Numbers\">\r\n        <ni-cartesian-plot-renderer line-width=\"2\" line-stroke=\"red\">\r\n        </ni-cartesian-plot-renderer>\r\n    </ni-cartesian-plot>\r\n    <ni-cartesian-plot show label=\"Fibonacci Numbers\">\r\n        <ni-cartesian-plot-renderer line-width=\"2\" line-stroke=\"blue\">\r\n        </ni-cartesian-plot-renderer>\r\n    </ni-cartesian-plot>\r\n</ni-cartesian-graph>\r\n\r\n<ni-scale-legend graph-ref=\"g1\" mode=\"pan\"></ni-scale-legend>\r\n```\r\n*/\r\n\r\n(function() {\r\n    'use strict';\r\n\r\n    var $ = NationalInstruments.Globals.jQuery;\r\n\r\n    class ScaleLegend extends NationalInstruments.HtmlVI.Elements.GraphLegend {\r\n        created() {\r\n            super.created();\r\n\r\n            this.tbl = undefined;\r\n            this.nScales = 0;\r\n            this.currentExpander = null;\r\n            this.helpers = new NationalInstruments.HtmlVI.Elements.ScaleLegendHelpers();\r\n            this.uihelpers = new NationalInstruments.HtmlVI.Elements.LegendHelpers(this.helpers, null);\r\n        };\r\n\r\n        scaleAdded(scale) {\r\n            var index = this.helpers.scaleToIndex(scale),\r\n                alreadyAdded = index < this.nScales;\r\n            if (!alreadyAdded) {\r\n                this.createRow(this.tbl, this.nScales);\r\n                this.helpers.addScale(this.nScales);\r\n                this.nScales++;\r\n            }\r\n        };\r\n\r\n        scaleRemoved(scale) {\r\n            var tr, td, text, i, j, index, toRemove = null;\r\n            j = 0;\r\n            for (i = 0; i < this.tbl.childNodes.length; i++) {\r\n                if (this.tbl.childNodes[i].localName === 'tr') {\r\n                    tr = this.tbl.childNodes[i];\r\n                    td = tr.childNodes[0];\r\n                    text = td.innerText;\r\n                    if (text === scale.label) {\r\n                        toRemove = tr;\r\n                        index = j;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                j++;\r\n            }\r\n\r\n            if (toRemove !== null) {\r\n                this.tbl.removeChild(toRemove);\r\n                this.helpers.clearScale(index);\r\n            }\r\n\r\n            this.nScales--;\r\n        };\r\n\r\n        createRows() {\r\n            var i;\r\n            for (i = 0; i < this.nScales; i++) {\r\n                this.createRow(this.tbl, i);\r\n            }\r\n        };\r\n\r\n        removeRows() {\r\n            var i;\r\n            for (i = this.nScales - 1; i >= 0; i--) {\r\n                var scale = this.helpers.getScale(i);\r\n                this.scaleRemoved(scale);\r\n            }\r\n        };\r\n\r\n        attachToGraph(graphElement) {\r\n            this.detachFromGraph();\r\n            if (graphElement && graphElement.isReady) {\r\n                this.helpers.graph = graphElement;\r\n                graphElement.registerScaleLegend(this);\r\n            }\r\n        };\r\n\r\n        detachFromGraph() {\r\n            this.helpers.graph = null;\r\n            this.helpers.clearScale();\r\n            this.removeRows();\r\n        };\r\n\r\n        attached() {\r\n            super.attached();\r\n            var childElement = document.createElement('div');\r\n            var that = this;\r\n\r\n            this.helpers.graph = this.findGraph();\r\n            this.helpers.isInEditMode = this.isInEditMode;\r\n            childElement.style.width = '100%';\r\n            childElement.style.height = '100%';\r\n            this.appendChild(childElement);\r\n            this.tbl = document.createElement('table');\r\n            this.tbl.className = 'ni-scale-legend-box';\r\n            childElement.appendChild(this.tbl);\r\n            this.addEventListener('ni-cartesian-axis-attached', function(evt) {\r\n                var scale = evt.detail.originalSource;\r\n                that.scaleAdded(scale);\r\n            });\r\n            this.addEventListener('ni-cartesian-axis-detached', function(evt) {\r\n                that.scaleRemoved(evt.detail.originalSource);\r\n            });\r\n            this.addEventListener('ni-axis-changed', function(evt) {\r\n                var scale = evt.detail.originalSource;\r\n                var index = that.helpers.scaleToIndex(scale);\r\n                var labels = $(this.tbl).find('.ni-row-title');\r\n                var lockButtons = $(this.tbl).find('.ni-lock-button');\r\n                $(labels[index]).first().text(scale.label);\r\n                this.setLockBackground(lockButtons[index], false, index);\r\n            });\r\n            var graph = this.findGraph();\r\n\r\n            if (graph !== null) {\r\n                this.attachToGraph(graph);\r\n            }\r\n        };\r\n\r\n        createRow(tbl, index) {\r\n            var that = this;\r\n            var tr, td1, td2, td3, span, p, btnLock, btnResetOffset;\r\n\r\n            tr = document.createElement('tr');\r\n            tbl.appendChild(tr);\r\n            td1 = document.createElement('td');\r\n            td1.className = 'ni-row-title-box';\r\n            tr.appendChild(td1);\r\n            span = document.createElement('span');\r\n            span.className = 'ni-row-title';\r\n            td1.appendChild(span);\r\n            var scaleName = that.helpers.getState('name', index);\r\n            p = document.createTextNode(scaleName);\r\n            span.appendChild(p);\r\n\r\n            td2 = document.createElement('td');\r\n            td2.className = 'ni-lock-box';\r\n            tr.appendChild(td2);\r\n            btnLock = document.createElement('button');\r\n            btnLock.type = 'button';\r\n            btnLock.className = 'ni-lock-button ni-button';\r\n            $(btnLock).jqxToggleButton();\r\n            $(btnLock).jqxToggleButton({\r\n                disabled: !this.helpers.getState('canLock', index)\r\n            });\r\n            $(btnLock).on('click', function() {\r\n                that.helpers.handleClick('lock', index);\r\n                that.setLockBackground(btnLock, false, index);\r\n            });\r\n            that.setLockBackground(btnLock, true, index);\r\n            td2.appendChild(btnLock);\r\n\r\n            td3 = document.createElement('td');\r\n            td3.className = 'ni-reset-offset-box';\r\n            tr.appendChild(td3);\r\n            btnResetOffset = document.createElement('button');\r\n            btnResetOffset.type = 'button';\r\n            btnResetOffset.className = 'ni-reset-offset-icon ni-button';\r\n            $(btnResetOffset).on('click', function() {\r\n                that.helpers.handleClick('resetOffset', index);\r\n                that.setLockBackground(btnLock, false, index);\r\n            });\r\n            td3.appendChild(btnResetOffset);\r\n            this.applyFont();\r\n        };\r\n\r\n        setLockBackground(btn, first, index) {\r\n            var state = this.helpers.getState('lock', index);\r\n            if (state !== undefined) {\r\n                if (first === true) {\r\n                    $(btn).jqxToggleButton({\r\n                        'toggled': state\r\n                    });\r\n                }\r\n\r\n                if (state === true) {\r\n                    btn.classList.remove('ni-locked-icon');\r\n                    btn.classList.add('ni-unlocked-icon');\r\n                } else {\r\n                    btn.classList.remove('ni-unlocked-icon');\r\n                    btn.classList.add('ni-locked-icon');\r\n                }\r\n            }\r\n        };\r\n\r\n        setFont(fontSize, fontFamily, fontWeight, fontStyle, textDecoration) {\r\n            var childElement = this.firstElementChild,\r\n                thisRef = $(this),\r\n                jqrefItemTitle = $(childElement).find(' .ni-row-title');\r\n\r\n            thisRef.css({\r\n                'font-size': fontSize,\r\n                'font-family': fontFamily,\r\n                'font-weight': fontWeight,\r\n                'font-style': fontStyle\r\n            });\r\n\r\n            jqrefItemTitle.css({\r\n                'font-size': fontSize,\r\n                'font-family': fontFamily,\r\n                'font-weight': fontWeight,\r\n                'font-style': fontStyle\r\n            });\r\n        };\r\n\r\n        applyFont() {\r\n            var childElement = this.firstElementChild,\r\n                jqrefItemTitle = $(childElement).find(' .ni-row-title');\r\n\r\n            var fontSize = $(this).css('font-size');\r\n            var fontFamily = $(this).css('font-family');\r\n            var fontWeight = $(this).css('font-weight');\r\n            var fontStyle = $(this).css('font-style');\r\n\r\n            jqrefItemTitle.css({\r\n                'font-size': fontSize,\r\n                'font-family': fontFamily,\r\n                'font-weight': fontWeight,\r\n                'font-style': fontStyle\r\n            });\r\n        };\r\n\r\n        propertyChangedHandler(propertyName, oldValue, newValue) {\r\n            var that = this;\r\n\r\n            super.propertyChangedHandler(propertyName, oldValue, newValue);\r\n\r\n            switch (propertyName) {\r\n                case 'graphRef':\r\n                    // TODO: add a scale-legend-detached event for parent graph\r\n                    this.helpers.graph.scaleLegend = null;\r\n                    var graphElement = this.findGraph();\r\n                    this.attachToGraph(graphElement);\r\n                    break;\r\n                case 'isInEditMode':\r\n                    // this changes once after the element is created\r\n                    this.helpers.isInEditMode = this.isInEditMode;\r\n                    $(this.tbl).find('.ni-lock-button').each(function() {\r\n                        $(this).jqxToggleButton({\r\n                            disabled: that.isInEditMode\r\n                        });\r\n                    });\r\n                    $(this.tbl).find('.ni-reset-offset-icon').each(function() {\r\n                        $(this).prop('disabled', that.isInEditMode);\r\n                    });\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        };\r\n    };\r\n\r\n    JQX('ni-scale-legend', ScaleLegend);\r\n}());\r\n","//****************************************\r\n// Scale Legend Helpers Prototype\r\n// DOM Registration: Not an element\r\n// National Instruments Copyright 2015\r\n//****************************************\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    // Constructor Function\r\n    NationalInstruments.HtmlVI.Elements.ScaleLegendHelpers = function () {\r\n        this.graph = null;\r\n        this.isInEditMode = false;\r\n        this.scales = [];\r\n    };\r\n\r\n    // Static Public Variables\r\n    // None\r\n\r\n    var child = NationalInstruments.HtmlVI.Elements.ScaleLegendHelpers;\r\n    var proto = child.prototype;\r\n\r\n    // Static Private Variables\r\n    // None\r\n\r\n    // Static Private Functions\r\n    // None\r\n\r\n    // Public Prototype Methods\r\n    proto.addScale = function () {\r\n    };\r\n\r\n    proto.clearScale = function (index) {\r\n        this.scales[index] = null;\r\n    };\r\n\r\n    proto.getScale = function (index) {\r\n        var i = 0;\r\n        var graph;\r\n        var scale = null;\r\n        var child;\r\n        if (this.scales[index] === null || this.scales[index] === undefined) {\r\n            graph = this.graph;\r\n\r\n            if (graph !== null) {\r\n                for (child in graph.childNodes) {\r\n                    if (graph.childNodes[child].localName === 'ni-cartesian-axis' ||\r\n                        graph.childNodes[child].localName === 'ni-color-scale') {\r\n                        if (i === index) {\r\n                            scale = graph.childNodes[child];\r\n                            break;\r\n                        }\r\n\r\n                        i++;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (scale === null) {\r\n                return null;\r\n            }\r\n\r\n            this.scales[index] = scale;\r\n        }\r\n\r\n        return this.scales[index];\r\n    };\r\n\r\n    proto.scaleToIndex = function (scale) {\r\n        var i = 0, index = -1, graph, child, currentScale;\r\n        graph = this.graph;\r\n        if (graph !== null) {\r\n            for (child in graph.childNodes) {\r\n                if (graph.childNodes[child].localName === 'ni-cartesian-axis' ||\r\n                    graph.childNodes[child].localName === 'ni-color-scale') {\r\n                    currentScale = graph.childNodes[child];\r\n                    if (currentScale === scale) {\r\n                        index = i;\r\n                        break;\r\n                    }\r\n\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n\r\n        return index;\r\n    };\r\n\r\n    proto.handleClick = function (itemName, index) {\r\n        if (this.isInEditMode !== true) {\r\n            var scale = this.getScale(index);\r\n\r\n            if (scale === null) {\r\n                return;\r\n            }\r\n\r\n            switch (itemName) {\r\n                case 'lock':\r\n                    if (scale.autoScale !== 'none') {\r\n                        // save initial autoScale option and\r\n                        // turns off autoScale\r\n                        scale.initialAutoscale = scale.autoScale;\r\n                        scale.autoScale = 'none';\r\n                        scale.resetOffset();\r\n                    } else {\r\n                        //if the chosen autoScale option is none on unlock we set it to loose\r\n                        scale.autoScale = scale.initialAutoscale ? scale.initialAutoscale : 'loose';\r\n                    }\r\n\r\n                    break;\r\n                case 'resetOffset':\r\n                    if (scale.resetOffset) {\r\n                        scale.resetOffset();\r\n                    }\r\n                    break;\r\n            }\r\n\r\n            var plot = scale._parentGraph.graph;\r\n            plot.setupGrid();\r\n            plot.draw();\r\n        }\r\n    };\r\n\r\n    proto.getState = function (itemName, index) {\r\n        var scale = this.getScale(index);\r\n        if (scale === null) {\r\n            return undefined;\r\n        }\r\n\r\n        var state;\r\n        switch (itemName) {\r\n            case 'canLock':\r\n                state = scale.localName !== 'ni-color-scale';\r\n                break;\r\n            case 'lock':\r\n                state = scale.autoScale !== 'none';\r\n                break;\r\n            case 'resetOffset':\r\n                break;\r\n            case 'name':\r\n                state = scale.label;\r\n                break;\r\n        }\r\n\r\n        return state;\r\n    };\r\n}());\r\n","//****************************************\r\n// Graph Tools Element\r\n// DOM Registration: No\r\n// National Instruments Copyright 2017\r\n//****************************************\r\n\r\n/**\r\n## ni-graph-tools\r\n\r\n> A custom element that provides a graph tools \"legend\".\r\n\r\nUse it to add navigation controls to a graph, chart or intensity graph element.\r\nIt provides buttons to switch between pan mode, box zoom mode or to lock navigation.\r\n\r\nIt also provides a resetOffset button which resets the axes to the range of the data.\r\n\r\nExample:\r\n```html\r\n<ni-cartesian-graph graph-ref=\"g1\" value=\"[[2, 3, 5, 7, 11, 13, 17, 19],\r\n                          [0, 1, 1, 2, 3, 5, 8, 13]]\">\r\n  <ni-cartesian-axis show label=\"Index\" axis-position=\"bottom\"></ni-cartesian-axis>\r\n  <ni-cartesian-axis show label=\"Value\" axis-position=\"left\"></ni-cartesian-axis>\r\n</ni-cartesian-graph>\r\n\r\n<ni-graph-tools graph-ref=\"g1\" mode=\"pan\"></ni-graph-tools>\r\n```\r\n*/\r\n\r\n(function() {\r\n    'use strict';\r\n\r\n    var ModeEnum = Object.freeze({\r\n        LOCKED: 'locked',\r\n        PAN: 'pan',\r\n        ZOOM: 'zoom'\r\n    });\r\n\r\n    var MODE_ENUM = ModeEnum;\r\n    var $ = NationalInstruments.Globals.jQuery;\r\n    var NI_SUPPORT = NationalInstruments.HtmlVI.NISupport;\r\n\r\n    var navigationStates = {};\r\n    navigationStates[MODE_ENUM.LOCKED] = [true, false, false];\r\n    navigationStates[MODE_ENUM.PAN] = [false, true, false];\r\n    navigationStates[MODE_ENUM.ZOOM] = [false, false, true];\r\n\r\n    class GraphTools extends NationalInstruments.HtmlVI.Elements.GraphLegend {\r\n        /**### ni-graph-tools properties*/\r\n\r\n        /// include ./ni-graph-legend.js\r\n        static get properties() {\r\n            const props = Object.assign({}, super.properties, {\r\n                /** **mode** (string) - the mode of the graph tools. Default: 'pan'.\r\n                Accepted values: 'locked', 'pan', 'zoom'*/\r\n                'mode': {\r\n                    value: MODE_ENUM.PAN,\r\n                    type: 'string'\r\n                }\r\n            });\r\n\r\n            return props;\r\n        }\r\n\r\n        /**### ni-graph-tools methods*/\r\n        created() {\r\n            super.created();\r\n            this._parentGraph = undefined;\r\n        };\r\n\r\n        ready () {\r\n            super.ready();\r\n            this.addListeners();\r\n        }\r\n\r\n        attachToGraph(graphElement) {\r\n            if (graphElement.isReady) {\r\n                this._parentGraph = graphElement;\r\n                graphElement.registerGraphTools(this);\r\n            }\r\n        };\r\n\r\n        /* The result of user interactions (pan, zoom, ..) are often modified axes\r\n        parameters in the flot datastructures.\r\n        When needed, call this function to update the ni-cartesian-axis elements to have te new values */\r\n        updateCartesianAxesFromFlot() {\r\n            this._parentGraph.axes.forEach(function(axis) {\r\n                if (axis instanceof JQX.CartesianAxis) {\r\n                    axis.syncWithFlot();\r\n                }\r\n            });\r\n        };\r\n\r\n        addListeners() {\r\n            var that = this,\r\n                applySelection = function(axis, selection) {\r\n                    var opts = axis.options,\r\n                        offsetBelow = selection.from - axis.min,\r\n                        offsetAbove = selection.to - axis.max;\r\n\r\n                    if (opts.offset) {\r\n                        opts.offset.below += offsetBelow;\r\n                        opts.offset.above += offsetAbove;\r\n                    } else {\r\n                        opts.offset = {\r\n                            above: offsetAbove,\r\n                            below: offsetBelow\r\n                        };\r\n                    }\r\n                };\r\n\r\n            this.addEventListener('ni-cartesian-graph-box-selected', function(evt) {\r\n                // a rectangle selection was made on the graph, zoom into that selection\r\n                // info about the selection box is passed in the event details (ranges)\r\n                var ranges = evt.detail.originalSource.ranges;\r\n                var plot = that._parentGraph.graph;\r\n\r\n                $.each(plot.getAxes(), function (name, axis) {\r\n                    if (axis.options.disableZoom !== true && ranges[name]) {\r\n                        applySelection(axis, ranges[name]);\r\n                    }\r\n                });\r\n\r\n                // redraw plot\r\n                plot.setupGrid();\r\n                plot.draw();\r\n                plot.clearSelection();\r\n\r\n                this.updateCartesianAxesFromFlot();\r\n            });\r\n\r\n            this.addEventListener('ni-cartesian-graph-interaction', function() {\r\n                this.updateCartesianAxesFromFlot();\r\n            });\r\n        }\r\n\r\n        attached() {\r\n            super.attached();\r\n\r\n            var childElement;\r\n\r\n            childElement = document.createElement('div');\r\n            childElement.id = 'div' + NI_SUPPORT.uniqueId();\r\n            childElement.style.width = '100%';\r\n            childElement.style.height = '100%';\r\n            this.appendChild(childElement);\r\n            this.table = document.createElement('table');\r\n            this.table.className = 'ni-graph-tools-box';\r\n            childElement.appendChild(this.table);\r\n\r\n            this.createRow(this.table);\r\n\r\n            var graph = this.findGraph();\r\n            if (graph !== null && graph instanceof NationalInstruments.HtmlVI.Elements.CartesianGraphBase) {\r\n                this.attachToGraph(graph);\r\n            }\r\n        };\r\n\r\n        detached() {\r\n            super.detached();\r\n\r\n            this._parentGraph = undefined;\r\n            this.table = undefined;\r\n            $(this).empty();\r\n        }\r\n\r\n        /** **asyncProcessAllImagesForComposition** - gathers all the required\r\n        layers of a graph, chart etc (i.e. plot, axes, cursors, legend),\r\n        adds a background color to them and creates a snapshot (as canvas).\r\n        If no background color is specified, it uses the plot background color.\r\n        It returns a promise, which can be used to get the generated snapshot\r\n        image. Using *downloadSnapshot* function, this image can be downloaded\r\n        to disk (see *downloadSnapshot* function below).\r\n        asyncProcessAllImagesForComposition is available, to allow users to\r\n        write their own custom download functions.\r\n\r\n    Example:\r\n    ```js\r\n    var asyncSnapshot = function() {\r\n        asyncProcessAllImagesForComposition().then(triggerDownload(), failureCallback);\r\n        _parentGraph.graph.getEventHolder().removeEventListener('onDrawingDone', asyncSnapshot);\r\n    };\r\n    _parentGraph.graph.getEventHolder().addEventListener('onDrawingDone', asyncSnapshot);\r\n    _parentGraph.updateGraphConfig();\r\n    ```\r\n        */\r\n        asyncProcessAllImagesForComposition(userBackgroundColor) {\r\n            var that = this;\r\n\r\n            function getDisposeBackgroundSVG(backgroundSVG) {\r\n                return function disposeBackgroundSVG(result) {\r\n                    backgroundSVG.parentNode.removeChild(backgroundSVG);\r\n                }\r\n            }\r\n\r\n            function failureCallback() {\r\n            };\r\n\r\n            function drawARectangleOnSVG(backgroundSVG, color) {\r\n                var rectangle = document.createElementNS(backgroundSVG, 'rect');\r\n                rectangle.setAttributeNS(null, 'x', 0);\r\n                rectangle.setAttributeNS(null, 'y', 0);\r\n                rectangle.setAttributeNS(null, 'style', 'fill:' + color);\r\n                rectangle.setAttributeNS(null, 'width', backgroundSVG.width.baseVal.value + 'px');\r\n                rectangle.setAttributeNS(null, 'height', backgroundSVG.height.baseVal.value + 'px');\r\n                backgroundSVG.appendChild(rectangle);\r\n            }\r\n\r\n            function createBackgroundSVG(backgroundSVG, graphCanvas) {\r\n                const bkBorderWidth = 10,\r\n                    bkBorderWidth2x = bkBorderWidth * 2;\r\n\r\n                var pixelRatio = $.plot.browser.getPixelRatio(graphCanvas.getContext('2d'));\r\n                var bkBorderWidth2xScaled = bkBorderWidth2x * pixelRatio;\r\n\r\n                document.body.insertBefore(backgroundSVG, document.body.childNodes[0]);\r\n\r\n                if (pixelRatio < 1) {\r\n                    backgroundSVG.setAttributeNS(null, 'width', graphCanvas.width / pixelRatio + bkBorderWidth2xScaled);\r\n                    backgroundSVG.setAttributeNS(null, 'height', graphCanvas.height / pixelRatio + bkBorderWidth2xScaled);\r\n                } else {\r\n                    backgroundSVG.setAttributeNS(null, 'width', graphCanvas.width + bkBorderWidth2xScaled);\r\n                    backgroundSVG.setAttributeNS(null, 'height', graphCanvas.height + bkBorderWidth2xScaled);\r\n                }\r\n\r\n                backgroundSVG.style.width = graphCanvas.style.width + bkBorderWidth2xScaled;\r\n                backgroundSVG.style.height = graphCanvas.style.height + bkBorderWidth2xScaled;\r\n                backgroundSVG.style.position = 'absolute';\r\n\r\n                var svgLeft = graphCanvas.getBoundingClientRect().left + window.scrollX - bkBorderWidth;\r\n                var svgTop = graphCanvas.getBoundingClientRect().top + window.scrollY - bkBorderWidth;\r\n                backgroundSVG.style.left = svgLeft + 'px';\r\n                backgroundSVG.style.top = svgTop + 'px';\r\n            }\r\n\r\n            function getSVGFromLegendLayer(graphRef) {\r\n                const containerClassNames = [\r\n                    /*'ni-light-plot-legend',*/\r\n                    'ni-chart',\r\n                    'ni-cartesian-graph',\r\n                    'ni-intensity-graph'\r\n                ];\r\n                var result = null;\r\n                var searchQuery = '';\r\n                for (var i = 0; i < containerClassNames.length; i++) {\r\n                    searchQuery = containerClassNames[i] + '[graph-ref=\"' + graphRef + '\"] svg.legendLayer';\r\n                    result = document.querySelector(searchQuery);\r\n                    if ((result !== null) && (result !== undefined)) {\r\n                        break;\r\n                    }\r\n                }\r\n                return result;\r\n            }\r\n\r\n            // Get the SVG element for the cursor thumbs\r\n            function getSVGForCursorThumbs(parentGraph) {\r\n                const placeholder = parentGraph.graph.getPlaceholder();\r\n\r\n                if (placeholder && placeholder.find('.flot-thumbs')[0]) {\r\n                    return placeholder.find('.flot-thumbs')[0].firstChild;\r\n                }\r\n\r\n                return null;\r\n            }\r\n\r\n            var graphCanvas = that._parentGraph.graph.getCanvas(),\r\n                backgroundSVG = document.createElementNS('http://www.w3.org/2000/svg', 'svg'),\r\n                graphSVG = that._parentGraph.graph.getSurface().SVGContainer.childNodes[0],\r\n                cursorsFlotOverlay = that._parentGraph.graph.getEventHolder(),\r\n                cursorThumbs = getSVGForCursorThumbs(that._parentGraph),\r\n                legendSVG = getSVGFromLegendLayer(that._parentGraph.graphRef),\r\n                sources,\r\n                snapshotBackgroundColor;\r\n\r\n            createBackgroundSVG(backgroundSVG, graphCanvas);\r\n            if (userBackgroundColor !== undefined) {\r\n                snapshotBackgroundColor = userBackgroundColor;\r\n            } else {\r\n                snapshotBackgroundColor = window.getComputedStyle(that._parentGraph).backgroundColor;\r\n            }\r\n            drawARectangleOnSVG(backgroundSVG, snapshotBackgroundColor);\r\n\r\n            sources = [backgroundSVG, graphCanvas, graphSVG, cursorsFlotOverlay, cursorThumbs, legendSVG];\r\n\r\n            var destinationCanvas = document.createElement('canvas'),\r\n                asynResult = that._parentGraph.takeGraphSnapshot(sources, destinationCanvas);\r\n\r\n            return asynResult\r\n                .then(getDisposeBackgroundSVG(backgroundSVG), failureCallback)\r\n                .then(function() {\r\n                    return destinationCanvas;\r\n                }, failureCallback);\r\n        }\r\n\r\n        /** **downloadSnapshot** - is a wrapper over *asyncProcessAllImagesForComposition*\r\n        function, used to generate a filename and trigger the actual download of\r\n        a graph snaphot. It also updates the plot dimensions to the page zoom,\r\n        before calling *asyncProcessAllImagesForComposition*. This allows creating\r\n        a high resolution snapshot, simply by zooming the page in.\r\n        Updating the plot dimensions as the page is zoomed in/out, is a requirement,\r\n        to make sure all layers of a snapshot are scaled accordingly.\r\n        As a limitation, it may not be possible to create and download snapshots\r\n        at every refresh of a plot.\r\n\r\n    Example:\r\n    ```js\r\n    function takeGraphSnapshotOnClick() {\r\n        downloadSnapshot();\r\n    }\r\n    ```\r\n        */\r\n        downloadSnapshot() {\r\n            var that = this;\r\n\r\n            function getCopyCanvasToImg() {\r\n                return function copyCanvasToImgOuter(canvas) {\r\n                    var img = document.createElement('img');\r\n                    img.width = canvas.width;\r\n                    img.height = canvas.height;\r\n                    img.src = canvas.toDataURL('image/png');\r\n\r\n                    var downloadBlob = function(blob) {\r\n                        var url = URL.createObjectURL(blob);\r\n\r\n                        img.src = url;\r\n\r\n                        var downloadLinkElement = document.createElement('A');\r\n                        downloadLinkElement.download = 'Snapshot_' + getDateTimeAsString() + '.png';\r\n                        downloadLinkElement.href = img.src;\r\n                        var clickEvent = new MouseEvent('click');\r\n                        downloadLinkElement.dispatchEvent(clickEvent);\r\n                    };\r\n\r\n                    if ($.plot.browser.isEdge()) {\r\n                        downloadBlob(canvas.msToBlob());\r\n                    } else {\r\n                        canvas.toBlob(downloadBlob);\r\n                    }\r\n                    return canvas;\r\n                }\r\n            }\r\n\r\n            //function adapted from https://stackoverflow.com/questions/221294/how-do-you-get-a-timestamp-in-javascript\r\n            function getDateTimeAsString() {\r\n                var currentTime = new Date(),\r\n                    year = currentTime.getFullYear(),\r\n                    month = currentTime.getMonth() + 1, //this returns 0-11, so add a 1\r\n                    date = currentTime.getDate(),\r\n                    hours = currentTime.getHours(),\r\n                    minutes = currentTime.getMinutes(),\r\n                    seconds = currentTime.getSeconds();\r\n\r\n                if (month < 10) {\r\n                    month = '0' + month;\r\n                }\r\n                if (date < 10) {\r\n                    date = '0' + date;\r\n                }\r\n                if (hours < 10) {\r\n                    hours = '0' + hours;\r\n                }\r\n                if (minutes < 10) {\r\n                    minutes = '0' + minutes;\r\n                }\r\n                if (seconds < 10) {\r\n                    seconds = '0' + seconds;\r\n                }\r\n\r\n                var str = year + '.' + month + '.' + date + '_' + hours + '.' + minutes + '.' + seconds;\r\n                return str;\r\n            }\r\n\r\n            function failureCallback() {\r\n            };\r\n\r\n            var asyncSnapshot = function() {\r\n                that.asyncProcessAllImagesForComposition().then(getCopyCanvasToImg(), failureCallback);\r\n                that._parentGraph.graph.getEventHolder().removeEventListener('onDrawingDone', asyncSnapshot);\r\n            };\r\n            that._parentGraph.graph.getEventHolder().addEventListener('onDrawingDone', asyncSnapshot);\r\n\r\n            that._parentGraph.updateGraphConfig();\r\n        }\r\n\r\n        createRow(tbl) {\r\n            var that = this;\r\n            var tr, td1, td2, td3, td4, td5, navNone, btnPan, btnZoom, btnZoomOut, btnSnapshot;\r\n\r\n            function setNavButtonsState(locked, pan, zoom) {\r\n                $(navNone).jqxToggleButton({\r\n                    disabled: locked\r\n                });\r\n                $(btnPan).jqxToggleButton({\r\n                    disabled: pan\r\n                });\r\n                $(btnZoom).jqxToggleButton({\r\n                    disabled: zoom\r\n                });\r\n            }\r\n\r\n            function setMode(mode) {\r\n                var states = navigationStates[mode];\r\n\r\n                if (states) {\r\n                    setNavButtonsState.apply(null, states);\r\n                    that.mode = mode;\r\n                }\r\n            }\r\n\r\n            function takeGraphSnapshotOnClick() {\r\n                that.downloadSnapshot();\r\n            }\r\n\r\n            tr = document.createElement('tr');\r\n            tbl.appendChild(tr);\r\n\r\n            td1 = document.createElement('td');\r\n            td1.className = 'ni-button-box';\r\n            tr.appendChild(td1);\r\n            navNone = document.createElement('button');\r\n            navNone.type = 'button';\r\n            navNone.className = 'ni-locked-icon ni-button';\r\n            $(navNone).jqxToggleButton();\r\n            $(navNone).on('click', function() {\r\n                setMode(MODE_ENUM.LOCKED);\r\n            });\r\n            td1.appendChild(navNone);\r\n\r\n            td2 = document.createElement('td');\r\n            td2.className = 'ni-button-box';\r\n            tr.appendChild(td2);\r\n            btnPan = document.createElement('button');\r\n            btnPan.type = 'button';\r\n            btnPan.className = 'ni-pan-icon ni-button';\r\n            $(btnPan).jqxToggleButton();\r\n            $(btnPan).on('click', function() {\r\n                setMode(MODE_ENUM.PAN);\r\n            });\r\n            td2.appendChild(btnPan);\r\n\r\n            td3 = document.createElement('td');\r\n            td3.className = 'ni-button-box';\r\n            tr.appendChild(td3);\r\n            btnZoom = document.createElement('button');\r\n            btnZoom.type = 'button';\r\n            btnZoom.className = 'ni-zoom-region-icon ni-button';\r\n            $(btnZoom).on('click', function() {\r\n                setMode(MODE_ENUM.ZOOM);\r\n            });\r\n            td3.appendChild(btnZoom);\r\n\r\n            setMode(this.mode); // initialize the \"navigation radio butons\" in the default mode\r\n            td4 = document.createElement('td');\r\n            td4.className = 'ni-button-box';\r\n            tr.appendChild(td4);\r\n            btnZoomOut = document.createElement('button');\r\n            btnZoomOut.type = 'button';\r\n            btnZoomOut.className = 'ni-zoom-out-icon ni-button';\r\n            $(btnZoomOut).jqxButton({\r\n                disabled: false\r\n            });\r\n            $(btnZoomOut).on('click', function() {\r\n                that._parentGraph.axes.forEach(function(axis) {\r\n                    if (axis.resetOffset) {\r\n                        axis.resetOffset();\r\n                    }\r\n                });\r\n\r\n                var plot = that._parentGraph.graph;\r\n                plot.setupGrid();\r\n                plot.draw();\r\n            });\r\n            td4.appendChild(btnZoomOut);\r\n\r\n            td5 = document.createElement('td');\r\n            td5.className = 'ni-button-box';\r\n            tr.appendChild(td5);\r\n            btnSnapshot = document.createElement('button');\r\n            btnSnapshot.type = 'button';\r\n            btnSnapshot.className = 'ni-snapshot-icon ni-button';\r\n            $(btnSnapshot).jqxButton({disabled: false});\r\n            $(btnSnapshot).on('click', function() {\r\n                takeGraphSnapshotOnClick(td5);\r\n            });\r\n            td5.appendChild(btnSnapshot);\r\n        };\r\n\r\n        allowsScrollWheelZoom() {\r\n            return this.mode === MODE_ENUM.PAN || this.mode === MODE_ENUM.ZOOM;\r\n        };\r\n\r\n        allowsPan() {\r\n            return this.mode === MODE_ENUM.PAN;\r\n        };\r\n\r\n        sendEventToParentGraph(name) {\r\n            var eventConfig;\r\n\r\n            if (this._parentGraph !== undefined) {\r\n                eventConfig = {\r\n                    bubbles: true,\r\n                    cancelable: true,\r\n                    detail: {\r\n                        element: this\r\n                    }\r\n                };\r\n\r\n                this._parentGraph.dispatchEvent(new CustomEvent(name, eventConfig));\r\n            }\r\n        };\r\n\r\n        propertyChangedHandler(propertyName, oldValue, newValue) {\r\n            super.propertyChangedHandler(propertyName, oldValue, newValue);\r\n\r\n            switch (propertyName) {\r\n                case 'graphRef':\r\n                    // should never change\r\n                    break;\r\n                case 'mode':\r\n                    this.sendEventToParentGraph('ni-graph-tools-changed');\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        };\r\n    };\r\n\r\n    JQX('ni-graph-tools', GraphTools);\r\n}());\r\n"]}