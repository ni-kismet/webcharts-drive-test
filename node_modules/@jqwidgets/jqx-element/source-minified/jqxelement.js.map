{"version":3,"sources":["jqxelement.js"],"names":["LocalizationModule","babelHelpers","classCallCheck","this","createClass","key","value","messageKey","messages","that","Object","assign","messageArguments","language","message","defaultMessage","messageName","messageValue","replace","RegExp","localizeFormatFunction","get","en","type","inherit","reflectToAttribute","undefined","ErrorModule","_logger","level","error","debugMode","errorMessage","Error","toString","console","rethrowError","BindingModule","node","index","map","boundData","HTMLElement","parseAttributes","boundProperty","parseProperty","data","parentNode","ownerElement","$","content","html","innerHTML","textContent","getAttribute","nodeId","firstChild","children","child","nextSibling","getBindings","htmlElement","boundProperties","i","attributes","length","attribute","attributeName","name","attributeValue","cache","Utilities","Core","toCamelCase","propertyName","indexOf","eventName","substring","templateListeners","removeAttribute","text","startIndex","lastIndex","endIndex","twoWay","twoWayStart","terminator","pathString","slice","trim","updateToken","isNativeElement","toDash","_attributeName","getAttributeValue","setAttributeValue","eventIndex","listen","boundPropertyName","updateBoundProperty","window","JQX","BaseElement","_attributeName2","_propertyName","_properties","notify","event","detail","elementProperty","ready","updateTextNode","shadowRoot","bindings","element","updating","propertyConfig","updateBoundNode","detachedChildren","jqxId","_node","result","detached","defaultValue","oldValue","isUpdating","_attributeName3","_oldValue","_attributeName4","Types","constructor","call","apply","Array","isArray","typeof","isFunction","Date","types","find","toLowerCase","g","toUpperCase","split","join","entityMap","&","<",">","\"","'","/","`","=","String","s","CSS","supports","target","source","_this","isObject","item","output","keys","forEach","defineProperty","htmlString","nodes","childNodes","rxhtmlTag","l","miscElements","tagName","attr","attrs","nodeOutput","j","escapeHTML","test","navigator","userAgent","styleObservedElements","StyleObserver","push","interval","clearInterval","setInterval","observe","computedStyle","document","defaultView","getComputedStyle","canRaiseResize","styleProperties","_styleInfo","isHidden","offsetWidth","offsetHeight","visibilityChangedHandler","changedStyleProperties","_i","_styleProperty","fireEvent","bubbles","cancelable","styleProperty","observeElement","splice","inputEventTypes","InputEvents","$target","_Extend","$document","id","handlers","boundEventTypes","bind","unlisten","tapHoldDelay","swipeMin","swipeMax","swipeDelay","inputEventProperties","eventType","handler","moveEvent","createEvent","resizeTrigger","container","createElement","className","appendChild","expand","expandChild","shrink","reset","style","width","height","scrollLeft","scrollTop","dirty","requestAnimationFrameId","newWidth","newHeight","lastWidth","lastHeight","resizeHandler","requestAnimationFrame","requiresLayout","resizeEvent","CustomEvent","resize","addEventListener","isListening","isPressed","isReleased","isInBounds","PointerEvent","pointerDown","pointerUp","pointerMove","pointerCancel","touchMove","touchStart","touchEnd","touchCancel","mouseDown","mouseUp","mouseMove","mouseLeave","handleDocumentUp","removeEventListener","removeChild","resetSwipe","touches","changedTouches","touch","customEvent","originalEvent","_key","clearTimeout","tapHoldTimeout","tapHoldFired","tap","setTimeout","taphold","handleDown","touchStartTime","isTouchMoved","touchEndTime","handleUp","down","initTap","initSwipe","up","fireTap","eventResult","move","_maxSwipeVerticalDistance","Math","max","abs","_startY","pageY","_maxSwipeHorizontalDistance","_startX","pageX","handleSwipeEvents","handleMove","handleVerticalSwipeEvents","handleHorizontalSwipeEvents","current","diff","swiped","direction","_swipeEvent","_swipeLocked","stopImmediatePropagation","_swipeTimeout","Scroll","horizontalScrollBar","verticalScrollBar","autoScroll","elapsed","delta","currentScrollInfo","amplitude","now","timestamp","exp","timeConstant","scroll","targetValue","cancelAnimationFrame","rafId","isMobile","inputEvents","dragStarted","pointerCaptured","ticker","createScrollInfo","scrollBar","initialValue","min","previousValue","pointerPosition","velocity","hScrollInfo","vScrollInfo","track","updateScrollInfo","scrollInfo","clientY","clientX","startScroll","round","preventDefault","stopPropagation","visible","ratio","dragged","doDrag","verticalDragResult","horizontalDragResult","set","Extend","events","classList","_that$element$classLi","hasClass","add","toConsumableArray","_that$element$classLi2","remove","handleObjects","handleObject","namespace","context","defaultPrevented","options","originalStopPropagation","isPropagationStopped","dispatchEvent","typesArray","dispatch","findIndex","o","attributeString","deserialize","propertyByAttributeName","nullable","newAttributeValue","serialize","booleans","setAttribute","getType","JSON","stringify","stringValue","nullValue","NaN","Infinity","parseFloat","parseInt","jsonObject","parse","er","moduleName","module","_HTMLElement","possibleConstructorReturn","__proto__","getPrototypeOf","arguments","inherits","onRegistered","isReady","_initElement","_setModuleState","onCreated","onReady","isCompleted","isAttached","attached","_handleListeners","property","attributeValueString","isNaN","localizedError","localize","actualType","log","isUpdatingFromAttribute","_property","defaultReflectToAttribute","applyTemplate","complete","templateBindingsReady","updateTemplateBindings","updateTextNodes","updateBoundNodes","owner","owners","_i2","onCompleted","templateNodes","querySelectorAll","_readyListeners","_i3","_node2","readyEventHandler","newValue","attributeChanged","newPropertyValue","watch","onAttached","unwatch","onDetached","propertyChanged","action","listeners","getStaticMember","processListeners","listener","path","handlerName","template","fragment","createDocumentFragment","tmpElement","templateElement","parseTemplate","importNode","hasChildNodes","rootElement","contentElement","getElementsByTagName","contentInsertionPoint","preudoContentElement","templateNode","$root","addClass","appendTemplate","proto","prototype","modules","addModule","properties","propertyChangedCallback","_watch","stateName","args","statusName","callbackName","modulesList","currentModule","defineModule","defineElementMethods","methodNames","defineElementProperties","isDefined","_initModule","propertyNames","getOwnPropertyNames","configurable","enumerable","memberName","elementName","staticMember","inheritedStaticMember","baseProto","methods","extendedProperties","defineElementModules","moduleInstance","_i4","isOldChrome","allowedValues","readOnly","observer","extend","validator","hasOwnProperty","defaultValueType","_localizedError","registered","elementProto","invokeMethod","method","methodName","methodContext","concat","excludeMethods","startsWith","excludeMethodName","defaultProperties","updateProperty","isValidValue","allowedValuesString","actualValueString","actualValue","validatedResult","_localizedError2","throwError","_localizedError3","propertyChangedHandler","matched","nodeType","disabled","readonly","rightToLeft","propertyUnknownType","propertyInvalidValue","propertyInvalidValueType","elementNotInDOM","moduleUndefined","Modules","customElements","registeredCallbacks","registeredLoadedCallbacks","chromeAgent","match","connectElements","sort","element1","element2","indexA","parents","indexB","callback","isLoading","BaseCustomElement","_BaseElement","created","readyState","setup","ElementRegistry","_BaseElement2","BaseCustomElementV1","_this4","_externalStylePath","link","rel","href","insertBefore","externalStyle","observedAttributes","_propertyName2","templateStyle","HTMLStyleElement","addExternalStylesheet","scopedStyle","connect","defineElement","registerElement","toRegister","toRegisterItem","register","existingCallback","lazyRegister","Elements","Version","_window$JQX$BaseEleme","ContentElement","applyContent","clearContent"],"mappings":"AAAA,cAEA,WAOI,GAAIA,GAAqB,WACrB,QAASA,KACLC,aAAaC,eAAeC,KAAMH,GAkFtC,MA/EAC,cAAaG,YAAYJ,IACrBK,IAAK,cAQLC,MAAO,SAAqBC,EAAYC,GACpC,GAAIC,GAAON,IAEXO,QAAOC,OAAOF,EAAKD,SAASD,GAAaC,MAW7CH,IAAK,WACLC,MAAO,SAAkBC,EAAYK,GACjC,GAAIH,GAAON,IAEX,IAAKM,EAAKD,UAAaC,EAAKD,SAASC,EAAKI,UAA1C,CAIA,GAAIC,GAAUL,EAAKD,SAASC,EAAKI,UAAUN,EAE3C,IAAKO,EAAL,CAIA,GAAIC,GAAiBD,CACrB,KAAK,GAAIE,KAAeJ,GAAkB,CACtC,GAAIK,GAAeL,EAAiBI,EACpCF,GAAUA,EAAQI,QAAQ,GAAIC,QAAO,KAAOH,EAAc,KAAM,KAAMC,GAO1E,MAJIR,GAAKW,wBACLX,EAAKW,uBAAuBL,EAAgBD,EAASF,GAGlDE,SAGXT,IAAK,aACLgB,IAAK,WACD,MAAO,wBAGXhB,IAAK,aACLgB,IAAK,WAoBD,OAlBIb,UACIF,OAASgB,OACTC,KAAM,SACNC,SAAS,EACTC,oBAAoB,GAExBZ,UACIP,MAAO,KACPiB,KAAM,SACNE,oBAAoB,GAExBL,wBACId,UAAOoB,GACPH,KAAM,WACNE,oBAAoB,QAO7BzB,KAQP2B,EAAc,WACd,QAASA,KACL1B,aAAaC,eAAeC,KAAMwB,GA+EtC,MA5EA1B,cAAaG,YAAYuB,IACrBtB,IAAK,MAILC,MAAO,SAAaQ,GACLX,KAENyB,QAAQ,MAAOd,MAMxBT,IAAK,OACLC,MAAO,SAAcQ,GACNX,KAENyB,QAAQ,OAAQd,MAMzBT,IAAK,QACLC,MAAO,SAAeQ,GACPX,KAENyB,QAAQ,OAAQd,MAUzBT,IAAK,UACLC,MAAO,SAAiBuB,EAAOC,GAC3B,GAAIrB,GAAON,IAEX,IAAIM,EAAKsB,UAAW,CAChB,GAAIC,GAAeF,YAAiBG,OAAQH,EAAMhB,QAAUgB,EAAMI,UAElEC,SAAQN,GAAOG,GAGnB,GAAIvB,EAAK2B,aACL,KAAMN,QAIdzB,IAAK,aACLgB,IAAK,WACD,MAAO,iBAGXhB,IAAK,aACLgB,IAAK,WAcD,OAZIe,cACI9B,OAAO,EACPiB,KAAM,UACNE,oBAAoB,GAExBM,WACIzB,OAAO,EACPiB,KAAM,UACNE,oBAAoB,QAO7BE,KAQPU,EAAgB,WAChB,QAASA,KACLpC,aAAaC,eAAeC,KAAMkC,GAigBtC,MA9fApC,cAAaG,YAAYiC,IACrBhC,IAAK,cAiBLC,MAAO,SAAqBgC,GACxB,GAAI7B,GAAON,KAEPoC,EAAQ,EACRC,KACAC,EAAY,SAAUH,GACtB,GAAIA,YAAgBI,aAChB,MAAOjC,GAAKkC,gBAAgBL,EAE5B,IAAIM,GAAgBnC,EAAKoC,cAAcP,EAAKQ,KAAM,cAAeR,EAEjE,OAAIM,IACIN,EAAKS,aAAetC,EAAKuC,aAAaC,EAAEC,UACxCN,EAActC,MAAqC,KAA7BG,EAAKuC,aAAaC,EAAEE,KAAc1C,EAAKuC,aAAaC,EAAEE,SAAOzB,GACnFjB,EAAKuC,aAAaI,UAAY,KAGzBC,YAAeT,QAN5B,IAWNN,EAEEG,KACAD,EAAIM,KAAOL,GAGXH,EAAKgB,eACLd,EAAIe,OAASjB,EAAKgB,aAAa,WAGnCd,EAAIF,KAAOA,EAEPA,EAAKkB,aACLhB,EAAIiB,YAGR,KAAK,GAAIC,GAAQpB,EAAKkB,WAAYE,EAAOA,EAAQA,EAAMC,YACnDnB,EAAIiB,SAASlB,KAAW9B,EAAKmD,YAAYF,EAG7C,OAAOlB,MAUXnC,IAAK,kBACLC,MAAO,SAAyBuD,GAK5B,IAAK,GAJDpD,GAAON,KAEP2D,MAAkBpC,GAEbqC,EAAI,EAAGA,EAAIF,EAAYG,WAAWC,OAAQF,IAAK,CACpD,GAAIG,GAAYL,EAAYG,WAAWD,GACnCI,EAAgBD,EAAUE,KAC1BC,EAAiBH,EAAU5D,KAC1B+B,GAAciC,MAAM,cAAgBH,KACrC9B,EAAciC,MAAM,cAAgBH,GAAiBI,EAAUC,KAAKC,YAAYN,GAGpF,IAAIO,GAAerC,EAAciC,MAAM,cAAgBH,EAEvD,IAAIA,EAAcQ,QAAQ,MAAQ,EAAlC,CACI,GAAIC,GAAYT,EAAcU,UAAU,EAAGV,EAAcF,OAAS,EAClExD,GAAKuC,aAAa8B,kBAAkBjB,EAAYP,aAAa,UAAY,IAAMsB,GAAaP,EAC5FR,EAAYkB,gBAAgBZ,OAHhC,CAOA,GAAIvB,GAAgBnC,EAAKoC,cAAcwB,EAAgBF,EAAeN,EACjEjB,KAIAkB,IACDA,MAGJA,EAAgBY,GAAgB9B,IAGpC,MAAOkB,MAYXzD,IAAK,gBACLC,MAAO,SAAuB0E,EAAMZ,EAAM9B,GACtC,GAAK0C,GAASA,EAAKf,OAAnB,CAWA,IATA,GAAIxD,GAAON,KAEPyC,MAAgB,GAChBqB,EAASe,EAAKf,OACdgB,EAAa,EACbC,EAAY,EACZC,EAAW,EACXC,GAAS,EAENF,EAAYjB,GAAQ,CACvBgB,EAAaD,EAAKL,QAAQ,KAAMO,EAChC,IAAIG,GAAcL,EAAKL,QAAQ,KAAMO,GACjCI,EAAa,IAUjB,IARID,GAAe,IAAMJ,EAAa,GAAKI,EAAcJ,KACrDA,EAAaI,EACbD,GAAS,EACTE,EAAa,OAGjBH,EAAWF,EAAa,GAAK,EAAID,EAAKL,QAAQW,EAAYL,EAAa,IAExD,EACX,MAGJrC,GAAgBA,KAChB,IAAI2C,GAAaP,EAAKQ,MAAMP,EAAa,EAAGE,GAAUM,OAClDtB,EAAgBoB,CAEhBH,IACA,WACI,GAAIM,GAAc,SAAqBpF,GAGnC,GAFAsC,EAActC,MAAQA,EAElBgC,EAAKW,GAAKX,EAAKW,EAAE0C,gBAAiB,CAE7BtD,EAAciC,MAAM,SAAWF,KAChC/B,EAAciC,MAAM,SAAWF,GAAQG,EAAUC,KAAKoB,OAAOxB,GAGjE,IAAIyB,GAAiBxD,EAAciC,MAAM,SAAWF,EACrC9B,GAAKW,EAAE6C,kBAAkBD,EAAgBjD,EAAcrB,QAErDqB,EAActC,OAC3BgC,EAAKW,EAAE8C,kBAAkBF,EAAgBjD,EAActC,MAAOsC,EAAcrB,OAKxF,IAAIgE,EAAWZ,QAAQ,OAAS,EAAG,CAC/B,GAAIqB,GAAaT,EAAWZ,QAAQ,MAChCC,EAAYW,EAAWV,UAAUmB,EAAa,EAElDvF,GAAKuC,aAAa,IAAMV,EAAKgB,aAAa,WAAW2C,OAAOrB,EAAW,WACnEc,EAAYpD,EAAK8B,GAEjB,IAAI8B,GAAoBtD,EAAcwB,KAAKS,UAAU,EAAGjC,EAAcwB,KAAKO,QAAQ,MACnFlE,GAAK0F,oBAAoBD,EAAmBtD,KAIpD,GAAIN,YAAgB8D,QAAOC,IAAIC,YAAa,CACnCjE,EAAciC,MAAM,SAAWF,KAChC/B,EAAciC,MAAM,SAAWF,GAAQG,EAAUC,KAAKoB,OAAOxB,GAGjE,IAAImC,GAAkBlE,EAAciC,MAAM,SAAWF,GACjDoC,EAAgBjC,EAAUC,KAAKC,YAAY8B,EAE3CjE,GAAKmE,YAAYD,KACjBlE,EAAKmE,YAAYD,GAAeE,QAAS,GAG7CjG,EAAKuC,aAAa,IAAMV,EAAKgB,aAAa,WAAW2C,OAAOM,EAAkB,WAAY,SAAUI,GAChG,GAAIC,GAASD,EAAMC,MAEnBlB,GAAYkB,EAAOtG,OACnBG,EAAK0F,oBAAoB/B,EAAMxB,SAM/CA,EAAcwB,KAAOD,EACrBe,EAAYC,EAAW,EAG3B,GAAIT,GAAe9B,EAAcwB,KAC7ByC,EAAkBpG,EAAKuC,aAAayD,YAAY/B,EAcpD,OAZA9B,GAAcwC,OAASA,EACvBxC,EAAckE,OAAQ,EACtBrG,EAAKuC,aAAac,gBAAgBY,IAAgB,EAE9CmC,GACAjE,EAAcrB,KAAOsF,EAAgBtF,KACrCqB,EAAcnB,mBAAqBoF,EAAgBpF,qBAEnDmB,EAAcrB,KAAO,SACrBqB,EAAcnB,oBAAqB,GAGhCmB,MAQXvC,IAAK,kBACLC,MAAO,WACH,GAAIG,GAAON,IAEXM,GAAKsG,eAAetG,EAAKuC,aAAagE,YAAcvG,EAAKuC,aAAcvC,EAAKuC,aAAaiE,SAAUxG,EAAKuC,iBAW5G3C,IAAK,iBACLC,MAAO,SAAwBgC,EAAM2E,EAAUC,GAC3C,GAAIzG,GAAON,IAEX,IAAK8G,EAAL,CAKA,IAAK,GADD1E,GAAQ,EACHmB,EAAQpB,EAAKkB,WAAYE,GACzBuD,EAASxD,SADuBC,EAAQA,EAAMC,YAKnDlD,EAAKsG,eAAerD,EAAOuD,EAASxD,SAASlB,KAAU2E,EAG3D,IAAKD,GAAaA,EAASnE,KAI3B,IAAK,GAAIsB,KAAQ6C,GAASnE,KAAM,CAC5B,GAAIF,GAAgBqE,EAASnE,KAAKsB,GAC9B8B,EAAoBtD,EAAcwB,IAEzB,iBAATA,GAA2BxB,EAAcwC,SAAUxC,EAAcuE,cAAoCzF,KAAxBkB,EAActC,QAI/F4G,EAAQhB,GAAqBtD,EAActC,YAWnDD,IAAK,sBACLC,MAAO,SAA6BoE,EAAc0C,GAC9C,IAAIA,EAAeD,SAAnB,CAIA,GAAI1G,GAAON,KACP+G,EAAUzG,EAAKuC,YAEnBoE,GAAeD,UAAW,EAC1BD,EAAQxC,GAAgB0C,EAAe9G,MACvC8G,EAAeD,UAAW,MAQ9B9G,IAAK,mBACLC,MAAO,SAA0BoE,GAC7B,GAAIjE,GAAON,IAGX,IADAM,EAAK4G,gBAAgB5G,EAAKuC,aAAagE,YAAcvG,EAAKuC,aAAcvC,EAAKuC,aAAaiE,SAAUxG,EAAKuC,aAAc0B,GACnHjE,EAAKuC,aAAasE,iBAAiBrD,OAAS,EAoC5C,IAAK,GAAIF,GAAI,EAAGA,EAAItD,EAAKuC,aAAasE,iBAAiBrD,OAAQF,KAnCnD,SAAeA,GACvB,GAAIzB,GAAO7B,EAAKuC,aAAasE,iBAAiBvD,GAC1CwD,EAAQjF,EAAKgB,aAAa,UA0B1B2D,EAxBc,QAASrD,GAAYqD,GACnC,GAAIA,EAAS1D,SAAWgE,EACpB,MAAON,EAGX,KAAK,GAAI1E,KAAS0E,GAASxD,SAAU,CACjC,GAAI+D,GAAQP,EAASxD,SAASlB,EAG9B,KAFgBiF,EAAMlE,aAAekE,EAAMlE,aAAa,UAAY,MAElDiE,EACd,MAAON,EAGX,IAAIO,EAAM/D,SAAU,CAChB,GAAIgE,GAAS7D,EAAY4D,EACzB,IAAIC,EACA,MAAOA,IAKnB,MAAO,OAGgBhH,EAAKuC,aAAaiE,SAEzCA,IACAxG,EAAK4G,gBAAgB/E,EAAM2E,EAAUxG,EAAKuC,aAAc0B,GAAc,IAKpEX,MAalB1D,IAAK,kBACLC,MAAO,SAAyBgC,EAAM2E,EAAUC,EAASxC,EAAcgD,GACnE,GAAIjH,GAAON,IAEX,IAAK8G,EAAL,CAIA,GAAI1E,GAAQ,CACZ,KAAKmF,EACD,IAAK,GAAIhE,GAAQpB,EAAKkB,WAAYE,GACzBuD,EAASxD,SADuBC,EAAQA,EAAMC,YAKnDlD,EAAK4G,gBAAgB3D,EAAOuD,EAASxD,SAASlB,KAAU2E,EAASxC,EAIzE,IAAKuC,GAAaA,EAASnE,KAA3B,CA+GA,IAAK,GAAIsB,KAAQ6C,GAASnE,KAAM,EA3GnB,SAAgBsB,GACzB,GAAIxB,GAAgBqE,EAASnE,KAAKsB,GAC9B8B,EAAoBtD,EAAcwB,IACtC,IAAIxB,EAAcuE,SACd,MAAO,UAGX,QAAqBzF,KAAjBgD,GAA8BA,IAAiBwB,EAC/C,MAAO,UAiBX,IAdAtD,EAActC,MAAQ4G,EAAQhB,GAEJ,cAAtBA,EACI5D,EAAK8B,GAAMlC,WAAWuD,SAAWyB,EAAQhB,GAAmBhE,WAAWuD,SACnE7C,EAAckE,MACdxE,EAAK8B,GAAQxB,EAActC,MAAM4B,WAAWuD,OACrCyB,EAAQT,YAAYP,GAAmByB,eAAiB/E,EAActC,QAC7EgC,EAAK8B,GAAQxB,EAActC,MAAM4B,WAAWuD,SAIpDnD,EAAK8B,GAAQxB,EAActC,MAG3BgC,EAAKW,GAAKX,EAAKW,EAAE0C,gBAAiB,CAC7BtD,EAAciC,MAAM,SAAWF,KAChC/B,EAAciC,MAAM,SAAWF,GAAQG,EAAUC,KAAKoB,OAAOxB,GAGjE,IAAID,GAAgB9B,EAAciC,MAAM,SAAWF,GAC/CwD,EAAWtF,EAAKW,EAAE6C,kBAAkB3B,EAAevB,EAAcrB,OACjEqB,EAAcnB,oBAAuBmG,IAAahF,EAActC,OAAUsC,EAAckE,OACxFxE,EAAKW,EAAE8C,kBAAkB5B,EAAevB,EAActC,MAAOsC,EAAcrB,MAE1EqB,EAAcnB,oBACfa,EAAKW,EAAE8C,kBAAkB5B,EAAe,KAAMvB,EAAcrB,MAIpE,IAAKqB,EAAckE,MAAO,CACtB,GAAIxE,YAAgB8D,QAAOC,IAAIC,YAAa,CACxC,GAAIc,GAAiB9E,EAAKmE,YAAYrC,EAEtCgD,GAAeS,YAAa,EAExBjF,EAAcnB,oBACda,EAAKW,EAAE8C,kBAAkBqB,EAAejD,cAAevB,EAActC,MAAOsC,EAAcrB,MAGzFqB,EAAcnB,oBACfa,EAAKW,EAAE8C,kBAAkBqB,EAAejD,cAAe,KAAMvB,EAAcrB,MAG/E6F,EAAeS,YAAa,EAGhC,GAAIjF,EAAcwC,OAAQ,CACtB,GAAIM,GAAc,SAAqBpF,GAGnC,GAFAsC,EAActC,MAAQA,EAElBgC,EAAKW,GAAKX,EAAKW,EAAE0C,gBAAiB,CAC7BtD,EAAciC,MAAM,SAAWF,KAChC/B,EAAciC,MAAM,SAAWF,GAAQG,EAAUC,KAAKoB,OAAOxB,GAGjE,IAAI0D,GAAkBzF,EAAciC,MAAM,SAAWF,GACjD2D,EAAYzF,EAAKW,EAAE6C,kBAAkBgC,EAAiBlF,EAAcrB,KAEpEqB,GAAcnB,oBAAsBsG,IAAcnF,EAActC,OAChEgC,EAAKW,EAAE8C,kBAAkB+B,EAAiBlF,EAActC,MAAOsC,EAAcrB,MAE5EqB,EAAcnB,oBACfa,EAAKW,EAAE8C,kBAAkB+B,EAAiB,KAAMlF,EAAcrB,OAK1E,IAAIqB,EAAcwB,KAAKO,QAAQ,OAAS,EAAG,CACvC,GAAIqB,GAAapD,EAAcwB,KAAKO,QAAQ,MACxCC,EAAYhC,EAAcwB,KAAKS,UAAUmB,EAAa,EAE1DvF,GAAKuC,aAAa,IAAMV,EAAKgB,aAAa,WAAW2C,OAAOrB,EAAW,WACnEc,EAAYpD,EAAK8B,IACjB3D,EAAK0F,oBAAoB/B,EAAMxB,KAIvC,GAAIN,YAAgB8D,QAAOC,IAAIC,YAAa,CACnCjE,EAAciC,MAAM,SAAWF,KAChC/B,EAAciC,MAAM,SAAWF,GAAQG,EAAUC,KAAKoB,OAAOxB,GAGjE,IAAI4D,GAAkB3F,EAAciC,MAAM,SAAWF,EAErD3D,GAAKuC,aAAa,IAAMV,EAAKgB,aAAa,WAAW2C,OAAO+B,EAAkB,WAAY,SAAUrB,GAChG,GAAIC,GAASD,EAAMC,MACnBlB,GAAYkB,EAAOtG,OACnBG,EAAK0F,oBAAoB/B,EAAMxB,OAM/CA,EAAckE,OAAQ,IAIH1C,WAM3B/D,IAAK,aACLC,MAAO,WACQH,KAENmE,YAGTjE,IAAK,aACLgB,IAAK,WACD,MAAO,oBAGRgB,KAMP4F,EAAQ,WACR,QAASA,KACLhI,aAAaC,eAAeC,KAAM8H,GA8GtC,MA3GAhI,cAAaG,YAAY6H,EAAO,OAC5B5H,IAAK,YAOLC,MAAO,SAAmBA,GACtB,MAAwB,iBAAVA,MAUlBD,IAAK,aACLC,MAAO,SAAoBA,GACvB,SAAUA,GAASA,EAAM4H,aAAe5H,EAAM6H,MAAQ7H,EAAM8H,UAUhE/H,IAAK,UACLC,MAAO,SAAiBA,GACpB,MAAO+H,OAAMC,QAAQhI,MAUzBD,IAAK,WACLC,MAAO,SAAkBA,GACrB,GAAIG,GAAON,IAEX,OAAOG,KAAwF,gBAA5D,KAAVA,EAAwB,YAAcL,aAAasI,OAAOjI,KAAwBG,EAAK+H,WAAWlI,MAAW,KAU1ID,IAAK,SACLC,MAAO,SAAgBA,GACnB,MAAOA,aAAiBmI,SAU5BpI,IAAK,WACLC,MAAO,SAAkBA,GACrB,MAAwB,gBAAVA,MAUlBD,IAAK,WACLC,MAAO,SAAkBA,GACrB,MAAwB,gBAAVA,MAUlBD,IAAK,UACLC,MAAO,SAAiBA,GACpB,GAAIG,GAAON,KAEPuI,GAAS,UAAW,SAAU,SAAU,WAAY,QAAS,OAAQ,UACrEnH,EAAOmH,EAAMC,KAAK,SAAUpH,GAC5B,GAAId,EAAK,KAAOc,GAAMjB,GAClB,MAAOiB,IAIf,OAAOA,GAAOA,EAAKqH,kBAAgBlH,OAGpCuG,KAMPzD,EAAO,WACP,QAASA,KACLvE,aAAaC,eAAeC,KAAMqE,GA0GtC,MAvGAvE,cAAaG,YAAYoE,EAAM,OAC3BnE,IAAK,cACLC,MAAO,SAAqBA,GACxB,MAAOA,GAAMY,QAAQ,YAAa,SAAU2H,GACxC,MAAOA,GAAE,GAAGC,mBAIpBzI,IAAK,SACLC,MAAO,SAAgBA,GACnB,MAAOA,GAAMyI,MAAM,aAAaC,KAAK,KAAKJ,iBAG9CvI,IAAK,aACLC,MAAO,SAAoBA,GACvB,GAAI2I,IAAcC,IAAK,QAASC,IAAK,OAAQC,IAAK,OAAQC,IAAK,SAAUC,IAAM,QAASC,IAAK,SAAUC,IAAK,SAAUC,IAAK,SAE3H,OAAOC,QAAOpJ,GAAOY,QAAQ,eAAgB,SAAUyI,GACnD,MAAOV,GAAUU,QAIzBtJ,IAAK,sBACLC,MAAO,WACH,MAAO8F,QAAOwD,KAAOxD,OAAOwD,IAAIC,UAAYzD,OAAOwD,IAAIC,SAAS,aAAc,MAGlFxJ,IAAK,SACLC,MAAO,SAAgBwJ,EAAQC,GAC3B,GAAIC,GAAQ7J,KAER8J,EAAW,SAAkBC,GAC7B,MAAOA,IAAoF,gBAA3D,KAATA,EAAuB,YAAcjK,aAAasI,OAAO2B,MAAwB7B,MAAMC,QAAQ4B,IAAkB,OAATA,GAG/HC,EAASzJ,OAAOC,UAAWmJ,EAe/B,OAdIG,GAASH,IAAWG,EAASF,IAC7BrJ,OAAO0J,KAAKL,GAAQM,QAAQ,SAAUhK,GAC9B4J,EAASF,EAAO1J,KACVA,IAAOyJ,GAGTK,EAAO9J,GAAO2J,EAAMrJ,OAAOmJ,EAAOzJ,GAAM0J,EAAO1J,IAGnDK,OAAOC,OAAOwJ,EAAQlK,aAAaqK,kBAAmBjK,EAAK0J,EAAO1J,OAKvE8J,KAGX9J,IAAK,OACLC,MAAO,SAAcgC,EAAMiI,GACvB,GAAI9J,GAAON,KAEPgK,EAAS,GACTK,EAAQlI,EAAKmI,UAEjB,IAAIF,EAAY,CACZ,GAAIG,GAAY,yEAGhB,aADApI,EAAKc,UAAYmH,EAAWrJ,QAAQwJ,EAAW,cAInD,IAAK,GAA6BhH,GAAzBK,EAAI,EAAG4G,EAAIH,EAAMvG,OAAeF,EAAI4G,IAAMjH,EAAQ8G,EAAMzG,IAAKA,IAAK,CACvE,GAAI6G,IAAgB,SAEpB,IAAIlH,YAAiBhB,cAAegB,EAAMmH,SAAWD,EAAajG,QAAQjB,EAAMmH,QAAQjC,gBAAkB,EAAG,CAMzG,IAAK,GAAWkC,GALZD,EAAUnH,EAAMmH,QAAQjC,cACxBmC,EAAQrH,EAAMM,WAEdgH,EAAa,IAAMH,EAEdI,EAAI,EAASH,EAAOC,EAAME,GAAIA,IACnCD,GAAc,IAAMF,EAAK1G,KAAO,KAAO0G,EAAKxK,MAAMY,QAAQ,cAAeqD,EAAUC,KAAK0G,YAAc,GAG1GF,IAAc,KAEM,OAAQ,OAAQ,KAAM,MAAO,UAAW,QAAS,KAAM,MAAO,QAAS,SAAU,OAAQ,OAAQ,QAAS,SAAU,QAAS,OAEhIH,KACbV,GAAUa,GAGdb,EAASA,EAASa,EAAavK,EAAK0C,KAAKO,GAAS,KAAOmH,EAAU,QAEnEV,IAAUzG,EAAMZ,KAAK5B,QAAQ,eAAgBqD,EAAUC,KAAK0G,YAGpE,MAAOf,MAGX9J,IAAK,WACLgB,IAAK,WAGD,MAFe,sDAAsD8J,KAAK/E,OAAOgF,UAAUC,UAAUzC,mBAKtGpE,KAGP8G,KAEAC,EAAgB,WAChB,QAASA,KACLtL,aAAaC,eAAeC,KAAMoL,GA4GtC,MAzGAtL,cAAaG,YAAYmL,EAAe,OACpClL,IAAK,QACLC,MAAO,SAAe4G,GAClBoE,EAAsBE,KAAKtE,GAEvBqE,EAAcE,UACdC,cAAcH,EAAcE,UAGhCF,EAAcE,SAAWE,YAAY,WACjCJ,EAAcK,WACf,QAGPvL,IAAK,iBACLC,MAAO,SAAwB4G,GAC3B,GAAIzG,GAAOyG,EAEP2E,EAAgBC,SAASC,YAAYC,iBAAiBvL,EAAM,MAC5DwL,GAAiB,EACjBC,GAAmB,cAAe,eAAgB,aAAc,gBAAiB,kBAAmB,mBAAoB,iBAAkB,oBAAqB,UAAW,aAAc,YAAa,cAAe,aAAc,cAEtO,IAAKzL,EAAK0L,WAAV,CAoBA,GARKjF,EAAQkF,UACwB,SAA7BP,EAAuB,UACK,IAAxB3E,EAAQmF,aAA8C,IAAzBnF,EAAQoF,eACrCpF,EAAQkF,UAAW,IAK3BlF,EAAQkF,SAAU,CAGlB,GAFAlF,EAAQqF,2BAEHrF,EAAQkF,SAGT,MAFAH,IAAiB,EAQzB,IAAK,GAFDO,MAEKC,EAAK,EAAGA,EAAKP,EAAgBjI,OAAQwI,IAAM,CAChD,GAAIC,GAAiBR,EAAgBO,EAEjChM,GAAK0L,WAAWO,KAAoBb,EAAca,KAClDF,EAAuBE,IAAoB9E,SAAUnH,EAAK0L,WAAWO,GAAiBpM,MAAOuL,EAAca,IAC3GF,EAAuBvI,UAG3BxD,EAAK0L,WAAWO,GAAkBb,EAAca,GAGhDF,EAAuBvI,OAAS,IAChCxD,EAAKwC,EAAE0J,UAAU,gBACbT,gBAAiBM,IAEjBI,SAAS,EACTC,YAAY,IAGZL,EAAgC,SAAKP,GACrCxL,EAAKwC,EAAE0J,UAAU,SAAUlM,GACvBmM,SAAS,EACTC,YAAY,SAtDxB,CACIpM,EAAK0L,aAEL,KAAK,GAAIpI,GAAI,EAAGA,EAAImI,EAAgBjI,OAAQF,IAAK,CAC7C,GAAI+I,GAAgBZ,EAAgBnI,EAEpCtD,GAAK0L,WAAWW,GAAiBjB,EAAciB,QAsD3DzM,IAAK,UACLC,MAAO,WACH,IAAK,GAAIyD,GAAI,EAAGA,EAAIuH,EAAsBrH,OAAQF,IAAK,CACnD,GAAItD,GAAO6K,EAAsBvH,EACjC5D,MAAK4M,eAAetM,OAI5BJ,IAAK,UACLC,MAAO,SAAiB4G,GAChBqE,EAAcE,UACdC,cAAcH,EAAcE,UAGhCH,EAAwBA,EAAsB0B,OAAO1B,EAAsB3G,QAAQuC,GAAU,GAEzFoE,EAAsBrH,OAAS,IAC/BsH,EAAcE,SAAWE,YAAY,WACjCJ,EAAcK,WACf,UAIRL,KAGP0B,GAAmB,SAAU,OAAQ,KAAM,OAAQ,MAAO,UAAW,YAAa,aAAc,WAAY,eAI5GC,EAAc,WACd,QAASA,GAAYpD,GACjB7J,aAAaC,eAAeC,KAAM+M,EAElC,IAAIzM,GAAON,IAEXM,GAAKqJ,OAASA,EACdrJ,EAAK0M,QAAU,GAAIC,GAAQtD,GAC3BrJ,EAAK4M,UAAY,GAAID,GAAQtB,UAC7BrL,EAAK6M,GAAK7M,EAAKqJ,SAAWgC,SAAW,GAAKrL,EAAKqJ,OAAOwD,IAAM7M,EAAKqJ,OAAOxG,aAAa,SAErF,IAAImE,IAAW8F,YAAcC,mBAAqBvH,OAAQxF,EAAKwF,OAAOwH,KAAKhN,GAAOiN,SAAUjN,EAAKiN,SAASD,KAAKhN,GAsC/G,OAnCAA,GAAKkN,aAAe,IAEpBlN,EAAKmN,SAAW,GAEhBnN,EAAKoN,SAAW,IAEhBpN,EAAKqN,WAAa,IAElBrN,EAAKkN,aAAe,IAEpBlN,EAAKsN,sBAAwB,UAAW,UAAW,QAAS,QAAS,UAAW,WAEhFd,EAAgB5C,QAAQ,SAAU2D,GAC9BvG,EAAOuG,GAAa,SAAUC,GAC1BxG,EAAO8F,SAASS,GAAaC,GAGjCxN,EAAKuN,GAAa,SAAUrH,GACxB,IAAKc,EAAO8F,SAAS5G,EAAMpF,MAAO,CAC9B,IAAoB,cAAfoF,EAAMpF,MAAuC,gBAAfoF,EAAMpF,MAAyC,cAAfoF,EAAMpF,OAAyBkG,EAAO8F,SAAe,KAAG,CACvH,GAAIW,GAAYzN,EAAK0N,YAAYxH,EAAO,OACxCc,GAAO8F,SAAe,KAAEW,GAG5B,OAAO,EAGX,MAAOzG,GAAO8F,SAAS5G,EAAMpF,MAAMoF,MAI3ClG,EAAKwF,SAELxF,EAAK8M,SAAW9F,EAAO8F,SAEhB9F,EA2dX,MAxdAxH,cAAaG,YAAY8M,IACrB7M,IAAK,SACLC,MAAO,SAAgB0N,GACnB,GAAIvN,GAAON,IAEX,IAAkB,WAAd6N,IACKvN,EAAKqJ,OAAOsE,eAAiB3N,EAAKqJ,SAAWgC,UAAYrL,EAAKqJ,SAAW1D,OAAQ,CAClF,GAAIiI,GAAYvC,SAASwC,cAAc,MACvCD,GAAUE,UAAY,+BACtBF,EAAUjL,UAAY,sLAEtB3C,EAAKqJ,OAAO0E,YAAYH,GACxB5N,EAAKqJ,OAAOsE,cAAgBC,CAE5B,IAAII,GAASJ,EAAU5D,WAAW,GAC9BiE,EAAcD,EAAOhE,WAAW,GAChCkE,EAASN,EAAU5D,WAAW,GAC9BmE,EAAQ,WACRF,EAAYG,MAAMC,MAAQ,WAC1BJ,EAAYG,MAAME,OAAS,WAE3BN,EAAOO,WAAa,IACpBP,EAAOQ,UAAY,IAEnBN,EAAOK,WAAa,IACpBL,EAAOM,UAAY,KAGnBC,MAAQ,GACRC,MAA0B,GAC1BC,MAAW,GACXC,MAAY,GAEZC,EAAY7O,EAAKqJ,OAAOuC,YACxBkD,EAAa9O,EAAKqJ,OAAOwC,YAE7BsC,KAEAnO,EAAKqJ,OAAO0F,cAAgB,WACnBL,IACDA,EAA0BM,sBAAsB,WAS5C,GARAN,EAA0B,EAC1BC,EAAW3O,EAAKqJ,OAAOuC,YACvBgD,EAAY5O,EAAKqJ,OAAOwC,aACxB4C,EAAQE,IAAaE,GAAaD,IAAcE,EAC5C9O,EAAKqJ,OAAO4F,iBACZR,GAAQ,GAGPA,EAAL,CAIAI,EAAYF,EACZG,EAAaF,CAEb,IAAIM,GAAc,GAAIC,aAAY,UAC9BhD,SAAS,EACTC,YAAY,GAGhBpM,GAAKoP,OAAOF,GAEZlP,EAAKqJ,OAAO4F,gBAAiB,MAIrCd,KAGJH,EAAOqB,iBAAiB,SAAUrP,EAAKqJ,OAAO0F,eAC9Cb,EAAOmB,iBAAiB,SAAUrP,EAAKqJ,OAAO0F,eAItD,IAAI/O,EAAKsP,YAAT,CASA,GALAtP,EAAKsP,aAAc,EACnBtP,EAAKuP,WAAY,EACjBvP,EAAKwP,YAAa,EAClBxP,EAAKyP,YAAa,EAEd9J,OAAO+J,aACP1P,EAAK0M,QAAQlH,OAAO,0BAA4BxF,EAAK6M,GAAI7M,EAAK2P,YAAY3C,KAAKhN,IAC/EA,EAAK0M,QAAQlH,OAAO,wBAA0BxF,EAAK6M,GAAI7M,EAAK4P,UAAU5C,KAAKhN,IAC3EA,EAAK0M,QAAQlH,OAAO,0BAA4BxF,EAAK6M,GAAI7M,EAAK6P,YAAY7C,KAAKhN,IAC/EA,EAAK0M,QAAQlH,OAAO,4BAA8BxF,EAAK6M,GAAI7M,EAAK8P,cAAc9C,KAAKhN,QAChF,CACY,gBAAkB2F,UAG7B3F,EAAK0M,QAAQlH,OAAO,wBAA0BxF,EAAK6M,GAAI7M,EAAK+P,UAAU/C,KAAKhN,IAC3EA,EAAK0M,QAAQlH,OAAO,yBAA2BxF,EAAK6M,GAAI7M,EAAKgQ,WAAWhD,KAAKhN,IAC7EA,EAAK0M,QAAQlH,OAAO,uBAAyBxF,EAAK6M,GAAI7M,EAAKiQ,SAASjD,KAAKhN,IACzEA,EAAK0M,QAAQlH,OAAO,0BAA4BxF,EAAK6M,GAAI7M,EAAKkQ,YAAYlD,KAAKhN,KAGnFA,EAAK0M,QAAQlH,OAAO,wBAA0BxF,EAAK6M,GAAI7M,EAAKmQ,UAAUnD,KAAKhN,IAC3EA,EAAK0M,QAAQlH,OAAO,sBAAwBxF,EAAK6M,GAAI7M,EAAKoQ,QAAQpD,KAAKhN,IACvEA,EAAK0M,QAAQlH,OAAO,wBAA0BxF,EAAK6M,GAAI7M,EAAKqQ,UAAUrD,KAAKhN,IAC3EA,EAAK0M,QAAQlH,OAAO,yBAA2BxF,EAAK6M,GAAI7M,EAAKsQ,WAAWtD,KAAKhN,IAGjFA,EAAK4M,UAAUpH,OAAO,sBAAwBxF,EAAK6M,GAAI7M,EAAKuQ,iBAAiBvD,KAAKhN,QAGtFJ,IAAK,WACLC,MAAO,SAAkB0N,GACrB,GAAIvN,GAAON,IAIX,IAFAM,EAAKsP,aAAc,EAEf3J,OAAO+J,aACP1P,EAAK0M,QAAQO,SAAS,0BAA4BjN,EAAK6M,IACvD7M,EAAK0M,QAAQO,SAAS,wBAA0BjN,EAAK6M,IACrD7M,EAAK0M,QAAQO,SAAS,0BAA4BjN,EAAK6M,IACvD7M,EAAK0M,QAAQO,SAAS,4BAA8BjN,EAAK6M,QACtD,CACY,gBAAkBlH,UAE7B3F,EAAK0M,QAAQO,SAAS,yBAA2BjN,EAAK6M,IACtD7M,EAAK0M,QAAQO,SAAS,wBAA0BjN,EAAK6M,IACrD7M,EAAK0M,QAAQO,SAAS,uBAAyBjN,EAAK6M,IACpD7M,EAAK0M,QAAQO,SAAS,0BAA4BjN,EAAK6M,KAG3D7M,EAAK0M,QAAQO,SAAS,wBAA0BjN,EAAK6M,IACrD7M,EAAK0M,QAAQO,SAAS,sBAAwBjN,EAAK6M,IACnD7M,EAAK0M,QAAQO,SAAS,wBAA0BjN,EAAK6M,IACrD7M,EAAK0M,QAAQO,SAAS,yBAA2BjN,EAAK6M,IAK1D,GAFA7M,EAAK4M,UAAUK,SAAS,sBAAwBjN,EAAK6M,GAAI7M,EAAKuQ,kBAE5C,WAAdhD,GAA0BvN,EAAKqJ,OAAOsE,cAAe,CACrD,GAAIC,GAAY5N,EAAKqJ,OAAOsE,cACxBK,EAASJ,EAAU5D,WAAW,GAC9BkE,EAASN,EAAU5D,WAAW,EAElCgE,GAAOwC,oBAAoB,SAAUxQ,EAAKqJ,OAAO0F,eACjDb,EAAOsC,oBAAoB,SAAUxQ,EAAKqJ,OAAO0F,eAEjD/O,EAAKqJ,OAAO0F,cAAgB,KAC5B/O,EAAKqJ,OAAOoH,YAAY7C,SACjB5N,GAAKqJ,OAAOsE,kBAI3B/N,IAAK,mBACLC,MAAO,SAA0BqG,GAC7B,GAAIlG,GAAON,IAEXM,GAAKuP,WAAY,EACjBvP,EAAKwP,YAAa,EAClBxP,EAAK0Q,WAAWxK,MAGpBtG,IAAK,cACLC,MAAO,SAAqBqG,EAAOqH,GAC/B,GAAIvN,GAAON,KACPiR,EAAUzK,EAAMyK,QAChBC,EAAiB1K,EAAM0K,eACvBC,EAAQF,GAAWA,EAAQnN,OAASmN,EAAQ,GAAKC,GAAkBA,EAAepN,OAASoN,EAAe,OAAK3P,GAC/G6P,EAAc,GAAI3B,aAAY5B,GAC9BpB,SAAS,EACTC,YAAY,GAGhB,IADA0E,EAAYC,cAAgB7K,EACxB2K,EAAO,CACP,IAAK,GAAIrG,GAAI,EAAGA,EAAIxK,EAAKsN,qBAAqB9J,OAAQgH,IAAK,CACvD,GAAI5K,GAAMI,EAAKsN,qBAAqB9C,EAEpCsG,GAAYlR,GAAOiR,EAAMjR,GAG7B,MAAOkR,GAGX,IAAK,GAAIE,KAAQ9K,GACP8K,IAAQF,KACVA,EAAYE,GAAQ9K,EAAM8K,GAIlC,OAAOF,MAGXlR,IAAK,UACLC,MAAO,SAAiBqG,GACpB,GAAIlG,GAAON,IAGX,IADAuR,aAAavR,KAAKwR,iBACbxR,KAAKyR,cAAgBzR,KAAK+P,WAAY,CACvC,GAAI2B,GAAMpR,EAAK0N,YAAYxH,EAAO,MAClClG,GAAKoR,IAAIA,OAIjBxR,IAAK,UACLC,MAAO,SAAiBqG,GACpB,GAAIlG,GAAON,IAEXM,GAAKyP,YAAa,EAClBzP,EAAKmR,cAAe,EACpBnR,EAAKkR,eAAiBG,WAAW,WAC7B,GAAIrR,EAAKyP,WAAY,CACjBzP,EAAKmR,cAAe,CACpB,IAAIG,GAAUtR,EAAK0N,YAAYxH,EAAO,UACtClG,GAAKsR,QAAQA,KAElBtR,EAAKkN,iBAGZtN,IAAK,cACLC,MAAO,SAAqBqG,GAGxB,MAFWxG,MAEC6R,WAAWrL,MAG3BtG,IAAK,YACLC,MAAO,SAAmBqG,GACtB,GAAIlG,GAAON,IAEX,MAAIM,EAAKuP,WAAavP,EAAKwR,gBAAkB,GAAIxJ,MAAShI,EAAKwR,eAAiB,KAIhF,MAAOxR,GAAKuR,WAAWrL,MAG3BtG,IAAK,aACLC,MAAO,SAAoBqG,GACvB,GAAIlG,GAAON,IAKX,OAHAM,GAAKwR,eAAiB,GAAIxJ,MAC1BhI,EAAKyR,cAAe,EAEbzR,EAAKuR,WAAWrL,MAG3BtG,IAAK,UACLC,MAAO,SAAiBqG,GACpB,GAAIlG,GAAON,IAEX,MAAIM,EAAKwP,YAAcxP,EAAK0R,cAAgB,GAAI1J,MAAShI,EAAK0R,aAAe,KAI7E,MAAO1R,GAAK2R,SAASzL,MAGzBtG,IAAK,aACLC,MAAO,SAAoBqG,GACvB,GAAIlG,GAAON,IAEXM,GAAKwP,YAAa,EAClBxP,EAAKuP,WAAY,CAEjB,IAAIqC,GAAO5R,EAAK0N,YAAYxH,EAAO,OAUnC,QARIlG,EAAK8M,SAAc,KAAK9M,EAAK8M,SAAkB,UAC/C9M,EAAK6R,QAAQD,IAGb5R,EAAK8M,SAAoB,WAAK9M,EAAK8M,SAAqB,YAAK9M,EAAK8M,SAAmB,UAAK9M,EAAK8M,SAAsB,cACrH9M,EAAK8R,UAAUF,GAGZ5R,EAAK4R,KAAKA,MAGrBhS,IAAK,WACLC,MAAO,SAAkBqG,GACrB,GAAIlG,GAAON,IAEXM,GAAKwP,YAAa,EAClBxP,EAAKuP,WAAY,CAEjB,IAAIwC,GAAK/R,EAAK0N,YAAYxH,EAAO,MAC7Bc,EAAShH,EAAK+R,GAAGA,EAQrB,QANI/R,EAAK8M,SAAc,KAAK9M,EAAK8M,SAAkB,UAC/C9M,EAAKgS,QAAQD,GAGjB/R,EAAK0Q,WAAWqB,GAET/K,KAGXpH,IAAK,aACLC,MAAO,SAAoBqG,GACvB,GAAIlG,GAAON,KAEPuS,EAAcjS,EAAKkS,KAAKhM,EAQ5B,OANIlG,GAAKuP,YACLvP,EAAKmS,0BAA4BC,KAAKC,IAAIrS,EAAKmS,0BAA2BC,KAAKE,IAAItS,EAAKuS,QAAUrM,EAAMsM,QACxGxS,EAAKyS,4BAA8BL,KAAKC,IAAIrS,EAAKyS,4BAA6BL,KAAKE,IAAItS,EAAK0S,QAAUxM,EAAMyM,QAC5GV,EAAcjS,EAAK4S,kBAAkB1M,IAGlC+L,KAGXrS,IAAK,WACLC,MAAO,SAAkBqG,GACrB,GAAIlG,GAAON,IAGX,OADAM,GAAK0R,aAAe,GAAI1J,MACjBhI,EAAK2R,SAASzL,MAGzBtG,IAAK,YACLC,MAAO,SAAmBqG,GAGtB,MAFWxG,MAECiS,SAASzL,MAGzBtG,IAAK,gBACLC,MAAO,SAAuBqG,GACfxG,KAENkQ,UAAU1J,MAGnBtG,IAAK,cACLC,MAAO,SAAqBqG,GACbxG,KAENuQ,SAAS/J,MAGlBtG,IAAK,aACLC,MAAO,WACQH,KAEN+P,YAAa,KAGtB7P,IAAK,YACLC,MAAO,SAAmBqG,GACtB,GAAIlG,GAAON,IAEX,KAAIM,EAAKyR,aAIT,MAAOzR,GAAK6S,WAAW3M,MAG3BtG,IAAK,cACLC,MAAO,SAAqBqG,GAGxB,MAFWxG,MAECmT,WAAW3M,MAG3BtG,IAAK,YACLC,MAAO,SAAmBqG,GAMtB,IAAK,GALDlG,GAAON,KACPiR,EAAUzK,EAAMyK,QAChBC,EAAiB1K,EAAM0K,eACvBC,EAAQF,GAAWA,EAAQnN,OAASmN,EAAQ,GAAKC,GAAkBA,EAAepN,OAASoN,EAAe,OAAK3P,GAE1GuJ,EAAI,EAAGA,EAAIxK,EAAKsN,qBAAqB9J,OAAQgH,IAAK,CACvD,GAAI5K,GAAMI,EAAKsN,qBAAqB9C,OAEjBvJ,KAAfiF,EAAMtG,KACNsG,EAAMtG,GAAOiR,EAAMjR,IAM3B,MAFAI,GAAKyR,cAAe,EAEbzR,EAAK6S,WAAW3M,MAG3BtG,IAAK,oBACLC,MAAO,SAA2BqG,GAC9B,GAAIlG,GAAON,KAEPuS,GAAc,CAMlB,QAJIjS,EAAK8M,SAAmB,UAAK9M,EAAK8M,SAAsB,eACxDmF,EAAcvS,KAAKoT,0BAA0B5M,KAG7B,IAAhB+L,EACOA,IAGPjS,EAAK8M,SAAoB,WAAK9M,EAAK8M,SAAqB,cACxDmF,EAAcvS,KAAKqT,4BAA4B7M,IAG5C+L,MAGXrS,IAAK,4BACLC,MAAO,SAAmCqG,GACtC,GAAI8M,OAAU,GACVC,MAAO,EAIX,OAHAD,GAAU9M,EAAMsM,MAChBS,EAAOD,EAAUtT,KAAK6S,QAEf7S,KAAKwT,OAAOhN,EAAO+M,EAAM,eAGpCrT,IAAK,8BACLC,MAAO,SAAqCqG,GACxC,GAAI8M,OAAU,GACVC,MAAO,EAIX,OAHAD,GAAU9M,EAAMyM,MAChBM,EAAOD,EAAUtT,KAAKgT,QAEfhT,KAAKwT,OAAOhN,EAAO+M,EAAM,iBAGpCrT,IAAK,SACLC,MAAO,SAAgBqG,EAAO+M,EAAME,GAChC,GAAInT,GAAON,IAGX,IADAyT,EAAYA,GAAa,EACrBf,KAAKE,IAAIW,IAASjT,EAAKmN,WAAanN,EAAKoT,cAAgBpT,EAAKqT,aAAc,CAC5E,GAAI9F,GAAY0F,EAAO,EAAI,YAAc,YAQzC,IAPkB,eAAdE,EACAnT,EAAKoT,YAAcpT,EAAK0N,YAAYxH,EAAOqH,IAE3CA,EAAY0F,EAAO,EAAI,WAAa,cACpCjT,EAAKoT,YAAcpT,EAAK0N,YAAYxH,EAAO+M,EAAO,EAAI,WAAa,gBAGnEjT,EAAKuN,KACLvN,EAAKuN,GAAW7N,KAAK0T,aACjBhB,KAAKE,IAAIW,IAASvT,KAAK0N,UAEvB,MADAlH,GAAMoN,4BACC,EAKnB,OAAO,KAGX1T,IAAK,aACLC,MAAO,WACQH,KAEN0T,YAAc,KACnBnC,aAAavR,KAAK6T,kBAGtB3T,IAAK,YACLC,MAAO,SAAmBqG,GACtB,GAAIlG,GAAON,IAEXM,GAAKmS,0BAA4B,EACjCnS,EAAKyS,4BAA8B,EACnCzS,EAAK0S,QAAUxM,EAAMyM,MACrB3S,EAAKuS,QAAUrM,EAAMsM,MACrBxS,EAAKqT,cAAe,EACpBrT,EAAKoT,YAAc,KACnBpT,EAAKuT,cAAgBlC,WAAW,WAC5BrR,EAAKqT,cAAe,GACrBrT,EAAKqN,gBAGTZ,KAGP+G,EAAS,WAyGT,QAASA,GAAO5F,EAAW6F,EAAqBC,GA8D5C,QAASC,KACL,GAAIC,GAASC,CACTC,GAAkBC,YAClBH,EAAU5L,KAAKgM,MAAQC,EACvBJ,GAASC,EAAkBC,UAAY3B,KAAK8B,KAAKN,EAAUO,GACvDN,EAAQ,GAAKA,GAAS,GACtBO,EAAON,EAAkBO,YAAcR,GACvCS,qBAAqBC,GACrBA,EAAQ,EACRA,EAAQvF,sBAAsB2E,IAE9BS,EAAON,EAAkBO,cAxErC7U,aAAaC,eAAeC,KAAM8T,EAElC,IAAIxT,GAAON,KACP8U,EAAWzQ,EAAKyQ,QAEpBxU,GAAKyU,YAAc,GAAIhI,GAAYmB,GACnC5N,EAAKyT,oBAAsBA,EAC3BzT,EAAK0T,kBAAoBA,CAEzB,IAAIgB,OAAc,GACdH,MAAQ,GACRI,MAAkB,GAClBV,MAAY,GACZW,MAAS,GACTZ,MAAM,GACNJ,MAAU,GACVO,EAAe,IACfL,MAAoB,GAEpBe,EAAmB,SAA0BC,GAC7C,OACIf,UAAW,EACXF,MAAO,EACPkB,aAAc,EACdC,IAAK,EACL3C,IAAKyC,EAAUzC,IACf4C,cAAe,EACfC,gBAAiB,EACjBb,YAAa,EACbS,UAAWA,EACXjV,MAAO,EACPsV,SAAU,IAIdC,EAAcP,EAAiBpB,GAC/B4B,EAAcR,EAAiBnB,GAE/B4B,EAAQ,WACRtB,EAAMhM,KAAKgM,MACXJ,EAAUI,EAAMC,EAChBA,EAAYD,CAEZ,IAAIuB,GAAmB,SAA0BC,GAC7CA,EAAW3B,MAAQ2B,EAAW3V,MAAQ2V,EAAWP,cACjDO,EAAWP,cAAgBO,EAAW3V,KACtC,IAAIsV,GAAW,IAAOK,EAAW3B,OAAS,EAAID,EAC9C4B,GAAWL,SAAW,GAAMA,EAAW,GAAMK,EAAWL,SAG5DI,GAAiBF,GACjBE,EAAiBH,IAGjBhB,EAAS,SAAgBvU,GAIzB,MAHAiU,GAAkBjU,MAAQA,EAAQiU,EAAkBzB,IAAMyB,EAAkBzB,IAAMxS,EAAQiU,EAAkBkB,IAAMlB,EAAkBkB,IAAMnV,EAC1IiU,EAAkBgB,UAAUjV,MAAQiU,EAAkBjU,MAE/CA,EAAQiU,EAAkBzB,IAAM,MAAQxS,EAAQiU,EAAkBkB,IAAM,MAAQ,QAmB3FhV,GAAKyU,YAAkB,KAAE,SAAUvO,GAC/B,GAAKsO,EAAL,CAIAG,GAAkB,EAClBD,GAAc,CAEd,IAAIa,GAAmB,SAA0BC,EAAYN,GACzDM,EAAWzB,UAAY,EACvByB,EAAWN,gBAAkBA,EAC7BM,EAAWP,cAAgBO,EAAW3V,MACtC2V,EAAW3V,MAAQ2V,EAAWV,UAAUjV,MACxC2V,EAAWT,aAAeS,EAAW3V,MACrC2V,EAAWnD,IAAMmD,EAAWV,UAAUzC,IAG1CkD,GAAiBF,EAAanP,EAAMuP,SACpCF,EAAiBH,EAAalP,EAAMwP,SAEpCzB,EAAYjM,KAAKgM,MACjB/I,cAAc2J,GACdA,EAAS1J,YAAYoK,EAAOnB,MAGhCnU,EAAKyU,YAAgB,GAAE,WACnB,IAAKE,EACD,OAAO,CAGX1J,eAAc2J,EAEd,IAAIe,GAAc,SAAqBH,GACnC1B,EAAoB0B,EACpBA,EAAWzB,UAAY,GAAMyB,EAAWL,SACxCK,EAAWnB,YAAcjC,KAAKwD,MAAMJ,EAAW3V,MAAQ2V,EAAWzB,WAClEE,EAAYjM,KAAKgM,MACjBM,qBAAqBC,GACrBA,EAAQvF,sBAAsB2E,GAC9B6B,EAAWL,SAAW,EAGtBE,GAAYF,SAAW,IAAME,EAAYF,UAAY,GACrDQ,EAAYN,IACLD,EAAYD,SAAW,IAAMC,EAAYD,UAAY,KAC5DQ,EAAYP,GAGhBT,GAAkB,IAGtB3U,EAAKyU,YAAkB,KAAE,SAAUvO,GAC/B,IAAKyO,EACD,OAAO,CAWX,IARID,IACAxO,EAAM6K,cAAc8E,iBACpB3P,EAAM6K,cAAc+E,mBAGxBV,EAAYW,QAAUtC,EAAoB5H,aAAe,EACzDwJ,EAAYU,QAAUrC,EAAkB9H,YAAc,EAEjD+I,IAAoBS,EAAYW,SAAYV,EAAYU,SAA7D,CAIAV,EAAYW,OAASX,EAAYhD,IAAMgD,EAAYP,UAAUjJ,aAC7DwJ,EAAYxB,OAAS3N,EAAMuP,QAAUJ,EAAYH,iBAAmBG,EAAYW,MAEhFZ,EAAYY,OAASZ,EAAY/C,IAAM+C,EAAYN,UAAUlJ,YAC7DwJ,EAAYvB,OAAS3N,EAAMwP,QAAUN,EAAYF,iBAAmBE,EAAYY,KAEhF,IAAIC,GAAU,QAEVC,EAAS,SAAgBV,EAAYN,EAAiBhP,GACtD,MAAIsP,GAAW3B,MAAQ,GAAK2B,EAAW3B,OAAS,GAC5CC,EAAoB0B,EAIJ,SAFhBS,EAAUT,EAAWT,aAAeS,EAAW3B,MAAQC,EAAkBzB,IAAM,MAAQmD,EAAWT,aAAeS,EAAW3B,MAAQC,EAAkBkB,IAAM,MAAQ,UAE/G,IAA5BQ,EAAWT,eAIpB,QAAZkB,GAAqBT,EAAWT,eAAiBS,EAAWnD,OAI3DmD,EAAWO,UAIhB3B,EAAOoB,EAAWT,aAAeS,EAAW3B,OAC5CyB,IAEApP,EAAM6K,cAAc8E,iBACpB3P,EAAM6K,cAAc+E,kBACpBpB,GAAc,GAEP,MAGJ,MAGPyB,EAAqBD,EAAOb,EAAanP,EAAMuP,QAASvP,EAC5D,IAA2B,OAAvBiQ,EAMA,MAAOA,EALP,IAAIC,GAAuBF,EAAOd,EAAalP,EAAMwP,QAASxP,EAC9D,OAA6B,QAAzBkQ,EACOA,MADX,MAQRpW,EAAKyU,YAAYjP,SAerB,MA3TAhG,cAAaG,YAAY6T,IACrB5T,IAAK,cACLgB,IAAK,WACD,GAAIZ,GAAON,IAEX,OAAIM,GAAKyT,oBACEzT,EAAKyT,oBAAoBpB,KAG5B,GAEZgE,IAAK,SAAaxW,GACd,GAAIG,GAAON,IAEPG,GAAQ,IACRA,EAAQ,GAGRG,EAAKyT,sBACLzT,EAAKyT,oBAAoBpB,IAAMxS,MAIvCD,IAAK,eACLgB,IAAK,WACD,GAAIZ,GAAON,IAEX,OAAIM,GAAK0T,kBACE1T,EAAK0T,kBAAkBrB,KAG1B,GAEZgE,IAAK,SAAaxW,GACd,GAAIG,GAAON,IAEPG,GAAQ,IACRA,EAAQ,GAGRG,EAAK0T,oBACL1T,EAAK0T,kBAAkBrB,IAAMxS,MAIrCD,IAAK,aACLgB,IAAK,WACD,GAAIZ,GAAON,IAEX,OAAIM,GAAKyT,oBACEzT,EAAKyT,oBAAoB5T,OAG5B,GAEZwW,IAAK,SAAaxW,GACd,GAAIG,GAAON,IAEPG,GAAQ,IACRA,EAAQ,GAGRG,EAAKyT,sBACLzT,EAAKyT,oBAAoB5T,MAAQA,MAIzCD,IAAK,YACLgB,IAAK,WACD,GAAIZ,GAAON,IAEX,OAAIM,GAAK0T,kBACE1T,EAAK0T,kBAAkB7T,OAG1B,GAEZwW,IAAK,SAAaxW,GACd,GAAIG,GAAON,IAEPG,GAAQ,IACRA,EAAQ,GAGRG,EAAK0T,oBACL1T,EAAK0T,kBAAkB7T,MAAQA,MAIvCD,IAAK,aACLgB,IAAK,WAGD,MAFWlB,MAECgU,qBAGhB9T,IAAK,aACLgB,IAAK,WAGD,MAFWlB,MAEC+T,wBA2MpBjU,aAAaG,YAAY6T,IACrB5T,IAAK,WACLC,MAAO,WACH,GAAIG,GAAON,IAEPM,GAAKyU,aACLzU,EAAKyU,YAAYxH,iBAGdjN,GAAKyU,gBAGbjB,KAMP7G,EAAU,WACV,QAAS2J,GAAO7P,GACZjH,aAAaC,eAAeC,KAAM4W,GAElC5W,KAAK6W,UACL7W,KAAKoN,YACLpN,KAAK+G,QAAUA,EA6cnB,MApcAjH,cAAaG,YAAY2W,IACrB1W,IAAK,WACLC,MAAO,SAAkBiO,GACrB,GAAI9N,GAAON,IAEX,OAAIM,GAAKyG,QAAQqH,UAAU5J,QAChBlE,EAAKyG,QAAQqH,UAAU5J,QAAQ4J,IAAc,KAG9C5J,QAAQwD,KAAK1H,EAAKyG,QAAQ+P,UAAW1I,IAAc,KASjElO,IAAK,WACLC,MAAO,SAAkBiO,GACrB,GAAI2I,GAEAzW,EAAON,IAEPM,GAAK0W,SAAS5I,MAIjB2I,EAAwBzW,EAAKyG,QAAQ+P,WAAWG,IAAIhP,MAAM8O,EAAuBjX,aAAaoX,kBAAkB9I,EAAUxF,MAAM,OAE5HtI,EAAKkF,iBACN4F,EAAcwB,eAAetM,EAAKyG,aAU1C7G,IAAK,cACLC,MAAO,SAAqBiO,GACxB,GAAI+I,GAEA7W,EAAON,IAENM,GAAK0W,SAAS5I,MAIlB+I,EAAyB7W,EAAKyG,QAAQ+P,WAAWM,OAAOnP,MAAMkP,EAAwBrX,aAAaoX,kBAAkB9I,EAAUxF,MAAM,OACvG,KAA3BtI,EAAKyG,QAAQqH,WACb9N,EAAKyG,QAAQnC,gBAAgB,SAE5BtE,EAAKkF,iBACN4F,EAAcwB,eAAetM,EAAKyG,aAO1C7G,IAAK,WAOLC,MAAO,SAAkBqG,GAIrB,IAAK,GAHDlG,GAAON,KACPqX,EAAgB/W,EAAKuW,OAAOrQ,EAAMpF,MAE7BwC,EAAI,EAAGA,EAAIyT,EAAcvT,OAAQF,IAAK,CAC3C,GAAI0T,GAAeD,EAAczT,EAIjC,IAHA4C,EAAM+Q,UAAYD,EAAaC,UAC/B/Q,EAAMgR,QAAUF,EAAaE,QAEzBhR,EAAMiR,iBACN,KAGJ,IAAInQ,GAASgQ,EAAaxJ,QAAQ7F,MAAM3H,EAAKyG,SAAUP,GAEvD,QAAejF,KAAX+F,IACAd,EAAMc,OAASA,GAEA,IAAXA,GAAkB,CAClBd,EAAM2P,iBACN3P,EAAM4P,iBACN,QAKZ,MAAO5P,GAAMc,UAWjBpH,IAAK,YACLC,MAAO,SAAmB0N,EAAWpH,EAAQiR,GACzC,GAAIpX,GAAON,IAEN0X,KACDA,GACIjL,SAAS,EACTC,YAAY,IAGpBgL,EAAQjR,OAASA,KAEjB,IAAI2K,GAAc,GAAI3B,aAAY5B,EAAW6J,EAS7C,OARAtG,GAAYuG,wBAA0BvG,EAAYgF,gBAClDhF,EAAYgF,gBAAkB,WAE1B,MADAhF,GAAYwG,sBAAuB,EAC5BxG,EAAYuG,2BAGvBrX,EAAKuX,cAAczG,GAEZA,KASXlR,IAAK,gBACLC,MAAO,SAAuBiR,GAC1B,GAAI9Q,GAAON,KACP6N,EAAYuD,EAAYhQ,KACxBoW,EAAUlX,EAAKyG,QAAQyQ,OAE3BlX,GAAKyG,QAAQyQ,QAAU7L,SAEnBrL,EAAKyG,QAAQ,KAAO8G,GACpBvN,EAAKyG,QAAQ,KAAO8G,GAAWuD,GAE/B9Q,EAAKyG,QAAQ8Q,cAAczG,GAG/B9Q,EAAKyG,QAAQyQ,QAAUA,KAU3BtX,IAAK,SACLC,MAAO,SAAgBoI,EAAOuF,GAC1B,GAAIxN,GAAON,KACP8X,EAAavP,EAAMK,MAAM,KACzB2O,EAAYO,EAAWzS,MAAM,GAAGwD,KAAK,KACrCgF,EAAYiK,EAAW,EAEtBxX,GAAKuW,OAAOhJ,KACbvN,EAAKuW,OAAOhJ,MAGhB,IAAIyJ,IACAlW,KAAMyM,EACNC,QAASA,EACT0J,QAASlX,EAAKyG,QACdwQ,UAAWA,EAGXzK,GAAgBtI,QAAQqJ,IAAc,IACjCvN,EAAKyU,cACNzU,EAAKyU,YAAc,GAAIhI,GAAYzM,EAAKyG,UAG5CzG,EAAKyU,YAAYlH,GAAW,SAAUrH,GAClClG,EAAKuX,cAAcrR,KAGvBlG,EAAKyU,YAAY1H,gBAAgBhC,KAAKwC,GACtCvN,EAAKyU,YAAYjP,OAAO+H,IAGU,IAAlCvN,EAAKuW,OAAOhJ,GAAW/J,SACvBxD,EAAK8M,SAASS,GAAavN,EAAKyX,SAASzK,KAAKhN,GAC9CA,EAAKyG,QAAQ4I,iBAAiB9B,EAAWvN,EAAK8M,SAASS,IAAY,IAGvEvN,EAAKuW,OAAOhJ,GAAWxC,KAAKiM,MAShCpX,IAAK,WACLC,MAAO,SAAkBoI,GACrB,GAAIjI,GAAON,KACP8X,EAAavP,EAAMK,MAAM,KACzB2O,EAAYO,EAAWzS,MAAM,GAAGwD,KAAK,KACrCgF,EAAYiK,EAAW,GAEvBT,EAAgB/W,EAAKuW,OAAOhJ,EAShC,IAPIvN,EAAKyU,aAAezU,EAAKyU,YAAY1H,gBAAgB7I,QAAQqJ,IAAc,IAC3EvN,EAAKyU,YAAY1H,gBAAgBR,OAAOvM,EAAKyU,YAAY1H,gBAAgB7I,QAAQqJ,GAAY,GAC7C,IAA5CvN,EAAKyU,YAAY1H,gBAAgBvJ,QACjCxD,EAAKyU,YAAYxH,SAASM,IAI7BwJ,EAAL,CAIA,IAAK,GAAIzT,GAAI,EAAGA,EAAIyT,EAAcvT,OAAQF,IAAK,CAC3C,GAAkB,KAAd2T,EAAkB,CAClB,GAAInV,GAAQiV,EAAcW,UAAU,SAAUC,GAC1C,MAAOA,GAAEV,YAAcA,GAE3BF,GAAcxK,OAAOzK,EAAO,EAC5B,OAEAiV,KAGqB,IAAzBA,EAAcvT,SACdxD,EAAKyG,QAAQ+J,oBAAoBjD,EAAWvN,EAAK8M,SAASS,IAC1DvN,EAAKuW,OAAOhJ,YACLvN,GAAK8M,SAASS,QAY7B3N,IAAK,oBACLC,MAAO,SAA2B6D,EAAe5C,GAC7C,GAAId,GAAON,KACPkY,EAAkB5X,EAAKyG,QAAQ5D,aAAaa,EAEhD,IAAI1D,EAAKkF,gBACL,MAAOlF,GAAK6X,YAAYD,EAAiB9W,EAG7C,IAAI6F,GAAiB3G,EAAKyG,QAAQqR,wBAAwBpU,EAG1D,YAFgDzC,KAA/B0F,EAAekR,YAA4B7X,EAAK6X,YAAYD,EAAiB9W,EAAM6F,EAAeoR,UAAY/X,EAAKyG,QAAQE,EAAekR,aAAaD,MAa5KhY,IAAK,oBACLC,MAAO,SAA2B6D,EAAe7D,EAAOiB,GACpD,GAAId,GAAON,KACPsY,MAAoB,GACpBD,GAAW,CAEf,IAAK/X,EAAKkF,iBAYN,GADA8S,EAAoBhY,EAAKiY,UAAUpY,EAAOiB,GAC7B,YAATA,EAAoB,CACpB,GAAIoX,IAAY,UAAW,WAAY,QAAS,YAAa,WAAY,WAAY,QAAS,WAAY,SAAU,QAAS,OAAQ,WAAY,OAAQ,WAAY,WAAY,SACjL,IAAIA,EAAShU,QAAQR,IAAkB,EAMnC,YALK7D,EAGDG,EAAKyG,QAAQ0R,aAAazU,EAAe,IAFzC1D,EAAKyG,QAAQnC,gBAAgBZ,SAhBlB,CACvB,GAAIiD,GAAiB3G,EAAKyG,QAAQqR,wBAAwBpU,EAE1DqU,GAAWpR,EAAeoR,SAGtBC,EADArR,EAAesR,UACKjY,EAAKyG,QAAQE,EAAesR,WAAWpY,GAEvCG,EAAKiY,UAAUpY,EAAOiB,EAAMiX,GAiBxD,KAAa,UAATjX,GAA6B,WAATA,GACM,OAAtBkX,GAAoD,OAAtBA,GAE9B,WADAhY,GAAKyG,QAAQnC,gBAAgBZ,OAKXzC,KAAtB+W,EACAhY,EAAKyG,QAAQnC,gBAAgBZ,GAE7B1D,EAAKyG,QAAQ0R,aAAazU,EAAesU,MAWjDpY,IAAK,YACLC,MAAO,SAAmBA,EAAOiB,EAAMiX,GAKnC,OAJa9W,KAATH,IACAA,EAAOgD,EAAU0D,MAAM4Q,QAAQvY,QAGrBoB,KAAVpB,IAAwBkY,GAAsB,OAAVlY,GAAxC,CAIA,GAAIkY,GAAsB,OAAVlY,EACZ,MAAO,MAGX,IAAa,WAATiB,EACA,MAAOgD,GAAUC,KAAK0G,WAAW5K,EAGrC,IAAa,YAATiB,GAA+B,SAATA,EAAiB,CACvC,IAAc,IAAVjB,GAA4B,SAAVA,GAA8B,IAAVA,GAAyB,MAAVA,EACrD,MAAO,EACJ,KAAc,IAAVA,GAA6B,UAAVA,GAA+B,IAAVA,GAAyB,MAAVA,EAC9D,OAIR,GAAa,UAATiB,EACA,MAAOuX,MAAKC,UAAUzY,EAI1B,QADa,SAAU,SAAU,MAAO,UAAW,QAAS,OAAQ,MAAO,YACjEqE,QAAQpD,IAAS,EAChBjB,EAAM4B,WAGJ,WAATX,EACOuX,KAAKC,UAAUzY,OAD1B,OAeJD,IAAK,cACLC,MAAO,SAAqB0Y,EAAazX,EAAMiX,GAC3C,GAAIS,GAA4B,SAAhBD,CAEhB,QAAoBtX,KAAhBsX,KAA6BC,GAAcT,GAA/C,CAIA,GAAIS,GAAaT,EACb,MAAO,KAGX,IAAa,YAATjX,GAA+B,SAATA,EACtB,MAAoB,QAAhByX,CAMD,IAAa,WAATzX,GAA8B,UAATA,EAC5B,MAAoB,QAAhByX,EACOE,IAGS,aAAhBF,EACOG,EAAAA,EAGJC,WAAWJ,EACf,IAAa,QAATzX,GAA2B,YAATA,EACzB,MAAoB,QAAhByX,EACOE,IAGS,aAAhBF,EACOG,EAAAA,EAGJE,SAASL,EACb,IAAa,WAATzX,GAA8B,QAATA,EAC5B,MAAOyX,EACJ,IAAa,SAATzX,EACP,MAAO,IAAIkH,MAAKuQ,EACb,IAAa,aAATzX,GACP,GAAmC,kBAAxB6E,QAAO4S,GACd,MAAO5S,QAAO4S,OAEf,IAAa,UAATzX,GAA6B,WAATA,EAC3B,IACI,GAAI+X,GAAaR,KAAKS,MAAMP,EAE5B,IAAIM,EACA,MAAOA,GAEb,MAAOE,GACL,GAAIpT,OAAO4S,IAA6D,WAA7C/Y,aAAasI,OAAOnC,OAAO4S,IAClD,MAAO5S,QAAO4S,QAQ9B3Y,IAAK,kBACLgB,IAAK,WAGD,MAFWlB,MAEF+G,kBAAmBd,QAAOC,IAAIC,aAAgB,MAOxDyQ,KAMPxS,EAAY,WACZ,QAASA,KACLtE,aAAaC,eAAeC,KAAMoE,GA2CtC,MAxCAtE,cAAaG,YAAYmE,EAAW,OAChClE,IAAK,SAOLC,MAAO,SAAgB4G,GACnB,MAAO,IAAIkG,GAAQlG,MAGvB7G,IAAK,SACLC,MAAO,SAAgBmZ,EAAYC,GAC/BnV,EAAUkV,GAAcC,KAG5BrZ,IAAK,QAILgB,IAAK,WACD,MAAO4G,MAGX5H,IAAK,OACLgB,IAAK,WACD,MAAOmD,MAGXnE,IAAK,SACLgB,IAAK,WACD,MAAO4S,MAGX5T,IAAK,cACLgB,IAAK,WACD,MAAO6L,OAGR3I,KAGP8I,EAAY9I,EAAUwS,OAAOjL,SAEjCzJ,GAAciC,QAKd,IAAIgC,GAAc,SAAUqT,GAGxB,QAASrT,KAEL,MADArG,cAAaC,eAAeC,KAAMmG,GAC3BrG,aAAa2Z,0BAA0BzZ,MAAOmG,EAAYuT,WAAanZ,OAAOoZ,eAAexT,IAAc8B,MAAMjI,KAAM4Z,YAqnClI,MAznCA9Z,cAAa+Z,SAAS1T,EAAaqT,GAOnC1Z,aAAaG,YAAYkG,IACrBjG,IAAK,WAQLC,MAAO,WACH,MAAO,iBAMXD,IAAK,aACLC,MAAO,WACH,GAAIG,GAAON,IAEPM,GAAKwZ,cACLxZ,EAAKwZ,kBAOb5Z,IAAK,UACLC,MAAO,WACH,GAAIG,GAAON,IAEXM,GAAKyZ,SAAU,EACfzZ,EAAK0Z,aAAa1Z,GAClBA,EAAK2Z,gBAAgB,WAEjB3Z,EAAK4Z,WACL5Z,EAAK4Z,eAObha,IAAK,QACLC,MAAO,WACH,GAAIG,GAAON,IAEPM,GAAK6Z,SACL7Z,EAAK6Z,aAIbja,IAAK,QACLC,MAAO,WACH,GAAIG,GAAON,IAIX,IAFAM,EAAKkX,QAAUxX,MAEXM,EAAKyZ,SAAYzZ,EAAK8Z,YAA1B,CAIA,GAAI9Z,EAAKyZ,QAML,MALAzZ,GAAK2Z,gBAAgB,YACrB3Z,EAAK+Z,YAAa,EAClB/Z,EAAKga,WACLha,EAAKia,iBAAiB,eACtBja,EAAKkX,QAAU7L,SAIfrL,GAAKuC,cAAgBvC,EAAKuC,aAAasE,iBAAiB3C,QAAQlE,IAAS,GACzEA,EAAKuC,aAAasE,iBAAiB0F,OAAOvM,EAAKuC,aAAasE,iBAAiB3C,QAAQlE,GAAO,GAGhGA,EAAKyZ,SAAU,CAIf,KAAK,GAAInW,GAAI,EAAGA,EAAItD,EAAKuD,WAAWC,OAAQF,GAAK,EAAG,CAChD,GAAI4W,GAAWla,EAAK8X,wBAAwB9X,EAAKuD,WAAWD,GAAGK,KAE/D,IAAKuW,EAAL,CAIA,GAAItW,GAAiB5D,EAAKwC,EAAE6C,kBAAkB6U,EAASxW,cAAewW,EAASpZ,MAC3EqZ,EAAuBvW,EAAiBA,EAAenC,WAAa,EAExE,MAAI0Y,EAAqBjW,QAAQ,OAAS,GAAKiW,EAAqBjW,QAAQ,OAAS,GAI/D,WAAlBgW,EAASpZ,MAAuC,UAAlBoZ,EAASpZ,OACnCd,EAAKuD,WAAWD,GAAGzD,MAAMqE,QAAQ,OAAS,GAAKlE,EAAKuD,WAAWD,GAAGzD,MAAMqE,QAAQ,OAAS,QAK1EjD,KAAnB2C,GAAgCsW,EAASra,QAAU+D,GAAgB,CAGnE,GAA2B,WAFFE,EAAU0D,MAAM4Q,QAAQxU,IAEVwW,MAAMxW,GAAiB,CAC1D,GAAIyW,GAAiBra,EAAKsa,SAAS,4BAA8B3W,KAAMuW,EAASvW,KAAM4W,WAAY,SAAUzZ,KAAMoZ,EAASpZ,MAC3Hd,GAAKwa,IAAIH,GAGbH,EAASO,yBAA0B,EACnCza,EAAKka,EAASvW,MAAQC,EACtBsW,EAASO,yBAA0B,IAK3C,IAAK,GAAIxW,KAAgBjE,GAAKgG,YAAa,CACvC,GAAI0U,GAAY1a,EAAKgG,YAAY/B,EAEZ,eAAjBA,GAAgCyW,EAAU7a,QAAU6a,EAAUxT,eAC9DwT,EAAU7a,MAAQ6a,EAAUxT,aAAepD,EAAUC,KAAKrB,KAAK1C,IAG5C,YAAnB0a,EAAU5Z,MAAyC,SAAnB4Z,EAAU5Z,MACS,UAA/Cd,EAAK6C,aAAa6X,EAAUhX,iBAC5BgX,EAAUtT,YAAa,EACvBpH,EAAKmY,aAAauC,EAAUhX,cAAe,IAC3CgX,EAAUtT,YAAa,GAI1BsT,EAAUC,2BAA8BD,EAAU1Z,oBAIvDhB,EAAKwC,EAAE8C,kBAAkBoV,EAAUhX,cAAegX,EAAU7a,MAAO6a,EAAU5Z,MAGjFd,EAAK4a,gBAEL5a,EAAK6a,SAAW,WACZ,IAAK7a,EAAK8a,sBAAuB,CAC7B,GAAIC,GAAyB,SAAgClZ,GACrDA,EAAKiZ,wBAITjZ,EAAKiZ,uBAAwB,EAC7BjZ,EAAKmZ,kBACLnZ,EAAKoZ,oBAGT,IAAKjb,EAAKuC,aAEH,CAGH,IAFA,GAAI2Y,GAAQlb,EAAKuC,aACb4Y,KACGD,GACHC,EAAOpQ,KAAKmQ,GACZA,EAAQA,EAAM3Y,YAGlB,KAAK,GAAI6Y,GAAMD,EAAO3X,OAAS,EAAG4X,GAAO,EAAGA,IACxCL,EAAuBI,EAAOC,GAGlCL,GAAuB/a,OAbvB+a,GAAuB/a,GAiB/BA,EAAK2Z,gBAAgB,SAErB3Z,EAAKqG,QAELrG,EAAK+Z,YAAa,EAClB/Z,EAAK2Z,gBAAgB,YACrB3Z,EAAKga,WACLha,EAAKia,iBAAiB,UAEG,IAArBja,EAAK4L,aAA2C,IAAtB5L,EAAK6L,eAC/B7L,EAAK2L,UAAW,GAGhB3L,EAAKqb,aACLrb,EAAKqb,cAGTrb,EAAK8Z,aAAc,EAEnB9Z,EAAKkX,QAAU7L,SAGnB,IAAIiQ,GAAgBtb,EAAKub,iBAAiB,WAC1C,IAA6B,IAAzBD,EAAc9X,OACdxD,EAAK6a,eACF,CACH7a,EAAKwb,gBAAkB,CAEvB,KAAK,GAAIC,GAAM,EAAGA,EAAMH,EAAc9X,OAAQiY,IAAO,CACjD,GAAIC,GAASJ,EAAcG,EAE3B,IAAIC,YAAkB/V,QAAOC,IAAIC,YAAa,CAC1C,GAAI8V,GAAoB,WAES,MAD7B3b,EAAKwb,kBAEDxb,EAAK6a,iBAEE7a,GAAKwb,kBAElBxO,KAAKhN,EAEF0b,GAAO5B,cACR9Z,EAAKwb,kBACLE,EAAOL,YAAcM,IAKJ,IAAzB3b,EAAKwb,iBACLxb,EAAK6a,gBAKjBjb,IAAK,2BACLC,MAAO,WACH,GAAIG,GAAON,IAENM,GAAKyZ,UAIe,IAArBzZ,EAAK4L,aAA2C,IAAtB5L,EAAK6L,aAC/B7L,EAAK2L,UAAW,EAEZ3L,EAAK2L,WACL3L,EAAKwC,EAAE0J,UAAU,SAAUlM,GACvBmM,SAAS,EACTC,YAAY,IAEhBpM,EAAK2L,UAAW,OAQ5B/L,IAAK,2BACLC,MAAO,SAAkC8D,EAAMwD,EAAUyU,GACrD,GAAI5b,GAAON,KACPwa,EAAWla,EAAK8X,wBAAwBnU,EAU5C,IARa,UAATA,GAA6B,UAATA,GACpB3D,EAAK8L,2BAGJoO,GACDla,EAAK6b,iBAAiBlY,EAAMwD,EAAUyU,MAGrC1B,GAAYA,GAAYA,EAAS9S,YAAtC,CAIA,GAAI0U,GAAmB9b,EAAKwC,EAAE6C,kBAAkB6U,EAASxW,cAAewW,EAASpZ,UAChEG,KAAb2a,GAA0B5b,EAAKka,EAASvW,QAAUmY,IAClD5B,EAASO,yBAA0B,EAE/Bza,EAAKka,EAASvW,UADO1C,KAArB6a,EACsBA,EAEA9b,EAAKgG,YAAYkU,EAASvW,MAAMuD,aAE1DgT,EAASO,yBAA0B,OAO3C7a,IAAK,mBACLC,MAAO,SAA0B8D,EAAMwD,EAAUyU,OASjDhc,IAAK,WACLC,MAAO,WACH,GAAIG,GAAON,IAEXoL,GAAciR,MAAM/b,GAEhBA,EAAKgc,YACLhc,EAAKgc,gBAObpc,IAAK,WACLC,MAAO,WACH,GAAIG,GAAON,IAEXoL,GAAcmR,QAAQjc,GAEtBA,EAAK2Z,gBAAgB,YACrB3Z,EAAK+Z,YAAa,EAEd/Z,EAAKuC,cACLvC,EAAKuC,aAAasE,iBAAiBkE,KAAK/K,GAE5CA,EAAKia,iBAAiB,YAElBja,EAAKkc,YACLlc,EAAKkc,gBAObtc,IAAK,yBACLC,MAAO,SAAgCoE,EAAckD,EAAUyU,GAC3D,GAAI5b,GAAON,IAEPyH,KAAayU,GAIb5b,EAAKmc,iBACLnc,EAAKmc,gBAAgBlY,EAAckD,EAAUyU,MAKrDhc,IAAK,mBACLC,MAAO,SAA0Buc,GAC7B,GAAIpc,GAAON,KACP0K,EAAUpK,EAAKoK,QAAQjC,cACvBkU,EAAYrc,EAAKsc,gBAAgB,aAEjCC,EAAmB,SAA0BF,GAkC7C,IAAK,GAAIG,KAAYH,GAAW,EAjCnB,SAAgBG,GACzB,GAAIC,GAAOD,EAASlU,MAAM,KACtBiF,EAAYkP,EAAK,GACjBhW,EAAUzG,EAAKwC,CAEnB,IAAIia,EAAK,KACLlP,EAAYkP,EAAK,GACjBhW,EAAUzG,EAAK,IAAMyc,EAAK,IAEV,aAAZA,EAAK,IAAmB,CACxB,GAAI5P,GAAK7M,EAAK6M,EACH,MAAPA,IACAA,EAAK/I,EAAUC,KAAKC,YAAYoG,IAEpCmD,EAAYA,EAAY,IAAMV,EAItC,GAAI6P,GAAcL,EAAUG,GACxBhP,EAAU,SAAiBtH;yBAC3B,GAAIgR,GAAUlX,EAAKkX,OACnBlX,GAAKkX,QAAUlX,EACfA,EAAK0c,GAAa/U,MAAM3H,GAAOkG,IAC/BlG,EAAKkX,QAAUA,EAGnB,KAAKzQ,EACD,MAAO,UAGXA,GAAQ2V,GAAQ7O,EAAWC,KAIRgP,IAM3BD,GAAiBF,GACjBE,EAAiBvc,EAAKqE,sBAM1BzE,IAAK,gBACLC,MAAO,WACH,GAAIG,GAAON,KACPid,EAAW3c,EAAK2c,WAChBC,EAAWvR,SAASwR,wBAExB,IAAiB,KAAbF,EACA,MAAO,KAIX,IAAIG,GAAazR,SAASwC,cAAc,MACxC+O,GAAS7O,YAAY+O,GAGrBA,EAAWna,UAAYga,CACvB,IAAI5S,GAAQ+S,EAAW9S,UAGvB8S,GAAWxa,WAAWmO,YAAYqM,EAGlC,KAAK,GAAIxZ,GAAI,EAAGA,EAAIyG,EAAMvG,OAAQF,IAC9BsZ,EAAS7O,YAAYhE,EAAMzG,GAG/B,OAAOsZ,MAGXhd,IAAK,gBACLC,MAAO,WACH,GAAIG,GAAON,KAEPqd,EAAkB/c,EAAKgd,eAE3B,IAAKD,EAAL,CAIA,GAAIJ,GAAWtR,SAAS4R,WAAWF,GAAiB,EAEpD,IAAKJ,EAASO,cAAd,CAIA,GAAIC,GAAcR,EAAS3S,WAAW,GAClCjI,EAAM,SAAa4B,EAAM8C,GACzBzG,EAAK,IAAM2D,GAAQ8C,EAAQjE,EAAIsB,EAAUwS,OAAO7P,GAChDzG,EAAKwC,EAAEmB,GAAQ8C,EACfA,EAAQlE,aAAevC,GAIvBod,EAAiBD,CAErB,IAAIA,EAAYE,qBAAqB,WAAW7Z,OAAS,EAAG,CACxD,GAAI8Z,GAAwBH,EAAYE,qBAAqB,WAAW,EACxED,GAAiBE,EAAsBhb,WACvC8a,EAAe3M,YAAY6M,OACxB,CACH,GAAIC,GAAuBZ,EAASpB,iBAAiB,kBACjDgC,IAAwBA,EAAqB/Z,OAAS,IACtD4Z,EAAiBG,EAAqB,IAK9C,GAAIjC,GAAgBqB,EAASpB,iBAAiB,OACjB,KAAzBD,EAAc9X,SACd8X,EAAgBqB,EAASpB,iBAAiB,MAG9CxZ,EAAI,OAAQob,GACZpb,EAAI,UAAWqb,GAEfpd,EAAKwC,EAAEE,KAAO1C,EAAK2C,UAAUlB,WAAWuD,MAExC,KAAK,GAAI1B,GAAI,EAAGA,EAAIgY,EAAc9X,OAAQF,GAAK,EAAG,CAC9C,GAAIka,GAAelC,EAAchY,EACT,MAApBka,EAAa3Q,KACb2Q,EAAa3Q,GAAK,QAAUvJ,GAGhCvB,EAAIyb,EAAa3Q,GAAI2Q,GACrBA,EAAarF,aAAa,SAAUqF,EAAa3Q,IAE5C7M,EAAKuG,YACNiX,EAAalZ,gBAAgB,MAOrC,IAHAtE,EAAKwG,SAAWxG,EAAKmD,YAAYwZ,GACjC3c,EAAKyd,MAAMC,SAAS,iBAEb1d,EAAKgK,WAAWxG,QACnB4Z,EAAerP,YAAY/N,EAAK+C,WAIpC/C,GAAK2d,eAAehB,QAGxB/c,IAAK,iBACLC,MAAO,SAAwB8c,GAChBjd,KAENqO,YAAY4O,MAMrB/c,IAAK,uBACLC,MAAO,WACH,GAAIG,GAAON,KAEPke,EAAQ5d,EAAKyH,YAAYoW,SAC7BD,GAAME,QAAU9d,EAAKyH,YAAYqW,OAIjC,KAAK,GAFDA,GAAUF,EAAME,QAEXxa,EAAI,EAAGA,EAAIwa,EAAQta,OAAQF,GAAK,EACrCtD,EAAK+d,UAAUD,EAAQxa,OAI/B1D,IAAK,QACLC,MAAO,SAAeme,EAAYC,GAC9B,GAAIje,GAAON,IAEX,IAAmB,OAAfse,GAAmD,OAA5BC,EAEvB,YADAje,EAAKke,OAAS,KAIlBle,GAAKke,QACDF,WAAYA,EACZC,wBAAyBA,MAIjCre,IAAK,UACLC,MAAO,WACQH,KAENwe,OAAS,QAGlBte,IAAK,kBACLC,MAAO,SAAyBse,EAAWC,GAKvC,IAAK,GAJDpe,GAAON,KACP2e,EAAa,KAAOF,EAAU/Z,UAAU,EAAG,GAAGiE,cAAgB8V,EAAU/Z,UAAU,GAClFka,EAAe,KAAOH,EAAU/Z,UAAU,EAAG,GAAGiE,cAAgB8V,EAAU/Z,UAAU,GAE/Ed,EAAI,EAAGA,EAAItD,EAAKue,YAAY/a,OAAQF,IAAK,CAC9C,GAAI2V,GAASjZ,EAAKue,YAAYjb,EAE9B2V,GAAOoF,IAAc,EAEjBpF,EAAOkF,IACPlF,EAAOkF,GAAWC,GAGlBnF,EAAOqF,IACPrF,EAAOqF,GAAcF,OAWjCxe,IAAK,YACLC,MAAO,SAAmBoZ,GACtB,GAAIjZ,GAAON,IAEX,IAAKuZ,EAAL,CAIA,GAAI6E,GAAU9d,EAAK8d,QACfF,EAAQ3E,EAAO4E,WAEd5E,EAAOD,YAAcC,EAAOtV,OAC7BsV,EAAOD,WAAaC,EAAOtV,OAKvB,IAFJma,EAAQpG,UAAU,SAAU8G,GAC5B,MAAOvF,GAAOD,aAAewF,EAAcxF,cAE3C8E,EAAQ/S,KAAKkO,GAGjBjZ,EAAKye,aAAaxF,GAClBjZ,EAAK0e,qBAAqBd,EAAMe,YAAaf,GAC7C5d,EAAK4e,wBAAwB3F,EAAO+E,gBAMxCpe,IAAK,eACLC,MAAO,SAAsBoZ,GACzB,IAAIA,EAAO4F,UAAX,CAIA5F,EAAO4E,UAAUiB,YAAc,SAAUrY,GAC1B/G,KAEN6C,aAAekE,EAGxB,IAAIuX,GAAa/E,EAAO+E,eACpBe,EAAgB9e,OAAO0J,KAAKqU,GAC5BW,EAAc1e,OAAO+e,oBAAoB/F,EAAO4E,UAEpD5E,GAAO4E,UAAUc,YAAcA,CA0B/B,KAAK,GAAInU,GAAI,EAAGA,EAAIuU,EAAcvb,OAAQgH,GAAK,GAxBlC,SAAgBA,GACzB,GAAIvG,GAAe8a,EAAcvU,GAC7B0P,EAAW8D,EAAW/Z,EAE1BhE,QAAO4J,eAAeoP,EAAO4E,UAAW5Z,GACpCgb,cAAc,EACdC,YAAY,EACZte,IAAK,WACD,GAAIZ,GAAON,IAEX,OAAKM,GAAKuC,aAIHvC,EAAKuC,aAAa0B,GAHdiW,EAASra,OAKxBwW,IAAK,SAAaxW,GACHH,KAEN6C,aAAa0B,GAAgBpE,MAMnC2K,EAGXyO,GAAO4F,WAAY,MAGvBjf,IAAK,kBACLC,MAAO,SAAyBsf,GAQ5B,IAPA,GAAInf,GAAON,KACP+G,EAAUd,OAAOC,IAAI5F,EAAKof,aAE1BC,EAAe5Y,EAAQ0Y,GACvBG,KACAC,EAAYtf,OAAOoZ,eAAe5S,GAE/B8Y,EAAUJ,IACbG,EAAwBxb,EAAUC,KAAK7D,OAAOof,EAAuBC,EAAUJ,IAC/EI,EAAYtf,OAAOoZ,eAAekG,EAGtC,OAAOzb,GAAUC,KAAK7D,OAAOof,EAAuBD,MAMxDzf,IAAK,gBACLC,MAAO,WACH,GAAIG,GAAON,KACPke,EAAQ5d,EAAKyH,YAAYoW,UACzBG,EAAahe,EAAKsc,gBAAgB,cAClCkD,EAAUvf,OAAO+e,oBAAoBpB,EAEzCA,GAAM6B,sBACN7B,EAAMva,mBACNua,EAAMvZ,qBAENrE,EAAK0f,uBACL1f,EAAK0e,qBAAqBc,EAAS5B,GACnC5d,EAAK4e,wBAAwBZ,GAG7BJ,EAAMlE,aAAe,WACjB,GAAI1Z,GAAON,KAEPse,EAAaJ,EAAM6B,mBACnBV,EAAgB9e,OAAO0J,KAAKqU,GAC5BF,EAAU9d,EAAK8d,OAEnB9d,GAAKwC,EAAIsB,EAAUwS,OAAOtW,GAC1BA,EAAK4M,UAAYA,EAEjB5M,EAAKue,eACLve,EAAKgG,eACLhG,EAAK6G,oBAEL7G,EAAK8X,0BAEL,KAAK,GAAIxU,GAAI,EAAGA,EAAIwa,EAAQta,OAAQF,GAAK,EAAG,CACxC,GAAI2V,GAAS6E,EAAQxa,GACjBqc,EAAiB,GAAI1G,EACzB0G,GAAeb,YAAY9e,GAC3BA,EAAKue,YAAYxT,KAAK4U,GA8D1B,IAAK,GAAIC,GAAM,EAAGA,EAAMb,EAAcvb,OAAQoc,GAAO,EAAG,EA3D3C,SAAgBA,GACzB,GAAI3b,GAAe8a,EAAca,GAC7B1F,EAAW8D,EAAW/Z,GACtBiD,EAAegT,EAASra,KA0B5B,IAxBIggB,GAAgC,cAAjB5b,SACRjE,GAAKiE,GAGhBjE,EAAKgG,YAAY/B,IACbN,KAAMM,EACNgC,OAAQiU,EAASjU,OACjB6Z,cAAe5F,EAAS4F,cACxBhf,KAAMoZ,EAASpZ,KACfiX,SAAUmC,EAASnC,SACnB/W,mBAAoBkZ,EAASlZ,mBAC7B2Z,0BAA2BT,EAASS,0BACpC9a,MAAOqH,EACP6Y,SAAU7F,EAAS6F,SACnB7Y,aAAcA,EACdxD,cAAewW,EAASxW,cACxBsc,SAAU9F,EAAS8F,SACnBjf,QAASmZ,EAASnZ,QAClBkf,OAAQ/F,EAAS+F,OACjBC,UAAWhG,EAASgG,WAGxBlgB,EAAK8X,wBAAwBoC,EAASxW,eAAiB1D,EAAKgG,YAAY/B,IAEnEiW,EAASiG,eAAe,QAAS,CAClC,GAAI9F,GAAiBra,EAAKsa,SAAS,uBAAyB3W,KAAMM,GAClEjE,GAAKwa,IAAIH,GAGb,GAAsB,QAAlBH,EAASpZ,KACT,MAAO,UAGX,IAAIsf,GAAmBtc,EAAU0D,MAAM4Q,QAAQlR,EAC/C,QAAqBjG,KAAjBiG,GAA+C,OAAjBA,GAAyBgT,EAASpZ,OAASsf,IAAqBlG,EAASgG,UAAW,CAClH,GAAsB,WAAlBhG,EAASpZ,MAA0C,UAArBsf,EAC9B,MAAO,UAGX,IAAyB,WAArBA,EAA+B,CAM/B,IALa,UAAW,MAAO,SACL1I,UAAU,SAAU5W,GAC1C,MAAOA,KAASoZ,EAASpZ,QAGR,EACjB,MAAO,WAGf,GAAIuf,GAAkBrgB,EAAKsa,SAAS,4BAA8B3W,KAAMM,EAAcsW,WAAY6F,EAAkBtf,KAAMoZ,EAASpZ,MACnId,GAAKwa,IAAI6F,MAKMT,KAO3BhC,EAAM0C,gBAUV1gB,IAAK,uBACLC,MAAO,SAA8B2f,EAAS5B,GAC1C,GAAI5d,GAAON,KACP6gB,EAAevgB,EAAKyH,YAAYoW,UAEhC2C,EAAe,SAAsBC,EAAQC,GAC7C,GAAItC,GAAOxW,MAAMiW,UAAU9Y,MAAM2C,KAAK4R,UAAW,EA0BjD,OAxBoB,YAEhB,IAAK5Z,KAAK+Z,SAA0B,aAAfiH,GAA4C,QAAfA,EAAsB,CACpE,GAAIrG,GAAiB3a,KAAK4a,SAAS,kBACnC5a,MAAK8a,IAAIH,GAIb,IAAK,GADDsG,GAAgBjhB,KACX4D,EAAI,EAAGA,EAAI5D,KAAK6e,YAAY/a,OAAQF,IAAK,CAC9C,GAAI2V,GAASvZ,KAAK6e,YAAYjb,EAC9B,IAAIod,IAAczH,GAAQ,CACtB0H,EAAgB1H,CAChB,QAIR,GAAI/B,GAAUxX,KAAKwX,OACnBxX,MAAKwX,QAAUxX,IACf,IAAIsH,GAASyZ,EAAO9Y,MAAMgZ,EAAevC,EAAKwC,OAAOhZ,MAAMiW,UAAU9Y,MAAM2C,KAAK4R,YAGhF,OAFA5Z,MAAKwX,QAAUA,EAERlQ,IAOX6Z,GAAkB,cAAe,QAAS,UAAW,WAAY,WAAY,cAAe,eAAgB,cAAe,yBAoB/H,KAAK,GAAI/e,KAAS0d,GAAS,EAhBd,SAAgB1d,GACzB,GAAI4e,GAAalB,EAAQ1d,EAErB4e,GAAWI,WAAW,UAEnB7f,KAF2B4f,EAAe3Y,KAAK,SAAU6Y,GAC5D,MAAOA,KAAsBL,MAK7BH,EAAad,mBAAmBiB,IAE/B5c,EAAU0D,MAAMO,WAAW6V,EAAM8C,MAEtCH,EAAaG,GAAcF,EAAa5C,EAAM8C,GAAaA,OAIxC5e,OAS3BlC,IAAK,0BACLC,MAAO,SAAiCme,GACpC,GAAKA,EAAL,CAIA,GAAIhe,GAAON,KACPke,EAAQ5d,EAAKyH,YAAYoW,UACzBkB,EAAgB9e,OAAO0J,KAAKqU,GAC5BgD,EAAoBhhB,EAAKsc,gBAAgB,aAE7Crc,QAAOC,OAAO0d,EAAM6B,mBAAoBzB,EAiLxC,KAAK,GA9KDiD,GAAiB,SAAwB/J,EAASgD,EAAUra,GAC5D,GAAIG,GAAOkX,CAEX,KAAIgD,EAAS6F,SAAb,CAKA,GAAI7F,EAAS4F,cAAe,CAGxB,IAAK,GAFDoB,IAAe,EAEV5d,EAAI,EAAGA,EAAI4W,EAAS4F,cAActc,OAAQF,IAC/C,GAAI4W,EAAS4F,cAAcxc,KAAOzD,EAAO,CACrCqhB,GAAe,CACf,OAIR,IAAKA,EAAc,CACf,GAAIC,GAAsB9I,KAAKC,UAAU4B,EAAS4F,eAAerf,QAAQ,UAAW,IAAIA,QAAQ,IAAK,MAAMA,QAAQ,MAAO,KACtH2gB,EAAoB,IAAOvhB,EAAQ,IACnCwa,EAAiBra,EAAKsa,SAAS,wBAA0B3W,KAAMuW,EAASvW,KAAM0d,YAAaD,EAAmBvhB,MAAOshB,GAGzH,YADAnhB,GAAKwa,IAAIH,IAKjB,GAAIpW,GAAeiW,EAASvW,KACxBwD,EAAWnH,EAAKgG,YAAY/B,GAAcpE,KAG9C,IAAIqa,EAASgG,WACLlgB,EAAKka,EAASgG,WAAY,CAC1BlgB,EAAKkX,QAAUlX,CACf,IAAIshB,GAAkBthB,EAAKka,EAASgG,WAAW/Y,EAAUtH,OACjCoB,KAApBqgB,IACAzhB,EAAQyhB,GAGZthB,EAAKkX,QAAU7L,SAIvB,GAAIlE,IAAatH,EAAjB,CAIA,IAAKqa,EAASiG,eAAe,QAAS,CAClC,GAAIoB,GAAmBvhB,EAAKsa,SAAS,uBAAyB3W,KAAMM,GACpEjE,GAAKwa,IAAI+G,GAGb,GAAsB,UAAlBrH,EAASpZ,MAAoB,GAAKqG,GAAa,GAAKtH,EAAxD,CAIA,OAAcoB,KAAVpB,GAAiC,OAAVA,GAAoC,QAAlBqa,EAASpZ,MAAkBoZ,EAASpZ,OAASgD,EAAU0D,MAAM4Q,QAAQvY,KAAWqa,EAASgG,WAAuB,OAAVrgB,IAAmBqa,EAASnC,SAAU,CACrL,GAAIyJ,IAAa,CAMjB,IAJsB,WAAlBtH,EAASpZ,MAAwD,UAAnCgD,EAAU0D,MAAM4Q,QAAQvY,KACtD2hB,GAAa,GAGsB,WAAnC1d,EAAU0D,MAAM4Q,QAAQvY,GAAqB,EAChC,UAAW,MAAO,SACL6X,UAAU,SAAU5W,GAC1C,MAAOA,KAASoZ,EAASpZ,QAGR,IACjB0gB,GAAa,GAIrB,GAAIA,EAAY,CACZ,GAAIC,GAAmBzhB,EAAKsa,SAAS,4BAA8B3W,KAAMM,EAAcsW,WAAYzW,EAAU0D,MAAM4Q,QAAQvY,GAAQiB,KAAMoZ,EAASpZ,MAElJ,YADAd,GAAKwa,IAAIiH,IAKjBvH,EAAS9S,YAAa,EACtBpH,EAAKgG,YAAY/B,GAAcpE,MAAQA,GAGlCqa,EAASO,yBAA2BP,EAASlZ,oBAC9ChB,EAAKwC,EAAE8C,kBAAkB4U,EAASxW,cAAe7D,EAAOqa,EAASpZ,KAMrE,IAFcd,EAAKyZ,WAAazZ,EAAKuC,cAAgBvC,EAAKuC,cAAgBvC,EAAKuC,aAAakX,SAE/E,CACLzZ,EAAKkX,UAAYlX,IAIjBA,EAAKkX,QAAUlX,EACfA,EAAK0hB,uBAAuBzd,EAAckD,EAAUtH,GACpDG,EAAKkX,QAAU7L,SAGX6O,EAAS8F,UACLhgB,EAAKka,EAAS8F,YACdhgB,EAAKkX,QAAUlX,EACfA,EAAKka,EAAS8F,UAAU7Y,EAAUtH,GAClCG,EAAKkX,QAAU7L,UAInBrL,EAAKke,QAAUle,EAAKke,OAAOF,WAAW9Z,QAAQD,IAAiB,GAC/DjE,EAAKke,OAAOD,wBAAwBha,EAAckD,EAAUtH,KAKvDqa,EAASjU,QAAUjG,EAAKqD,gBAAgBY,MAEjDjE,EAAKwC,EAAE0J,UAAUgO,EAASxW,cAAgB,YAAcyD,SAAUA,EAAUtH,MAAOA,IAC/EG,EAAKqD,gBAAgBY,IACrBjE,EAAKib,iBAAiBhX,IAIlCiW,EAAS9S,YAAa,MAiDjB9D,EAAI,EAAGA,EAAIyb,EAAcvb,OAAQF,GAAK,EAAG,EA5CrC,SAAgBA,GACzB,GAAIW,GAAe8a,EAAczb,GAC7B4W,EAAW8D,EAAW/Z,GACtBP,EAAgBI,EAAUC,KAAKoB,OAAOlB,GACtCnD,EAAOoZ,EAASpZ,MAAQ,MACxBiX,EAAWjX,EAAKoD,QAAQ,MAAQ,GAAc,QAATpD,CAmBzC,IAjBIiX,GAAqB,QAATjX,IACZoZ,EAASpZ,KAAOA,EAAKsD,UAAU,EAAGtD,EAAK0C,OAAS,IAGpD0W,EAASnC,SAAWA,EACpBmC,EAASxW,cAAgBA,EAAcyE,cACvC+R,EAASvW,KAAOM,EAChBiW,EAASlZ,uBAAqDC,KAAhCiZ,EAASlZ,oBAAmCkZ,EAASlZ,mBAE/EkZ,EAASnZ,SAAWigB,EAAkB/c,KACtCiW,EAASra,MAAQmhB,EAAkB/c,GAAcpE,OAGjDqa,EAAS+F,QAAUe,EAAkB/c,IACrCH,EAAUC,KAAK7D,OAAOga,EAASra,MAAOmhB,EAAkB/c,GAAcpE,OAGtE+d,EAAMuC,eAAelc,GACrB,MAAO,UAGXhE,QAAO4J,eAAe+T,EAAO3Z,GACzBgb,cAAc,EACdC,YAAY,EACZte,IAAK,WAGD,MAFWlB,MAECsG,YAAY/B,GAAcpE,OAE1CwW,IAAK,SAAaxW,GACd,GAAIG,GAAON,IAEXuhB,GAAejhB,EAAMA,EAAKgG,YAAY/B,GAAepE,QAM1CyD,QAM3B1D,IAAK,aACLgB,IAAK,WACD,GAAIZ,GAAON,IAMX,OAJKM,GAAKgG,cACNhG,EAAKgG,gBAGFhG,EAAKgG,eAUhBpG,IAAK,UACLgB,IAAK,WAMD,IALA,GAAIZ,GAAON,KAEPiiB,KACA3O,EAAUhT,EAAKsC,WAEZ0Q,GAAgC,IAArBA,EAAQ4O,UAClB5O,YAAmB/Q,eAAgB,GACnC0f,EAAQ5W,KAAKiI,GAEjBA,EAAUA,EAAQ1Q,UAEtB,OAAOqf,QAGX/hB,IAAK,aAOLgB,IAAK,WACD,OACIihB,UACIhiB,OAAO,EACPiB,KAAM,WAEVghB,UACIjiB,OAAO,EACPiB,KAAM,WAEVihB,aACIliB,OAAO,EACPiB,KAAM,WAEVf,UACIF,OACIgB,IACImhB,oBAAuB,uDACvBC,qBAAwB,+FACxBC,yBAA4B,gGAC5BC,gBAAmB,+FACnBC,gBAAmB,yBAG3BphB,oBAAoB,EACpBF,KAAM,cAYlBlB,IAAK,YACLgB,IAAK,WACD,YAUJhB,IAAK,UACLgB,IAAK,WACD,MAAO+E,QAAOC,IAAIyc,YAGnBxc,GACT5D,aAEEqgB,KACAC,KACAC,KACA3C,GAAc,EAEd4C,EAAc9X,UAAUC,UAAU8X,MAAM,2BAC5C,IAAID,EAAa,CACO7J,SAAS6J,EAAY,GAAI,KACxB,KACjB5C,GAAc,GAKtB,GACI8C,GAAkB,QAASA,KAC3BH,EAA0BI,KAAK,SAAUC,EAAUC,GAC/C,GAAIC,GAASF,EAASpc,QAAQuc,QAAQxf,OAClCyf,EAASH,EAASrc,QAAQuc,QAAQxf,MAEtC,OAAIuf,GAASE,GACD,EAERF,EAASE,EACF,EAGJ,GAGX,KAAK,GAAI3f,GAAI,EAAGA,EAAIkf,EAA0Bhf,OAAQF,IAClDkf,EAA0Blf,GAAG4f,WAC7BV,EAA0Blf,GAAGmD,QAAQ0c,WAAY,CAGrDX,MACAnX,SAASmF,oBAAoB,mBAAoBmS,GAGrDtX,UAASgE,iBAAiB,mBAAoBsT,EAE9C,IAAIS,GAAoB,SAAUC,GAG9B,QAASD,KAEL,MADA5jB,cAAaC,eAAeC,KAAM0jB,GAC3B5jB,aAAa2Z,0BAA0BzZ,MAAO0jB,EAAkBhK,WAAanZ,OAAOoZ,eAAe+J,IAAoBzb,MAAMjI,KAAM4Z,YAuD9I,MA3DA9Z,cAAa+Z,SAAS6J,EAAmBC,GAOzC7jB,aAAaG,YAAYyjB,IACrBxjB,IAAK,kBAGLC,MAAO,WAEQH,KAEN4jB,aAMT1jB,IAAK,mBACLC,MAAO,WACH,GAAIG,GAAON,IAEPM,GAAKmjB,YAImB,YAAxB9X,SAASkY,WACTvjB,EAAKwjB,SAELxjB,EAAKmjB,WAAY,EACjBX,EAA0BzX,MACtBtE,QAAS/G,KAAMwjB,SAAU,WACjBxjB,KAAK+Z,SAIT/Z,KAAK8jB,SACPxW,KAAKhN,UAQnBJ,IAAK,mBACLC,MAAO,WACH,GAAIG,GAAON,IAENM,GAAK+Z,YAIV/Z,EAAKiH,eAGNmc,GACTvd,GAoKE4d,GAlKsB,SAAUC,GAqEhC,QAASC,KACLnkB,aAAaC,eAAeC,KAAMikB,EAGlC,IAAIC,GAASpkB,aAAa2Z,0BAA0BzZ,MAAOikB,EAAoBvK,WAAanZ,OAAOoZ,eAAesK,IAAsBjc,KAAKhI,OAEzIM,EAAO4jB,CAMX,OAJA5jB,GAAK6jB,mBAAqB,GAG1B7jB,EAAKsjB,UACEM,EAhFXpkB,aAAa+Z,SAASoK,EAAqBD,GAC3ClkB,aAAaG,YAAYgkB,IACrB/jB,IAAK,cACLC,MAAO,WAEH,MADkB,sxBAItBD,IAAK,wBACLC,MAAO,SAA+B4c,GAClC,GAAIzc,GAAON,IAEX,IAAKM,EAAKuG,YAAekW,EAAzB,CAIA,GAAIqH,GAAOzY,SAASwC,cAAc,OAElCiW,GAAKC,IAAM,aACXD,EAAKhjB,KAAO,WACZgjB,EAAKE,KAAOvH,EAEZzc,EAAKuG,WAAW0d,aAAaH,EAAM9jB,EAAKuG,WAAWxD,gBAGvDnD,IAAK,mBACLC,MAAO,SAA0B8D,EAAMwD,EAAUyU,GAChC,mBAATjY,IACAjE,KAAKwkB,cAAgBtI,MAI7Bhc,IAAK,2BACLC,MAAO,SAAkC8D,EAAMwD,EAAUyU,GAC1Clc,KAED+Z,SAIVja,aAAaoB,IAAI+iB,EAAoB9F,UAAUzE,WAAanZ,OAAOoZ,eAAesK,EAAoB9F,WAAY,2BAA4Bne,MAAMgI,KAAKhI,KAAMiE,EAAMwD,EAAUyU,MAKnLhc,IAAK,gBACLgB,IAAK,WACD,MAAOlB,MAAKmkB,oBAEhBxN,IAAK,SAAaoG,GACd/c,KAAKmkB,mBAAqBpH,OAG9B7c,IAAK,qBACLgB,IAAK,WACD,GAAIZ,GAAON,KACPykB,GAAsB,iBAE1B,KAAK,GAAIC,KAAkBpkB,GAAK6d,UAAU4B,mBAAoB,CAC1D,GAAI9Y,GAAiB3G,EAAK6d,UAAU4B,mBAAmB2E,EAEvDD,GAAmBpZ,KAAKpE,EAAejD,eAG3C,MAAOygB,OAmBf3kB,aAAaG,YAAYgkB,IACrB/jB,IAAK,UACLC,MAAO,WACH,GAAIG,GAAON,KAEP+Z,EAAUzZ,EAAKyZ,QACf4K,MAAgB,EAWpB,IATK5K,GACGzZ,EAAKgD,SAASQ,OAAS,GAAKxD,EAAKgD,SAAS,YAAcshB,oBACxDD,EAAgBrkB,EAAKgD,SAAS,GAC9BhD,EAAKyQ,YAAY4T,IAIzBrkB,EAAKwjB,SAEA/J,GAAWzZ,EAAKuG,WAAY,CACzB8d,GACArkB,EAAKuG,WAAW0d,aAAaI,EAAerkB,EAAKuG,WAAWxD,YAGhE/C,EAAKukB,sBAAsBvkB,EAAK6jB,mBAEhC,IAAIW,GAAcnZ,SAASwC,cAAc,QACzC2W,GAAY7hB,UAAY3C,EAAKwkB,cAC7BxkB,EAAKuG,WAAW0d,aAAaO,EAAaxkB,EAAKuG,WAAWxD,gBAMlEnD,IAAK,oBACLC,MAAO,WACH,GAAIG,GAAON,IAEiB,aAAxB2L,SAASkY,WACTvjB,EAAKykB,UAELjC,EAA0BzX,KAAK,WACvBrL,KAAK+Z,SAIT/Z,KAAK+kB,WACPzX,KAAKhN,OAOfJ,IAAK,kBACLC,MAAO,WACQH,KAEN8jB,WAGT5jB,IAAK,iBACLC,MAAO,SAAwB8c,GAC3B,GAAI3c,GAAON,IAEPM,GAAKuG,WACLvG,EAAKuG,WAAWwH,YAAY4O,GAE5B3c,EAAK+N,YAAY4O,QAK/B9W,GAOoB,WAClB,QAAS4d,KACLjkB,aAAaC,eAAeC,KAAM+jB,GAmGtC,MAhGAjkB,cAAaG,YAAY8jB,EAAiB,OACtC7jB,IAAK,WAOLC,MAAO,SAAkBuK,EAAS3D,GAC9B,GAAImX,GAAQnX,EAAQoX,UAChBuB,EAAcrb,EAAKC,YAAYoG,GAAS3J,QAAQ,SAAU,GAE1D6hB,GAAelY,KAInBkY,EAAelY,GAAWzE,OAAOC,IAAIwZ,GAAe3Y,EACpDmX,EAAMwB,YAAcA,EACpBxB,EAAM8G,gBACFnC,EAAoBnY,IACpBmY,EAAoBnY,GAASwT,GASjCvS,SAASsZ,gBAAgBva,EAAS3D,OAGtC7G,IAAK,mBACLC,MAAO,WACH,GAAIG,GAAON,IAEX,IAAKM,EAAK4kB,WAIV,IAAK,GAAIthB,GAAItD,EAAK4kB,WAAWphB,OAAS,EAAGF,GAAK,EAAGA,IAAK,CAClD,GAAIuhB,GAAiB7kB,EAAK4kB,WAAWthB,EAErCtD,GAAK8kB,SAASD,EAAeza,QAASya,EAAepe,aAW7D7G,IAAK,MACLC,MAAO,SAAauK,GAChB,GAAIkY,EAAelY,GACf,MAAOkY,GAAelY,MAY9BxK,IAAK,iBACLC,MAAO,SAAwBuK,EAAS8Y,GACpC,IAAK9Y,EACD,KAAM,IAAI5I,OAAM,iCAGpB,IAAIxB,GAAON,KACPqlB,EAAmBxC,EAAoBnY,GACvC3D,EAAUzG,EAAKY,IAAIwJ,EAElB2a,IAAqBte,GAEdse,GAAoBte,GAC5Byc,EAASzc,EAAQoX,WACjB0E,EAAoBnY,OAAWnJ,IACxB8jB,IAAqBte,EAC5B8b,EAAoBnY,GAAW,SAAUwT,GACrCmH,EAAiBnH,GACjBsF,EAAStF,IAENmH,GAAoBte,IAC3Bse,EAAiBte,EAAQmX,OACzBsF,EAASzc,EAAQmX,OACjB2E,EAAoBnY,OAAWnJ,IAZ/BshB,EAAoBnY,GAAW8Y,MAgBpCO,KAGXA,GAAgBuB,cAAe,EAO/Brf,OAAOC,IAAM,SAAUwE,EAAS3D,GAC5B,GAAIgd,EAAgBuB,aAAc,CACzBvB,EAAgBmB,aACjBnB,EAAgBmB,cAGpB,IAAIxF,GAAcrb,EAAKC,YAAYoG,GAAS3J,QAAQ,SAAU,GAI9D,OAHAkF,QAAOC,IAAIwZ,GAAe3Y,MAE1Bgd,GAAgBmB,WAAW7Z,MAAOX,QAASA,EAAS3D,QAASA,IAIjEgd,EAAgBqB,SAAS1a,EAAS3D,IAGtCxG,OAAOC,OAAOyF,OAAOC,KACjBqf,SAAUxB,EACVpB,SAAUnhB,EAAa3B,EAAoBqC,GAC3CiE,YAA8Dud,EAC9Dtf,UAAWA,EACXohB,QAAS,UAMbvf,OAAOC,IAAI,sBAAuB,SAAUuf,GAGxC,QAASC,KAEL,MADA5lB,cAAaC,eAAeC,KAAM0lB,GAC3B5lB,aAAa2Z,0BAA0BzZ,MAAO0lB,EAAehM,WAAanZ,OAAOoZ,eAAe+L,IAAiBzd,MAAMjI,KAAM4Z,YAgHxI,MApHA9Z,cAAa+Z,SAAS6L,EAAgBD,GAOtC3lB,aAAaG,YAAYylB,IACrBxlB,IAAK,WAILC,MAAO,WACH,MAAO,+CAGXD,IAAK,QACLC,MAAO,WACHL,aAAaoB,IAAIwkB,EAAevH,UAAUzE,WAAanZ,OAAOoZ,eAAe+L,EAAevH,WAAY,QAASne,MAAMgI,KAAKhI,MAEjHA,KACN2lB,kBAGTzlB,IAAK,eACLC,MAAO,WAGH,IAFA,GAAIG,GAAON,KAEJM,EAAKwC,EAAEC,QAAQM,YAClB/C,EAAKwC,EAAEC,QAAQgO,YAAYzQ,EAAKwC,EAAEC,QAAQM,eAIlDnD,IAAK,eACLC,MAAO,WACH,GAAIG,GAAON,IAEX,QAAqBuB,KAAjBjB,EAAKyC,QAEL,YADAzC,EAAKyC,QAAUzC,EAAKwC,EAAEC,QAI1B,IAAqB,KAAjBzC,EAAKyC,SAAmC,OAAjBzC,EAAKyC,QAE5B,WADAzC,GAAKslB,cAIT,IAAItlB,EAAKyC,kBAAmBR,aAGxB,MAFAjC,GAAKslB,mBACLtlB,GAAKwC,EAAEC,QAAQsL,YAAY/N,EAAKyC,QAIpC,IAAIma,GAAWvR,SAASwR,yBAGpBC,EAAazR,SAASwC,cAAc,MACxC+O,GAAS7O,YAAY+O,GAGjB9c,EAAKyC,kBAAmBR,aACxB6a,EAAW/O,YAAY/N,EAAKyC,SAE5Bqa,EAAWna,UAAY3C,EAAKyC,OAGhC,IAAIsH,GAAQ+S,EAAW9S,UAMvB,KAHA8S,EAAWxa,WAAWmO,YAAYqM,GAG3B/S,EAAMvG,QACToZ,EAAS7O,YAAYhE,EAAM,GAG/B/J,GAAKslB,eACLtlB,EAAKwC,EAAEC,QAAQsL,YAAY6O,MAG/Bhd,IAAK,yBACLC,MAAO,SAAgCoE,EAAckD,EAAUyU,GAC3Dpc,aAAaoB,IAAIwkB,EAAevH,UAAUzE,WAAanZ,OAAOoZ,eAAe+L,EAAevH,WAAY,yBAA0Bne,MAAMgI,KAAKhI,KAAMuE,EAAckD,EAAUyU,EAE3K,IAAI5b,GAAON,IAEPyH,KAAayU,IAII,cAAjB3X,IACAjE,EAAKyC,QAAUmZ,EACf5b,EAAKqlB,gBAGY,YAAjBphB,GACAjE,EAAKqlB,qBAIbzlB,IAAK,aAGLgB,IAAK,WACD,OACI6B,SACI3B,KAAM,MACNE,oBAAoB,GAExB2B,WACI7B,KAAM,SACNE,oBAAoB,QAK7BokB,GACTzf,OAAOC,IAAIC","file":"jqxelement.js","sourcesContent":["'use strict';\n\n(function () {\n    'use strict';\n\n    /**\r\n     * This is a base class for localization. Users can implement it in order to handle translations via i18n.\r\n     */\n\n    var LocalizationModule = function () {\n        function LocalizationModule() {\n            babelHelpers.classCallCheck(this, LocalizationModule);\n        }\n\n        babelHelpers.createClass(LocalizationModule, [{\n            key: 'addMessages',\n\n\n            /** \r\n             * Adds messages. \r\n             * @param {String} - the string value's key.\r\n             * @param {Object} - the messages object.\r\n             */\n            value: function addMessages(messageKey, messages) {\n                var that = this;\n\n                Object.assign(that.messages[messageKey], messages);\n            }\n\n            /**\r\n              * Translates a text.\r\n              * @param {String} the string value's key.\r\n              * @param {Object} the values to be replaced in the string.\r\n              * @return {String} the translated text.\r\n             */\n\n        }, {\n            key: 'localize',\n            value: function localize(messageKey, messageArguments) {\n                var that = this;\n\n                if (!that.messages || !that.messages[that.language]) {\n                    return undefined;\n                }\n\n                var message = that.messages[that.language][messageKey];\n\n                if (!message) {\n                    return undefined;\n                }\n\n                var defaultMessage = message;\n                for (var messageName in messageArguments) {\n                    var messageValue = messageArguments[messageName];\n                    message = message.replace(new RegExp('{{' + messageName + '}}', 'g'), messageValue);\n                }\n\n                if (that.localizeFormatFunction) {\n                    that.localizeFormatFunction(defaultMessage, message, messageArguments);\n                }\n\n                return message;\n            }\n        }], [{\n            key: 'moduleName',\n            get: function get() {\n                return 'LocalizationModule';\n            }\n        }, {\n            key: 'properties',\n            get: function get() {\n                var properties = {\n                    'messages': {\n                        value: { en: {} },\n                        type: 'object',\n                        inherit: true,\n                        reflectToAttribute: false\n                    },\n                    'language': {\n                        value: 'en',\n                        type: 'string',\n                        reflectToAttribute: false\n                    },\n                    'localizeFormatFunction': {\n                        value: undefined,\n                        type: 'function',\n                        reflectToAttribute: false\n                    }\n                };\n\n                return properties;\n            }\n        }]);\n        return LocalizationModule;\n    }();\n\n    /**\r\n     * This is a base class for error logging.\r\n     */\n\n\n    var ErrorModule = function () {\n        function ErrorModule() {\n            babelHelpers.classCallCheck(this, ErrorModule);\n        }\n\n        babelHelpers.createClass(ErrorModule, [{\n            key: 'log',\n\n\n            /** Displays a log in the console.*/\n            value: function log(message) {\n                var that = this;\n\n                that._logger('log', message);\n            }\n\n            /** Displays a warning in the console.*/\n\n        }, {\n            key: 'warn',\n            value: function warn(message) {\n                var that = this;\n\n                that._logger('warn', message);\n            }\n\n            /** Displays an error in the console.*/\n\n        }, {\n            key: 'error',\n            value: function error(message) {\n                var that = this;\n\n                that._logger('warn', message);\n            }\n\n            /**\r\n              Logs an Error.\r\n              @param {String} the error's level - 'warn', 'error' or 'log'.\r\n              @param {Error} the error to be logged.\r\n             */\n\n        }, {\n            key: '_logger',\n            value: function _logger(level, error) {\n                var that = this;\n\n                if (that.debugMode) {\n                    var errorMessage = error instanceof Error ? error.message : error.toString();\n\n                    console[level](errorMessage);\n                }\n\n                if (that.rethrowError) {\n                    throw error;\n                }\n            }\n        }], [{\n            key: 'moduleName',\n            get: function get() {\n                return 'ErrorModule';\n            }\n        }, {\n            key: 'properties',\n            get: function get() {\n                var properties = {\n                    'rethrowError': {\n                        value: true,\n                        type: 'boolean',\n                        reflectToAttribute: false\n                    },\n                    'debugMode': {\n                        value: true,\n                        type: 'boolean',\n                        reflectToAttribute: false\n                    }\n                };\n\n                return properties;\n            }\n        }]);\n        return ErrorModule;\n    }();\n\n    /**\r\n     * This is a base class for data binding.\r\n     */\n\n\n    var BindingModule = function () {\n        function BindingModule() {\n            babelHelpers.classCallCheck(this, BindingModule);\n        }\n\n        babelHelpers.createClass(BindingModule, [{\n            key: 'getBindings',\n\n\n            /**\r\n             * @typedef {Object} bindings\r\n             * @property {Array<Node>} children The child nodes.\r\n             * @property {Node} node The node.\r\n             * @property {BindingData} data The node's binding data.\r\n             */\n\n            /**\r\n             * @typedef {Object} BindingData\r\n             * @property {Boolean} twoWay - Deterimes whether it's one way or two way data binding.\r\n             * @property {Boolean} updating - Determines whether the node is in update state.\r\n             * @property {Object}  value - The bound property's value.\r\n             * @property {String}  name - The bound property's name.\r\n             */\n            value: function getBindings(node) {\n                var that = this;\n\n                var index = 0;\n                var map = {};\n                var boundData = function (node) {\n                    if (node instanceof HTMLElement) {\n                        return that.parseAttributes(node);\n                    } else {\n                        var boundProperty = that.parseProperty(node.data, 'textContent', node);\n\n                        if (boundProperty) {\n                            if (node.parentNode === that.ownerElement.$.content) {\n                                boundProperty.value = that.ownerElement.$.html !== '' ? that.ownerElement.$.html : undefined;\n                                that.ownerElement.innerHTML = '';\n                            }\n\n                            return { 'textContent': boundProperty };\n                        }\n                    }\n\n                    return undefined;\n                }(node);\n\n                if (boundData) {\n                    map.data = boundData;\n                }\n\n                if (node.getAttribute) {\n                    map.nodeId = node.getAttribute('jqx-id');\n                }\n\n                map.node = node;\n\n                if (node.firstChild) {\n                    map.children = {};\n                }\n\n                for (var child = node.firstChild; child; child = child.nextSibling) {\n                    map.children[index++] = that.getBindings(child);\n                }\n\n                return map;\n            }\n\n            /**\r\n             * Parses the element's attributes.\r\n             * @param {HTMLElement} - html element.\r\n             * @return {Array<BindingData>}\r\n             */\n\n        }, {\n            key: 'parseAttributes',\n            value: function parseAttributes(htmlElement) {\n                var that = this;\n\n                var boundProperties = undefined;\n\n                for (var i = 0; i < htmlElement.attributes.length; i++) {\n                    var attribute = htmlElement.attributes[i];\n                    var attributeName = attribute.name;\n                    var attributeValue = attribute.value;\n                    if (!BindingModule.cache['toCamelCase' + attributeName]) {\n                        BindingModule.cache['toCamelCase' + attributeName] = Utilities.Core.toCamelCase(attributeName);\n                    }\n\n                    var propertyName = BindingModule.cache['toCamelCase' + attributeName];\n\n                    if (attributeName.indexOf('(') >= 0) {\n                        var eventName = attributeName.substring(1, attributeName.length - 1);\n                        that.ownerElement.templateListeners[htmlElement.getAttribute('jqx-id') + '.' + eventName] = attributeValue;\n                        htmlElement.removeAttribute(attributeName);\n                        continue;\n                    }\n\n                    var boundProperty = that.parseProperty(attributeValue, attributeName, htmlElement);\n                    if (!boundProperty) {\n                        continue;\n                    }\n\n                    if (!boundProperties) {\n                        boundProperties = {};\n                    }\n\n                    boundProperties[propertyName] = boundProperty;\n                }\n\n                return boundProperties;\n            }\n\n            /**\r\n             * Parses a property.\r\n             * @param {String} - The string to parse.\r\n             * @param {name} - property's name.\r\n             * @param {Node} - the node.\r\n             * @return {BindingData}\r\n             */\n\n        }, {\n            key: 'parseProperty',\n            value: function parseProperty(text, name, node) {\n                if (!text || !text.length) return;\n\n                var that = this;\n\n                var boundProperty = void 0;\n                var length = text.length;\n                var startIndex = 0,\n                    lastIndex = 0,\n                    endIndex = 0;\n                var twoWay = true;\n\n                while (lastIndex < length) {\n                    startIndex = text.indexOf('{{', lastIndex);\n                    var twoWayStart = text.indexOf('[[', lastIndex);\n                    var terminator = '}}';\n\n                    if (twoWayStart >= 0 && (startIndex < 0 || twoWayStart < startIndex)) {\n                        startIndex = twoWayStart;\n                        twoWay = false;\n                        terminator = ']]';\n                    }\n\n                    endIndex = startIndex < 0 ? -1 : text.indexOf(terminator, startIndex + 2);\n\n                    if (endIndex < 0) {\n                        return;\n                    }\n\n                    boundProperty = boundProperty || {};\n                    var pathString = text.slice(startIndex + 2, endIndex).trim();\n                    var attributeName = pathString;\n\n                    if (twoWay) {\n                        (function () {\n                            var updateToken = function updateToken(value) {\n                                boundProperty.value = value;\n\n                                if (node.$ && node.$.isNativeElement) {\n\n                                    if (!BindingModule.cache['toDash' + name]) {\n                                        BindingModule.cache['toDash' + name] = Utilities.Core.toDash(name);\n                                    }\n\n                                    var _attributeName = BindingModule.cache['toDash' + name];\n                                    var oldValue = node.$.getAttributeValue(_attributeName, boundProperty.type);\n\n                                    if (oldValue !== boundProperty.value) {\n                                        node.$.setAttributeValue(_attributeName, boundProperty.value, boundProperty.type);\n                                    }\n                                }\n                            };\n\n                            if (pathString.indexOf('::') >= 0) {\n                                var eventIndex = pathString.indexOf('::');\n                                var eventName = pathString.substring(eventIndex + 2);\n\n                                that.ownerElement['$' + node.getAttribute('jqx-id')].listen(eventName, function () {\n                                    updateToken(node[name]);\n\n                                    var boundPropertyName = boundProperty.name.substring(0, boundProperty.name.indexOf('::'));\n                                    that.updateBoundProperty(boundPropertyName, boundProperty);\n                                });\n                            }\n\n                            if (node instanceof window.JQX.BaseElement) {\n                                if (!BindingModule.cache['toDash' + name]) {\n                                    BindingModule.cache['toDash' + name] = Utilities.Core.toDash(name);\n                                }\n\n                                var _attributeName2 = BindingModule.cache['toDash' + name];\n                                var _propertyName = Utilities.Core.toCamelCase(_attributeName2);\n\n                                if (node._properties[_propertyName]) {\n                                    node._properties[_propertyName].notify = true;\n                                }\n\n                                that.ownerElement['$' + node.getAttribute('jqx-id')].listen(_attributeName2 + '-changed', function (event) {\n                                    var detail = event.detail;\n\n                                    updateToken(detail.value);\n                                    that.updateBoundProperty(name, boundProperty);\n                                });\n                            }\n                        })();\n                    }\n\n                    boundProperty.name = attributeName;\n                    lastIndex = endIndex + 2;\n                }\n\n                var propertyName = boundProperty.name;\n                var elementProperty = that.ownerElement._properties[propertyName];\n\n                boundProperty.twoWay = twoWay;\n                boundProperty.ready = false;\n                that.ownerElement.boundProperties[propertyName] = true;\n\n                if (elementProperty) {\n                    boundProperty.type = elementProperty.type;\n                    boundProperty.reflectToAttribute = elementProperty.reflectToAttribute;\n                } else {\n                    boundProperty.type = 'string';\n                    boundProperty.reflectToAttribute = true;\n                }\n\n                return boundProperty;\n            }\n\n            /**\r\n             * Updates element's data bound nodes.\r\n             */\n\n        }, {\n            key: 'updateTextNodes',\n            value: function updateTextNodes() {\n                var that = this;\n\n                that.updateTextNode(that.ownerElement.shadowRoot || that.ownerElement, that.ownerElement.bindings, that.ownerElement);\n            }\n\n            /**\r\n             * Updates a data bound node.\r\n             * @param {Node} - The bound node.\r\n             * @param {Array<BindingData>} - The node's binding data.\r\n             * @param {Element} - The element to be updated.\r\n             */\n\n        }, {\n            key: 'updateTextNode',\n            value: function updateTextNode(node, bindings, element) {\n                var that = this;\n\n                if (!bindings) {\n                    return;\n                }\n\n                var index = 0;\n                for (var child = node.firstChild; child; child = child.nextSibling) {\n                    if (!bindings.children) {\n                        break;\n                    }\n\n                    that.updateTextNode(child, bindings.children[index++], element);\n                }\n\n                if (!bindings || !bindings.data) {\n                    return;\n                }\n\n                for (var name in bindings.data) {\n                    var boundProperty = bindings.data[name];\n                    var boundPropertyName = boundProperty.name;\n\n                    if (name !== 'textContent' || !boundProperty.twoWay || boundProperty.updating || boundProperty.value === undefined) {\n                        continue;\n                    }\n\n                    element[boundPropertyName] = boundProperty.value;\n                }\n            }\n\n            /**\r\n             * Updates a data bound property.\r\n             * @param {String} - The propery's name.\r\n             * @param {Object} - The property's value.\r\n             */\n\n        }, {\n            key: 'updateBoundProperty',\n            value: function updateBoundProperty(propertyName, propertyConfig) {\n                if (propertyConfig.updating) {\n                    return;\n                }\n\n                var that = this;\n                var element = that.ownerElement;\n\n                propertyConfig.updating = true;\n                element[propertyName] = propertyConfig.value;\n                propertyConfig.updating = false;\n            }\n\n            /**\r\n             * Updates element's data bound nodes.\r\n             */\n\n        }, {\n            key: 'updateBoundNodes',\n            value: function updateBoundNodes(propertyName) {\n                var that = this;\n\n                that.updateBoundNode(that.ownerElement.shadowRoot || that.ownerElement, that.ownerElement.bindings, that.ownerElement, propertyName);\n                if (that.ownerElement.detachedChildren.length > 0) {\n                    var _loop = function _loop(i) {\n                        var node = that.ownerElement.detachedChildren[i];\n                        var jqxId = node.getAttribute('jqx-id');\n\n                        var getBindings = function getBindings(bindings) {\n                            if (bindings.nodeId === jqxId) {\n                                return bindings;\n                            }\n\n                            for (var index in bindings.children) {\n                                var _node = bindings.children[index];\n                                var attribute = _node.getAttribute ? _node.getAttribute('jqx-id') : '';\n\n                                if (attribute === jqxId) {\n                                    return bindings;\n                                }\n\n                                if (_node.children) {\n                                    var result = getBindings(_node);\n                                    if (result) {\n                                        return result;\n                                    }\n                                }\n                            }\n\n                            return null;\n                        };\n\n                        var bindings = getBindings(that.ownerElement.bindings);\n\n                        if (bindings) {\n                            that.updateBoundNode(node, bindings, that.ownerElement, propertyName, true);\n                        }\n                    };\n\n                    for (var i = 0; i < that.ownerElement.detachedChildren.length; i++) {\n                        _loop(i);\n                    }\n                }\n            }\n\n            /**\r\n             * Updates a data bound node.\r\n             * @param {Node} - The bound node.\r\n             * @param {Array<BindingData>} - The node's binding data.\r\n             * @param {Element} - The element to be updated.\r\n             */\n\n        }, {\n            key: 'updateBoundNode',\n            value: function updateBoundNode(node, bindings, element, propertyName, detached) {\n                var that = this;\n\n                if (!bindings) {\n                    return;\n                }\n\n                var index = 0;\n                if (!detached) {\n                    for (var child = node.firstChild; child; child = child.nextSibling) {\n                        if (!bindings.children) {\n                            break;\n                        }\n\n                        that.updateBoundNode(child, bindings.children[index++], element, propertyName);\n                    }\n                }\n\n                if (!bindings || !bindings.data) {\n                    return;\n                }\n\n                var _loop2 = function _loop2(name) {\n                    var boundProperty = bindings.data[name];\n                    var boundPropertyName = boundProperty.name;\n                    if (boundProperty.updating) {\n                        return 'continue';\n                    }\n\n                    if (propertyName !== undefined && propertyName !== boundPropertyName) {\n                        return 'continue';\n                    }\n\n                    boundProperty.value = element[boundPropertyName];\n\n                    if (boundPropertyName === 'innerHTML') {\n                        if (node[name].toString().trim() !== element[boundPropertyName].toString().trim()) {\n                            if (boundProperty.ready) {\n                                node[name] = boundProperty.value.toString().trim();\n                            } else if (element._properties[boundPropertyName].defaultValue !== boundProperty.value) {\n                                node[name] = boundProperty.value.toString().trim();\n                            }\n                        }\n                    } else {\n                        node[name] = boundProperty.value;\n                    }\n\n                    if (node.$ && node.$.isNativeElement) {\n                        if (!BindingModule.cache['toDash' + name]) {\n                            BindingModule.cache['toDash' + name] = Utilities.Core.toDash(name);\n                        }\n\n                        var attributeName = BindingModule.cache['toDash' + name];\n                        var oldValue = node.$.getAttributeValue(attributeName, boundProperty.type);\n                        if (boundProperty.reflectToAttribute && (oldValue !== boundProperty.value || !boundProperty.ready)) {\n                            node.$.setAttributeValue(attributeName, boundProperty.value, boundProperty.type);\n                        }\n                        if (!boundProperty.reflectToAttribute) {\n                            node.$.setAttributeValue(attributeName, null, boundProperty.type);\n                        }\n                    }\n\n                    if (!boundProperty.ready) {\n                        if (node instanceof window.JQX.BaseElement) {\n                            var propertyConfig = node._properties[name];\n\n                            propertyConfig.isUpdating = true;\n\n                            if (boundProperty.reflectToAttribute) {\n                                node.$.setAttributeValue(propertyConfig.attributeName, boundProperty.value, boundProperty.type);\n                            }\n\n                            if (!boundProperty.reflectToAttribute) {\n                                node.$.setAttributeValue(propertyConfig.attributeName, null, boundProperty.type);\n                            }\n\n                            propertyConfig.isUpdating = false;\n                        }\n\n                        if (boundProperty.twoWay) {\n                            var updateToken = function updateToken(value) {\n                                boundProperty.value = value;\n\n                                if (node.$ && node.$.isNativeElement) {\n                                    if (!BindingModule.cache['toDash' + name]) {\n                                        BindingModule.cache['toDash' + name] = Utilities.Core.toDash(name);\n                                    }\n\n                                    var _attributeName3 = BindingModule.cache['toDash' + name];\n                                    var _oldValue = node.$.getAttributeValue(_attributeName3, boundProperty.type);\n\n                                    if (boundProperty.reflectToAttribute && _oldValue !== boundProperty.value) {\n                                        node.$.setAttributeValue(_attributeName3, boundProperty.value, boundProperty.type);\n                                    }\n                                    if (!boundProperty.reflectToAttribute) {\n                                        node.$.setAttributeValue(_attributeName3, null, boundProperty.type);\n                                    }\n                                }\n                            };\n\n                            if (boundProperty.name.indexOf('::') >= 0) {\n                                var eventIndex = boundProperty.name.indexOf('::');\n                                var eventName = boundProperty.name.substring(eventIndex + 2);\n\n                                that.ownerElement['$' + node.getAttribute('jqx-id')].listen(eventName, function () {\n                                    updateToken(node[name]);\n                                    that.updateBoundProperty(name, boundProperty);\n                                });\n                            }\n\n                            if (node instanceof window.JQX.BaseElement) {\n                                if (!BindingModule.cache['toDash' + name]) {\n                                    BindingModule.cache['toDash' + name] = Utilities.Core.toDash(name);\n                                }\n\n                                var _attributeName4 = BindingModule.cache['toDash' + name];\n\n                                that.ownerElement['$' + node.getAttribute('jqx-id')].listen(_attributeName4 + '-changed', function (event) {\n                                    var detail = event.detail;\n                                    updateToken(detail.value);\n                                    that.updateBoundProperty(name, boundProperty);\n                                });\n                            }\n                        }\n                    }\n\n                    boundProperty.ready = true;\n                };\n\n                for (var name in bindings.data) {\n                    var _ret3 = _loop2(name);\n\n                    if (_ret3 === 'continue') continue;\n                }\n            }\n        }], [{\n            key: 'clearCache',\n            value: function clearCache() {\n                var that = this;\n\n                that.cache = {};\n            }\n        }, {\n            key: 'moduleName',\n            get: function get() {\n                return 'BindingModule';\n            }\n        }]);\n        return BindingModule;\n    }();\n\n    /** This is a class with utility methods for determing the type of a value. */\n\n\n    var Types = function () {\n        function Types() {\n            babelHelpers.classCallCheck(this, Types);\n        }\n\n        babelHelpers.createClass(Types, null, [{\n            key: 'isBoolean',\n\n            /**\r\n             * Determines whether a value is Boolean. \r\n             * @param {Object}.\r\n             * @return {Boolean}.\r\n             */\n            value: function isBoolean(value) {\n                return typeof value === 'boolean';\n            }\n\n            /**\r\n             * Determines whether a value is Function. \r\n             * @param {Object}.\r\n             * @return {Boolean}.\r\n             */\n\n        }, {\n            key: 'isFunction',\n            value: function isFunction(value) {\n                return !!(value && value.constructor && value.call && value.apply);\n            }\n\n            /**\r\n             * Determines whether a value is Array. \r\n             * @param {Object}.\r\n             * @return {Boolean}.\r\n             */\n\n        }, {\n            key: 'isArray',\n            value: function isArray(value) {\n                return Array.isArray(value);\n            }\n\n            /**\r\n             * Determines whether a value is Object. \r\n             * @param {Object}.\r\n             * @return {Boolean}.\r\n             */\n\n        }, {\n            key: 'isObject',\n            value: function isObject(value) {\n                var that = this;\n\n                return value && ((typeof value === 'undefined' ? 'undefined' : babelHelpers.typeof(value)) === 'object' || that.isFunction(value)) || false;\n            }\n\n            /**\r\n             * Determines whether a value is Date. \r\n             * @param {Object}.\r\n             * @return {Boolean}.\r\n             */\n\n        }, {\n            key: 'isDate',\n            value: function isDate(value) {\n                return value instanceof Date;\n            }\n\n            /**\r\n             * Determines whether a value is String. \r\n             * @param {Object}.\r\n             * @return {Boolean}.\r\n             */\n\n        }, {\n            key: 'isString',\n            value: function isString(value) {\n                return typeof value === 'string';\n            }\n\n            /**\r\n             * Determines whether a value is Number. \r\n             * @param {Object}.\r\n             * @return {Boolean}.\r\n             */\n\n        }, {\n            key: 'isNumber',\n            value: function isNumber(value) {\n                return typeof value === 'number';\n            }\n\n            /**\r\n             * Determines the type of an object.\r\n             * @param {Object}.\r\n             * @return {String} The value's type or undefined, if the type is unknown.\r\n             */\n\n        }, {\n            key: 'getType',\n            value: function getType(value) {\n                var that = this;\n\n                var types = ['Boolean', 'Number', 'String', 'Function', 'Array', 'Date', 'Object'];\n                var type = types.find(function (type) {\n                    if (that['is' + type](value)) {\n                        return type;\n                    }\n                });\n\n                return type ? type.toLowerCase() : undefined;\n            }\n        }]);\n        return Types;\n    }();\n\n    /** This is a class with utility methods. */\n\n\n    var Core = function () {\n        function Core() {\n            babelHelpers.classCallCheck(this, Core);\n        }\n\n        babelHelpers.createClass(Core, null, [{\n            key: 'toCamelCase',\n            value: function toCamelCase(value) {\n                return value.replace(/-([a-z])/g, function (g) {\n                    return g[1].toUpperCase();\n                });\n            }\n        }, {\n            key: 'toDash',\n            value: function toDash(value) {\n                return value.split(/(?=[A-Z])/).join('-').toLowerCase();\n            }\n        }, {\n            key: 'escapeHTML',\n            value: function escapeHTML(value) {\n                var entityMap = { '&': '&amp;', '<': '&lt;', '>': '&gt;', '\"': '&quot;', '\\'': '&#39;', '/': '&#x2F;', '`': '&#x60;', '=': '&#x3D;' };\n\n                return String(value).replace(/[&<>\"'`=\\/]/g, function (s) {\n                    return entityMap[s];\n                });\n            }\n        }, {\n            key: 'CSSVariablesSupport',\n            value: function CSSVariablesSupport() {\n                return window.CSS && window.CSS.supports && window.CSS.supports('--fake-var', 0);\n            }\n        }, {\n            key: 'assign',\n            value: function assign(target, source) {\n                var _this = this;\n\n                var isObject = function isObject(item) {\n                    return item && (typeof item === 'undefined' ? 'undefined' : babelHelpers.typeof(item)) === 'object' && !Array.isArray(item) && item !== null;\n                };\n\n                var output = Object.assign({}, target);\n                if (isObject(target) && isObject(source)) {\n                    Object.keys(source).forEach(function (key) {\n                        if (isObject(source[key])) {\n                            if (!(key in target)) {\n                                Object.assign(output, babelHelpers.defineProperty({}, key, source[key]));\n                            } else {\n                                output[key] = _this.assign(target[key], source[key]);\n                            }\n                        } else {\n                            Object.assign(output, babelHelpers.defineProperty({}, key, source[key]));\n                        }\n                    });\n                }\n\n                return output;\n            }\n        }, {\n            key: 'html',\n            value: function html(node, htmlString) {\n                var that = this;\n\n                var output = '';\n                var nodes = node.childNodes;\n\n                if (htmlString) {\n                    var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi;\n\n                    node.innerHTML = htmlString.replace(rxhtmlTag, '<$1></$2>');\n                    return;\n                }\n\n                for (var i = 0, l = nodes.length, child; i < l && (child = nodes[i]); i++) {\n                    var miscElements = ['strong'];\n\n                    if (child instanceof HTMLElement || child.tagName && miscElements.indexOf(child.tagName.toLowerCase()) >= 0) {\n                        var tagName = child.tagName.toLowerCase();\n                        var attrs = child.attributes;\n\n                        var nodeOutput = '<' + tagName;\n\n                        for (var j = 0, attr; attr = attrs[j]; j++) {\n                            nodeOutput += ' ' + attr.name + '=\"' + attr.value.replace(/[&\\u00A0\"]/g, Utilities.Core.escapeHTML) + '\"';\n                        }\n\n                        nodeOutput += '>';\n\n                        var voidElements = ['area', 'base', 'br', 'col', 'command', 'embed', 'hr', 'img', 'input', 'keygen', 'link', 'meta', 'param', 'source', 'track', 'wbr'];\n\n                        if (voidElements[tagName]) {\n                            output += nodeOutput;\n                        }\n\n                        output = output + nodeOutput + that.html(child) + '</' + tagName + '>';\n                    } else {\n                        output += child.data.replace(/[&\\u00A0<>]/g, Utilities.Core.escapeHTML);\n                    }\n                }\n                return output;\n            }\n        }, {\n            key: 'isMobile',\n            get: function get() {\n                var isMobile = /(iphone|ipod|ipad|android|iemobile|blackberry|bada)/.test(window.navigator.userAgent.toLowerCase());\n\n                return isMobile;\n            }\n        }]);\n        return Core;\n    }();\n\n    var styleObservedElements = [];\n\n    var StyleObserver = function () {\n        function StyleObserver() {\n            babelHelpers.classCallCheck(this, StyleObserver);\n        }\n\n        babelHelpers.createClass(StyleObserver, null, [{\n            key: 'watch',\n            value: function watch(element) {\n                styleObservedElements.push(element);\n\n                if (StyleObserver.interval) {\n                    clearInterval(StyleObserver.interval);\n                }\n\n                StyleObserver.interval = setInterval(function () {\n                    StyleObserver.observe();\n                }, 100);\n            }\n        }, {\n            key: 'observeElement',\n            value: function observeElement(element) {\n                var that = element;\n\n                var computedStyle = document.defaultView.getComputedStyle(that, null);\n                var canRaiseResize = true;\n                var styleProperties = ['paddingLeft', 'paddingRight', 'paddingTop', 'paddingBottom', 'borderLeftWidth', 'borderRightWidth', 'borderTopWidth', 'borderBottomWidth', 'display', 'visibility', 'font-size', 'font-family', 'font-style', 'font-weight'];\n\n                if (!that._styleInfo) {\n                    that._styleInfo = [];\n\n                    for (var i = 0; i < styleProperties.length; i++) {\n                        var styleProperty = styleProperties[i];\n\n                        that._styleInfo[styleProperty] = computedStyle[styleProperty];\n                    }\n\n                    return;\n                }\n\n                if (!element.isHidden) {\n                    if (computedStyle['display'] !== 'none') {\n                        if (element.offsetWidth === 0 || element.offsetHeight === 0) {\n                            element.isHidden = true;\n                        }\n                    }\n                }\n\n                if (element.isHidden) {\n                    element.visibilityChangedHandler();\n\n                    if (!element.isHidden) {\n                        canRaiseResize = false;\n                    } else {\n                        return;\n                    }\n                }\n\n                var changedStyleProperties = [];\n\n                for (var _i = 0; _i < styleProperties.length; _i++) {\n                    var _styleProperty = styleProperties[_i];\n\n                    if (that._styleInfo[_styleProperty] !== computedStyle[_styleProperty]) {\n                        changedStyleProperties[_styleProperty] = { oldValue: that._styleInfo[_styleProperty], value: computedStyle[_styleProperty] };\n                        changedStyleProperties.length++;\n                    }\n\n                    that._styleInfo[_styleProperty] = computedStyle[_styleProperty];\n                }\n\n                if (changedStyleProperties.length > 0) {\n                    that.$.fireEvent('styleChanged', {\n                        styleProperties: changedStyleProperties\n                    }, {\n                        bubbles: false,\n                        cancelable: true\n                    });\n\n                    if (changedStyleProperties['display'] && canRaiseResize) {\n                        that.$.fireEvent('resize', that, {\n                            bubbles: false,\n                            cancelable: true\n                        });\n                    }\n                }\n            }\n        }, {\n            key: 'observe',\n            value: function observe() {\n                for (var i = 0; i < styleObservedElements.length; i++) {\n                    var that = styleObservedElements[i];\n                    this.observeElement(that);\n                }\n            }\n        }, {\n            key: 'unwatch',\n            value: function unwatch(element) {\n                if (StyleObserver.interval) {\n                    clearInterval(StyleObserver.interval);\n                }\n\n                styleObservedElements = styleObservedElements.splice(styleObservedElements.indexOf(element), 1);\n\n                if (styleObservedElements.length > 0) {\n                    StyleObserver.interval = setInterval(function () {\n                        StyleObserver.observe();\n                    }, 100);\n                }\n            }\n        }]);\n        return StyleObserver;\n    }();\n\n    var inputEventTypes = ['resize', 'down', 'up', 'move', 'tap', 'taphold', 'swipeleft', 'swiperight', 'swipetop', 'swipebottom'];\n\n    /** This is a class which extends an element and adds custom input events to it. */\n\n    var InputEvents = function () {\n        function InputEvents(target) {\n            babelHelpers.classCallCheck(this, InputEvents);\n\n            var that = this;\n\n            that.target = target;\n            that.$target = new _Extend(target);\n            that.$document = new _Extend(document);\n            that.id = that.target === document ? '' : that.target.id || that.target.getAttribute('jqx-id');\n\n            var result = { handlers: {}, boundEventTypes: [], listen: that.listen.bind(that), unlisten: that.unlisten.bind(that) };\n\n            //The taphold delay. If this delay is passed then taphold event will be fired.\n            that.tapHoldDelay = 750;\n            //Defines the minimum swipe distance required by the plugin.\n            that.swipeMin = 10;\n            //Defines the maximum swipe distance. After it is passed the propagation of the event will be restored, therefore the scrolling will be available.\n            that.swipeMax = 5000;\n            //The swipe delay. After it is passed swipe event won't be fired.\n            that.swipeDelay = 1000;\n            //The taphold delay. If this delay is passed then taphold event will be fired.\n            that.tapHoldDelay = 750;\n\n            that.inputEventProperties = ['clientX', 'clientY', 'pageX', 'pageY', 'screenX', 'screenY'];\n\n            inputEventTypes.forEach(function (eventType) {\n                result[eventType] = function (handler) {\n                    result.handlers[eventType] = handler;\n                };\n\n                that[eventType] = function (event) {\n                    if (!result.handlers[event.type]) {\n                        if ((event.type === 'mousemove' || event.type === 'pointermove' || event.type === 'touchmove') && result.handlers['move']) {\n                            var moveEvent = that.createEvent(event, 'move');\n                            result.handlers['move'](moveEvent);\n                        }\n\n                        return true;\n                    }\n\n                    return result.handlers[event.type](event);\n                };\n            });\n\n            that.listen();\n\n            that.handlers = result.handlers;\n\n            return result;\n        }\n\n        babelHelpers.createClass(InputEvents, [{\n            key: 'listen',\n            value: function listen(eventType) {\n                var that = this;\n\n                if (eventType === 'resize') {\n                    if (!that.target.resizeTrigger && that.target !== document && that.target !== window) {\n                        var container = document.createElement('div');\n                        container.className = 'jqx-resize-trigger-container';\n                        container.innerHTML = '<div class=\"jqx-resize-trigger-container\">' + '<div class=\"jqx-resize-trigger\"></div>' + '</div>' + '<div class=\"jqx-resize-trigger-container\">' + '<div class=\"jqx-resize-trigger-shrink\"></div>' + '</div>';\n\n                        that.target.appendChild(container);\n                        that.target.resizeTrigger = container;\n\n                        var expand = container.childNodes[0];\n                        var expandChild = expand.childNodes[0];\n                        var shrink = container.childNodes[1];\n                        var reset = function reset() {\n                            expandChild.style.width = '100000px';\n                            expandChild.style.height = '100000px';\n\n                            expand.scrollLeft = 100000;\n                            expand.scrollTop = 100000;\n\n                            shrink.scrollLeft = 100000;\n                            shrink.scrollTop = 100000;\n                        };\n\n                        var dirty = void 0,\n                            requestAnimationFrameId = void 0,\n                            newWidth = void 0,\n                            newHeight = void 0;\n\n                        var lastWidth = that.target.offsetWidth;\n                        var lastHeight = that.target.offsetHeight;\n\n                        reset();\n\n                        that.target.resizeHandler = function () {\n                            if (!requestAnimationFrameId) {\n                                requestAnimationFrameId = requestAnimationFrame(function () {\n                                    requestAnimationFrameId = 0;\n                                    newWidth = that.target.offsetWidth;\n                                    newHeight = that.target.offsetHeight;\n                                    dirty = newWidth !== lastWidth || newHeight !== lastHeight;\n                                    if (that.target.requiresLayout) {\n                                        dirty = true;\n                                    }\n\n                                    if (!dirty) {\n                                        return;\n                                    }\n\n                                    lastWidth = newWidth;\n                                    lastHeight = newHeight;\n\n                                    var resizeEvent = new CustomEvent('resize', {\n                                        bubbles: false,\n                                        cancelable: true\n                                    });\n\n                                    that.resize(resizeEvent);\n\n                                    that.target.requiresLayout = false;\n                                });\n                            }\n\n                            reset();\n                        };\n\n                        expand.addEventListener('scroll', that.target.resizeHandler);\n                        shrink.addEventListener('scroll', that.target.resizeHandler);\n                    }\n                }\n\n                if (that.isListening) {\n                    return;\n                }\n\n                that.isListening = true;\n                that.isPressed = false;\n                that.isReleased = false;\n                that.isInBounds = false;\n\n                if (window.PointerEvent) {\n                    that.$target.listen('pointerdown.inputEvents' + that.id, that.pointerDown.bind(that));\n                    that.$target.listen('pointerup.inputEvents' + that.id, that.pointerUp.bind(that));\n                    that.$target.listen('pointermove.inputEvents' + that.id, that.pointerMove.bind(that));\n                    that.$target.listen('pointercancel.inputEvents' + that.id, that.pointerCancel.bind(that));\n                } else {\n                    var hasTouch = 'ontouchstart' in window;\n\n                    if (hasTouch) {\n                        that.$target.listen('touchmove.inputEvents' + that.id, that.touchMove.bind(that));\n                        that.$target.listen('touchstart.inputEvents' + that.id, that.touchStart.bind(that));\n                        that.$target.listen('touchend.inputEvents' + that.id, that.touchEnd.bind(that));\n                        that.$target.listen('touchcancel.inputEvents' + that.id, that.touchCancel.bind(that));\n                    }\n\n                    that.$target.listen('mousedown.inputEvents' + that.id, that.mouseDown.bind(that));\n                    that.$target.listen('mouseup.inputEvents' + that.id, that.mouseUp.bind(that));\n                    that.$target.listen('mousemove.inputEvents' + that.id, that.mouseMove.bind(that));\n                    that.$target.listen('mouseleave.inputEvents' + that.id, that.mouseLeave.bind(that));\n                }\n\n                that.$document.listen('mouseup.inputEvents' + that.id, that.handleDocumentUp.bind(that));\n            }\n        }, {\n            key: 'unlisten',\n            value: function unlisten(eventType) {\n                var that = this;\n\n                that.isListening = false;\n\n                if (window.PointerEvent) {\n                    that.$target.unlisten('pointerdown.inputEvents' + that.id);\n                    that.$target.unlisten('pointerup.inputEvents' + that.id);\n                    that.$target.unlisten('pointermove.inputEvents' + that.id);\n                    that.$target.unlisten('pointercancel.inputEvents' + that.id);\n                } else {\n                    var hasTouch = 'ontouchstart' in window;\n                    if (hasTouch) {\n                        that.$target.unlisten('touchstart.inputEvents' + that.id);\n                        that.$target.unlisten('touchmove.inputEvents' + that.id);\n                        that.$target.unlisten('touchend.inputEvents' + that.id);\n                        that.$target.unlisten('touchcancel.inputEvents' + that.id);\n                    }\n\n                    that.$target.unlisten('mousedown.inputEvents' + that.id);\n                    that.$target.unlisten('mouseup.inputEvents' + that.id);\n                    that.$target.unlisten('mousemove.inputEvents' + that.id);\n                    that.$target.unlisten('mouseleave.inputEvents' + that.id);\n                }\n\n                that.$document.unlisten('mouseup.inputEvents' + that.id, that.handleDocumentUp);\n\n                if (eventType === 'resize' && that.target.resizeTrigger) {\n                    var container = that.target.resizeTrigger;\n                    var expand = container.childNodes[0];\n                    var shrink = container.childNodes[1];\n\n                    expand.removeEventListener('scroll', that.target.resizeHandler);\n                    shrink.removeEventListener('scroll', that.target.resizeHandler);\n\n                    that.target.resizeHandler = null;\n                    that.target.removeChild(container);\n                    delete that.target.resizeTrigger;\n                }\n            }\n        }, {\n            key: 'handleDocumentUp',\n            value: function handleDocumentUp(event) {\n                var that = this;\n\n                that.isPressed = false;\n                that.isReleased = false;\n                that.resetSwipe(event);\n            }\n        }, {\n            key: 'createEvent',\n            value: function createEvent(event, eventType) {\n                var that = this;\n                var touches = event.touches;\n                var changedTouches = event.changedTouches;\n                var touch = touches && touches.length ? touches[0] : changedTouches && changedTouches.length ? changedTouches[0] : undefined;\n                var customEvent = new CustomEvent(eventType, {\n                    bubbles: true,\n                    cancelable: true\n                });\n                customEvent.originalEvent = event;\n                if (touch) {\n                    for (var j = 0; j < that.inputEventProperties.length; j++) {\n                        var key = that.inputEventProperties[j];\n\n                        customEvent[key] = touch[key];\n                    }\n\n                    return customEvent;\n                }\n\n                for (var _key in event) {\n                    if (!(_key in customEvent)) {\n                        customEvent[_key] = event[_key];\n                    }\n                }\n\n                return customEvent;\n            }\n        }, {\n            key: 'fireTap',\n            value: function fireTap(event) {\n                var that = this;\n\n                clearTimeout(this.tapHoldTimeout);\n                if (!this.tapHoldFired && this.isInBounds) {\n                    var tap = that.createEvent(event, 'tap');\n                    that.tap(tap);\n                }\n            }\n        }, {\n            key: 'initTap',\n            value: function initTap(event) {\n                var that = this;\n\n                that.isInBounds = true;\n                that.tapHoldFired = false;\n                that.tapHoldTimeout = setTimeout(function () {\n                    if (that.isInBounds) {\n                        that.tapHoldFired = true;\n                        var taphold = that.createEvent(event, 'taphold');\n                        that.taphold(taphold);\n                    }\n                }, that.tapHoldDelay);\n            }\n        }, {\n            key: 'pointerDown',\n            value: function pointerDown(event) {\n                var that = this;\n\n                return that.handleDown(event);\n            }\n        }, {\n            key: 'mouseDown',\n            value: function mouseDown(event) {\n                var that = this;\n\n                if (that.isPressed || that.touchStartTime && new Date() - that.touchStartTime < 500) {\n                    return;\n                }\n\n                return that.handleDown(event);\n            }\n        }, {\n            key: 'touchStart',\n            value: function touchStart(event) {\n                var that = this;\n\n                that.touchStartTime = new Date();\n                that.isTouchMoved = true;\n\n                return that.handleDown(event);\n            }\n        }, {\n            key: 'mouseUp',\n            value: function mouseUp(event) {\n                var that = this;\n\n                if (that.isReleased || that.touchEndTime && new Date() - that.touchEndTime < 500) {\n                    return;\n                }\n\n                return that.handleUp(event);\n            }\n        }, {\n            key: 'handleDown',\n            value: function handleDown(event) {\n                var that = this;\n\n                that.isReleased = false;\n                that.isPressed = true;\n\n                var down = that.createEvent(event, 'down');\n\n                if (that.handlers['tap'] || that.handlers['taphold']) {\n                    that.initTap(down);\n                }\n\n                if (that.handlers['swipeleft'] || that.handlers['swiperight'] || that.handlers['swipetop'] || that.handlers['swipebottom']) {\n                    that.initSwipe(down);\n                }\n\n                return that.down(down);\n            }\n        }, {\n            key: 'handleUp',\n            value: function handleUp(event) {\n                var that = this;\n\n                that.isReleased = true;\n                that.isPressed = false;\n\n                var up = that.createEvent(event, 'up');\n                var result = that.up(up);\n\n                if (that.handlers['tap'] || that.handlers['taphold']) {\n                    that.fireTap(up);\n                }\n\n                that.resetSwipe(up);\n\n                return result;\n            }\n        }, {\n            key: 'handleMove',\n            value: function handleMove(event) {\n                var that = this;\n\n                var eventResult = that.move(event);\n\n                if (that.isPressed) {\n                    that._maxSwipeVerticalDistance = Math.max(that._maxSwipeVerticalDistance, Math.abs(that._startY - event.pageY));\n                    that._maxSwipeHorizontalDistance = Math.max(that._maxSwipeHorizontalDistance, Math.abs(that._startX - event.pageX));\n                    eventResult = that.handleSwipeEvents(event);\n                }\n\n                return eventResult;\n            }\n        }, {\n            key: 'touchEnd',\n            value: function touchEnd(event) {\n                var that = this;\n\n                that.touchEndTime = new Date();\n                return that.handleUp(event);\n            }\n        }, {\n            key: 'pointerUp',\n            value: function pointerUp(event) {\n                var that = this;\n\n                return that.handleUp(event);\n            }\n        }, {\n            key: 'pointerCancel',\n            value: function pointerCancel(event) {\n                var that = this;\n\n                that.pointerUp(event);\n            }\n        }, {\n            key: 'touchCancel',\n            value: function touchCancel(event) {\n                var that = this;\n\n                that.touchEnd(event);\n            }\n        }, {\n            key: 'mouseLeave',\n            value: function mouseLeave() {\n                var that = this;\n\n                that.isInBounds = false;\n            }\n        }, {\n            key: 'mouseMove',\n            value: function mouseMove(event) {\n                var that = this;\n\n                if (that.isTouchMoved) {\n                    return;\n                }\n\n                return that.handleMove(event);\n            }\n        }, {\n            key: 'pointerMove',\n            value: function pointerMove(event) {\n                var that = this;\n\n                return that.handleMove(event);\n            }\n        }, {\n            key: 'touchMove',\n            value: function touchMove(event) {\n                var that = this;\n                var touches = event.touches;\n                var changedTouches = event.changedTouches;\n                var touch = touches && touches.length ? touches[0] : changedTouches && changedTouches.length ? changedTouches[0] : undefined;\n\n                for (var j = 0; j < that.inputEventProperties.length; j++) {\n                    var key = that.inputEventProperties[j];\n\n                    if (event[key] === undefined) {\n                        event[key] = touch[key];\n                    }\n                }\n\n                that.isTouchMoved = true;\n\n                return that.handleMove(event);\n            }\n        }, {\n            key: 'handleSwipeEvents',\n            value: function handleSwipeEvents(event) {\n                var that = this;\n\n                var eventResult = true;\n\n                if (that.handlers['swipetop'] || that.handlers['swipebottom']) {\n                    eventResult = this.handleVerticalSwipeEvents(event);\n                }\n\n                if (eventResult === false) {\n                    return eventResult;\n                }\n\n                if (that.handlers['swipeleft'] || that.handlers['swiperight']) {\n                    eventResult = this.handleHorizontalSwipeEvents(event);\n                }\n\n                return eventResult;\n            }\n        }, {\n            key: 'handleVerticalSwipeEvents',\n            value: function handleVerticalSwipeEvents(event) {\n                var current = void 0,\n                    diff = void 0;\n                current = event.pageY;\n                diff = current - this._startY;\n\n                return this.swiped(event, diff, 'vertical');\n            }\n        }, {\n            key: 'handleHorizontalSwipeEvents',\n            value: function handleHorizontalSwipeEvents(event) {\n                var current = void 0,\n                    diff = void 0;\n                current = event.pageX;\n                diff = current - this._startX;\n\n                return this.swiped(event, diff, 'horizontal');\n            }\n        }, {\n            key: 'swiped',\n            value: function swiped(event, diff, direction) {\n                var that = this;\n\n                direction = direction || 0;\n                if (Math.abs(diff) >= that.swipeMin && !that._swipeEvent && !that._swipeLocked) {\n                    var eventType = diff < 0 ? 'swipeleft' : 'swiperight';\n                    if (direction === 'horizontal') {\n                        that._swipeEvent = that.createEvent(event, eventType);\n                    } else {\n                        eventType = diff < 0 ? 'swipetop' : 'swipebottom';\n                        that._swipeEvent = that.createEvent(event, diff < 0 ? 'swipetop' : 'swipebottom');\n                    }\n\n                    if (that[eventType]) {\n                        that[eventType](this._swipeEvent);\n                        if (Math.abs(diff) <= this.swipeMax) {\n                            event.stopImmediatePropagation();\n                            return false;\n                        }\n                    }\n                }\n\n                return true;\n            }\n        }, {\n            key: 'resetSwipe',\n            value: function resetSwipe() {\n                var that = this;\n\n                that._swipeEvent = null;\n                clearTimeout(this._swipeTimeout);\n            }\n        }, {\n            key: 'initSwipe',\n            value: function initSwipe(event) {\n                var that = this;\n\n                that._maxSwipeVerticalDistance = 0;\n                that._maxSwipeHorizontalDistance = 0;\n                that._startX = event.pageX;\n                that._startY = event.pageY;\n                that._swipeLocked = false;\n                that._swipeEvent = null;\n                that._swipeTimeout = setTimeout(function () {\n                    that._swipeLocked = true;\n                }, that.swipeDelay);\n            }\n        }]);\n        return InputEvents;\n    }();\n\n    var Scroll = function () {\n        babelHelpers.createClass(Scroll, [{\n            key: 'scrollWidth',\n            get: function get() {\n                var that = this;\n\n                if (that.horizontalScrollBar) {\n                    return that.horizontalScrollBar.max;\n                }\n\n                return -1;\n            },\n            set: function set(value) {\n                var that = this;\n\n                if (value < 0) {\n                    value = 0;\n                }\n\n                if (that.horizontalScrollBar) {\n                    that.horizontalScrollBar.max = value;\n                }\n            }\n        }, {\n            key: 'scrollHeight',\n            get: function get() {\n                var that = this;\n\n                if (that.verticalScrollBar) {\n                    return that.verticalScrollBar.max;\n                }\n\n                return -1;\n            },\n            set: function set(value) {\n                var that = this;\n\n                if (value < 0) {\n                    value = 0;\n                }\n\n                if (that.verticalScrollBar) {\n                    that.verticalScrollBar.max = value;\n                }\n            }\n        }, {\n            key: 'scrollLeft',\n            get: function get() {\n                var that = this;\n\n                if (that.horizontalScrollBar) {\n                    return that.horizontalScrollBar.value;\n                }\n\n                return -1;\n            },\n            set: function set(value) {\n                var that = this;\n\n                if (value < 0) {\n                    value = 0;\n                }\n\n                if (that.horizontalScrollBar) {\n                    that.horizontalScrollBar.value = value;\n                }\n            }\n        }, {\n            key: 'scrollTop',\n            get: function get() {\n                var that = this;\n\n                if (that.verticalScrollBar) {\n                    return that.verticalScrollBar.value;\n                }\n\n                return -1;\n            },\n            set: function set(value) {\n                var that = this;\n\n                if (value < 0) {\n                    value = 0;\n                }\n\n                if (that.verticalScrollBar) {\n                    that.verticalScrollBar.value = value;\n                }\n            }\n        }, {\n            key: 'vScrollBar',\n            get: function get() {\n                var that = this;\n\n                return that.verticalScrollBar;\n            }\n        }, {\n            key: 'hScrollBar',\n            get: function get() {\n                var that = this;\n\n                return that.horizontalScrollBar;\n            }\n        }]);\n\n        function Scroll(container, horizontalScrollBar, verticalScrollBar) {\n            babelHelpers.classCallCheck(this, Scroll);\n\n            var that = this;\n            var isMobile = Core.isMobile;\n\n            that.inputEvents = new InputEvents(container);\n            that.horizontalScrollBar = horizontalScrollBar;\n            that.verticalScrollBar = verticalScrollBar;\n\n            var dragStarted = void 0,\n                rafId = void 0,\n                pointerCaptured = void 0,\n                timestamp = void 0,\n                ticker = void 0,\n                now = void 0,\n                elapsed = void 0,\n                timeConstant = 500,\n                currentScrollInfo = void 0;\n\n            var createScrollInfo = function createScrollInfo(scrollBar) {\n                return {\n                    amplitude: 0,\n                    delta: 0,\n                    initialValue: 0,\n                    min: 0,\n                    max: scrollBar.max,\n                    previousValue: 0,\n                    pointerPosition: 0,\n                    targetValue: 0,\n                    scrollBar: scrollBar,\n                    value: 0,\n                    velocity: 0\n                };\n            };\n\n            var hScrollInfo = createScrollInfo(horizontalScrollBar);\n            var vScrollInfo = createScrollInfo(verticalScrollBar);\n\n            var track = function track() {\n                now = Date.now();\n                elapsed = now - timestamp;\n                timestamp = now;\n\n                var updateScrollInfo = function updateScrollInfo(scrollInfo) {\n                    scrollInfo.delta = scrollInfo.value - scrollInfo.previousValue;\n                    scrollInfo.previousValue = scrollInfo.value;\n                    var velocity = 1000 * scrollInfo.delta / (1 + elapsed);\n                    scrollInfo.velocity = 0.8 * velocity + 0.2 * scrollInfo.velocity;\n                };\n\n                updateScrollInfo(vScrollInfo);\n                updateScrollInfo(hScrollInfo);\n            };\n\n            var scroll = function scroll(value) {\n                currentScrollInfo.value = value > currentScrollInfo.max ? currentScrollInfo.max : value < currentScrollInfo.min ? currentScrollInfo.min : value;\n                currentScrollInfo.scrollBar.value = currentScrollInfo.value;\n\n                return value > currentScrollInfo.max ? 'max' : value < currentScrollInfo.min ? 'min' : 'value';\n            };\n\n            function autoScroll() {\n                var elapsed, delta;\n                if (currentScrollInfo.amplitude) {\n                    elapsed = Date.now() - timestamp;\n                    delta = -currentScrollInfo.amplitude * Math.exp(-elapsed / timeConstant);\n                    if (delta > 5 || delta < -5) {\n                        scroll(currentScrollInfo.targetValue + delta);\n                        cancelAnimationFrame(rafId);\n                        rafId = 0;\n                        rafId = requestAnimationFrame(autoScroll);\n                    } else {\n                        scroll(currentScrollInfo.targetValue);\n                    }\n                }\n            }\n\n            that.inputEvents['down'](function (event) {\n                if (!isMobile) {\n                    return;\n                }\n\n                pointerCaptured = true;\n                dragStarted = false;\n\n                var updateScrollInfo = function updateScrollInfo(scrollInfo, pointerPosition) {\n                    scrollInfo.amplitude = 0;\n                    scrollInfo.pointerPosition = pointerPosition;\n                    scrollInfo.previousValue = scrollInfo.value;\n                    scrollInfo.value = scrollInfo.scrollBar.value;\n                    scrollInfo.initialValue = scrollInfo.value;\n                    scrollInfo.max = scrollInfo.scrollBar.max;\n                };\n\n                updateScrollInfo(vScrollInfo, event.clientY);\n                updateScrollInfo(hScrollInfo, event.clientX);\n\n                timestamp = Date.now();\n                clearInterval(ticker);\n                ticker = setInterval(track, timeConstant);\n            });\n\n            that.inputEvents['up'](function () {\n                if (!pointerCaptured) {\n                    return true;\n                }\n\n                clearInterval(ticker);\n\n                var startScroll = function startScroll(scrollInfo) {\n                    currentScrollInfo = scrollInfo;\n                    scrollInfo.amplitude = 0.8 * scrollInfo.velocity;\n                    scrollInfo.targetValue = Math.round(scrollInfo.value + scrollInfo.amplitude);\n                    timestamp = Date.now();\n                    cancelAnimationFrame(rafId);\n                    rafId = requestAnimationFrame(autoScroll);\n                    scrollInfo.velocity = 0;\n                };\n\n                if (vScrollInfo.velocity > 10 || vScrollInfo.velocity < -10) {\n                    startScroll(vScrollInfo);\n                } else if (hScrollInfo.velocity > 10 || hScrollInfo.velocity < -10) {\n                    startScroll(hScrollInfo);\n                }\n\n                pointerCaptured = false;\n            });\n\n            that.inputEvents['move'](function (event) {\n                if (!pointerCaptured) {\n                    return true;\n                }\n\n                if (dragStarted) {\n                    event.originalEvent.preventDefault();\n                    event.originalEvent.stopPropagation();\n                }\n\n                hScrollInfo.visible = horizontalScrollBar.offsetHeight > 0;\n                vScrollInfo.visible = verticalScrollBar.offsetWidth > 0;\n\n                if (!pointerCaptured || !hScrollInfo.visible && !vScrollInfo.visible) {\n                    return;\n                }\n\n                vScrollInfo.ratio = -vScrollInfo.max / vScrollInfo.scrollBar.offsetHeight;\n                vScrollInfo.delta = (event.clientY - vScrollInfo.pointerPosition) * vScrollInfo.ratio;\n\n                hScrollInfo.ratio = -hScrollInfo.max / hScrollInfo.scrollBar.offsetWidth;\n                hScrollInfo.delta = (event.clientX - hScrollInfo.pointerPosition) * hScrollInfo.ratio;\n\n                var dragged = 'value';\n\n                var doDrag = function doDrag(scrollInfo, pointerPosition, event) {\n                    if (scrollInfo.delta > 5 || scrollInfo.delta < -5) {\n                        currentScrollInfo = scrollInfo;\n\n                        dragged = scrollInfo.initialValue + scrollInfo.delta > currentScrollInfo.max ? 'max' : scrollInfo.initialValue + scrollInfo.delta < currentScrollInfo.min ? 'min' : 'value';\n\n                        if (dragged === 'min' && scrollInfo.initialValue === 0) {\n                            return true;\n                        }\n\n                        if (dragged === 'max' && scrollInfo.initialValue === scrollInfo.max) {\n                            return true;\n                        }\n\n                        if (!scrollInfo.visible) {\n                            return true;\n                        }\n\n                        scroll(scrollInfo.initialValue + scrollInfo.delta);\n                        track();\n\n                        event.originalEvent.preventDefault();\n                        event.originalEvent.stopPropagation();\n                        dragStarted = true;\n\n                        return false;\n                    }\n\n                    return null;\n                };\n\n                var verticalDragResult = doDrag(vScrollInfo, event.clientY, event);\n                if (verticalDragResult === null) {\n                    var horizontalDragResult = doDrag(hScrollInfo, event.clientX, event);\n                    if (horizontalDragResult !== null) {\n                        return horizontalDragResult;\n                    }\n                } else {\n                    return verticalDragResult;\n                }\n            });\n\n            that.inputEvents.listen();\n        }\n\n        babelHelpers.createClass(Scroll, [{\n            key: 'unlisten',\n            value: function unlisten() {\n                var that = this;\n\n                if (that.inputEvents) {\n                    that.inputEvents.unlisten();\n                }\n\n                delete that.inputEvents;\n            }\n        }]);\n        return Scroll;\n    }();\n\n    /** This is a class which extends an element with utility methods. */\n\n\n    var _Extend = function () {\n        function Extend(element) {\n            babelHelpers.classCallCheck(this, Extend);\n\n            this.events = {};\n            this.handlers = {};\n            this.element = element;\n        }\n\n        /**\r\n         * Gets whether an element has a CSS Class. \r\n         * @param {String}.\r\n         */\n\n\n        babelHelpers.createClass(Extend, [{\n            key: 'hasClass',\n            value: function hasClass(className) {\n                var that = this;\n\n                if (that.element.className.indexOf) {\n                    return that.element.className.indexOf(className) >= 0;\n                }\n\n                return [].indexOf.call(that.element.classList, className) >= 0;\n            }\n\n            /**\r\n             * Adds a CSS Class to an element. \r\n             * @param {String}.\r\n             */\n\n        }, {\n            key: 'addClass',\n            value: function addClass(className) {\n                var _that$element$classLi;\n\n                var that = this;\n\n                if (that.hasClass(className)) {\n                    return;\n                }\n\n                (_that$element$classLi = that.element.classList).add.apply(_that$element$classLi, babelHelpers.toConsumableArray(className.split(' ')));\n\n                if (!that.isNativeElement) {\n                    StyleObserver.observeElement(that.element);\n                }\n            }\n\n            /**\r\n             * Removes a CSS Class from an element. \r\n             * @param {String}.\r\n             */\n\n        }, {\n            key: 'removeClass',\n            value: function removeClass(className) {\n                var _that$element$classLi2;\n\n                var that = this;\n\n                if (!that.hasClass(className)) {\n                    return;\n                }\n\n                (_that$element$classLi2 = that.element.classList).remove.apply(_that$element$classLi2, babelHelpers.toConsumableArray(className.split(' ')));\n                if (that.element.className === '') {\n                    that.element.removeAttribute('class');\n                }\n                if (!that.isNativeElement) {\n                    StyleObserver.observeElement(that.element);\n                }\n            }\n\n            /** Determines whether this element is native HTMLElement. */\n\n        }, {\n            key: 'dispatch',\n\n\n            /** \r\n             * Applies the event handlers.\r\n             * @param {Event} - event object.\r\n             */\n            value: function dispatch(event) {\n                var that = this;\n                var handleObjects = that.events[event.type];\n\n                for (var i = 0; i < handleObjects.length; i++) {\n                    var handleObject = handleObjects[i];\n                    event.namespace = handleObject.namespace;\n                    event.context = handleObject.context;\n\n                    if (event.defaultPrevented) {\n                        break;\n                    }\n\n                    var result = handleObject.handler.apply(that.element, [event]);\n\n                    if (result !== undefined) {\n                        event.result = result;\n\n                        if (result === false) {\n                            event.preventDefault();\n                            event.stopPropagation();\n                            break;\n                        }\n                    }\n                }\n\n                return event.result;\n            }\n\n            /** \r\n             * Fires a new event.\r\n             * @param {String} - event type.\r\n             * @param {Object} - event details.\r\n             * @param {Object} - event options.\r\n             */\n\n        }, {\n            key: 'fireEvent',\n            value: function fireEvent(eventType, detail, options) {\n                var that = this;\n\n                if (!options) {\n                    options = {\n                        bubbles: true,\n                        cancelable: true\n                    };\n                }\n                options.detail = detail || {};\n\n                var customEvent = new CustomEvent(eventType, options);\n                customEvent.originalStopPropagation = customEvent.stopPropagation;\n                customEvent.stopPropagation = function () {\n                    customEvent.isPropagationStopped = true;\n                    return customEvent.originalStopPropagation();\n                };\n\n                that.dispatchEvent(customEvent);\n\n                return customEvent;\n            }\n\n            /** \r\n            * Dispatches an event.\r\n            * @param {CustomEvent} - event.\r\n            */\n\n        }, {\n            key: 'dispatchEvent',\n            value: function dispatchEvent(customEvent) {\n                var that = this;\n                var eventType = customEvent.type;\n                var context = that.element.context;\n\n                that.element.context = document;\n\n                if (that.element['on' + eventType]) {\n                    that.element['on' + eventType](customEvent);\n                } else {\n                    that.element.dispatchEvent(customEvent);\n                }\n\n                that.element.context = context;\n            }\n\n            /** \r\n             * Adds an event listener.\r\n             * @param {String} - event types.\r\n             * @param {Function} - the event handler.\r\n             */\n\n        }, {\n            key: 'listen',\n            value: function listen(types, handler) {\n                var that = this;\n                var typesArray = types.split('.');\n                var namespace = typesArray.slice(1).join('.');\n                var eventType = typesArray[0];\n\n                if (!that.events[eventType]) {\n                    that.events[eventType] = [];\n                }\n\n                var handleObject = {\n                    type: eventType,\n                    handler: handler,\n                    context: that.element,\n                    namespace: namespace\n                };\n\n                if (inputEventTypes.indexOf(eventType) >= 0) {\n                    if (!that.inputEvents) {\n                        that.inputEvents = new InputEvents(that.element);\n                    }\n\n                    that.inputEvents[eventType](function (event) {\n                        that.dispatchEvent(event);\n                    });\n\n                    that.inputEvents.boundEventTypes.push(eventType);\n                    that.inputEvents.listen(eventType);\n                }\n\n                if (that.events[eventType].length === 0) {\n                    that.handlers[eventType] = that.dispatch.bind(that);\n                    that.element.addEventListener(eventType, that.handlers[eventType], false);\n                }\n\n                that.events[eventType].push(handleObject);\n            }\n\n            /** \r\n             * Removes an event listener.\r\n             * @param {String} - event types.\r\n             */\n\n        }, {\n            key: 'unlisten',\n            value: function unlisten(types) {\n                var that = this;\n                var typesArray = types.split('.');\n                var namespace = typesArray.slice(1).join('.');\n                var eventType = typesArray[0];\n\n                var handleObjects = that.events[eventType];\n\n                if (that.inputEvents && that.inputEvents.boundEventTypes.indexOf(eventType) >= 0) {\n                    that.inputEvents.boundEventTypes.splice(that.inputEvents.boundEventTypes.indexOf(eventType), 1);\n                    if (that.inputEvents.boundEventTypes.length === 0) {\n                        that.inputEvents.unlisten(eventType);\n                    }\n                }\n\n                if (!handleObjects) {\n                    return;\n                }\n\n                for (var i = 0; i < handleObjects.length; i++) {\n                    if (namespace !== '') {\n                        var index = handleObjects.findIndex(function (o) {\n                            return o.namespace === namespace;\n                        });\n                        handleObjects.splice(index, 1);\n                        break;\n                    } else {\n                        handleObjects = [];\n                    }\n                }\n                if (handleObjects.length === 0) {\n                    that.element.removeEventListener(eventType, that.handlers[eventType]);\n                    that.events[eventType] = [];\n                    delete that.handlers[eventType];\n                }\n            }\n\n            /** \r\n            * Gets the element's attribute value by using the property's value.\r\n            * @param {String} - attribute's name.\r\n            * @param {String} - property's type.\r\n            * @return {Object} The converted from String attribute value. \r\n            */\n\n        }, {\n            key: 'getAttributeValue',\n            value: function getAttributeValue(attributeName, type) {\n                var that = this;\n                var attributeString = that.element.getAttribute(attributeName);\n\n                if (that.isNativeElement) {\n                    return that.deserialize(attributeString, type);\n                }\n\n                var propertyConfig = that.element.propertyByAttributeName[attributeName];\n                var typedValue = propertyConfig.deserialize === undefined ? that.deserialize(attributeString, type, propertyConfig.nullable) : that.element[propertyConfig.deserialize](attributeString);\n\n                return typedValue;\n            }\n\n            /** \r\n             * Sets the element's attribute using the property's value.\r\n             * @param {String} - attribute's name.\r\n             * @param {Object} - property's value.\r\n             * @param {String} - property's type.\r\n             */\n\n        }, {\n            key: 'setAttributeValue',\n            value: function setAttributeValue(attributeName, value, type) {\n                var that = this;\n                var newAttributeValue = void 0;\n                var nullable = false;\n\n                if (!that.isNativeElement) {\n                    var propertyConfig = that.element.propertyByAttributeName[attributeName];\n\n                    nullable = propertyConfig.nullable;\n\n                    if (propertyConfig.serialize) {\n                        newAttributeValue = that.element[propertyConfig.serialize](value);\n                    } else {\n                        newAttributeValue = that.serialize(value, type, nullable);\n                    }\n                } else {\n                    newAttributeValue = that.serialize(value, type);\n                    if (type === 'boolean') {\n                        var booleans = ['checked', 'selected', 'async', 'autofocus', 'autoplay', 'controls', 'defer', 'disabled', 'hidden', 'ismap', 'loop', 'multiple', 'open', 'readonly', 'required', 'scoped'];\n                        if (booleans.indexOf(attributeName) >= 0) {\n                            if (!value) {\n                                that.element.removeAttribute(attributeName);\n                            } else {\n                                that.element.setAttribute(attributeName, '');\n                            }\n                            return;\n                        }\n                    }\n                }\n\n                if (type === 'array' || type === 'object') {\n                    if (newAttributeValue === '[]' || newAttributeValue === '{}') {\n                        that.element.removeAttribute(attributeName);\n                        return;\n                    }\n                }\n\n                if (newAttributeValue === undefined) {\n                    that.element.removeAttribute(attributeName);\n                } else {\n                    that.element.setAttribute(attributeName, newAttributeValue);\n                }\n            }\n\n            /** \r\n             * Converts a javascript value to string.\r\n             * @param {Object} the value to be converted.\r\n             * @return {String} The converted to String value. If the type is unknown, returns undefined.\r\n             */\n\n        }, {\n            key: 'serialize',\n            value: function serialize(value, type, nullable) {\n                if (type === undefined) {\n                    type = Utilities.Types.getType(value);\n                }\n\n                if (value === undefined || !nullable && value === null) {\n                    return undefined;\n                }\n\n                if (nullable && value === null) {\n                    return 'null';\n                }\n\n                if (type === 'string') {\n                    return Utilities.Core.escapeHTML(value);\n                }\n\n                if (type === 'boolean' || type === 'bool') {\n                    if (value === true || value === 'true' || value === 1 || value === '1') {\n                        return '';\n                    } else if (value === false || value === 'false' || value === 0 || value === '0') {\n                        return undefined;\n                    }\n                }\n\n                if (type === 'array') {\n                    return JSON.stringify(value);\n                }\n\n                var types = ['string', 'number', 'int', 'integer', 'float', 'date', 'any', 'function'];\n                if (types.indexOf(type) >= 0) {\n                    return value.toString();\n                }\n\n                if (type === 'object') {\n                    return JSON.stringify(value);\n                }\n\n                return undefined;\n            }\n\n            /** \r\n             * Converts a string to a Javascript value.\r\n             * @param {String}\r\n             * @param {String}\r\n             * @return {Object} The converted String value.\r\n             */\n\n        }, {\n            key: 'deserialize',\n            value: function deserialize(stringValue, type, nullable) {\n                var nullValue = stringValue === 'null';\n\n                if (stringValue === undefined || nullValue && !nullable) {\n                    return undefined;\n                }\n\n                if (nullValue && nullable) {\n                    return null;\n                }\n\n                if (type === 'boolean' || type === 'bool') {\n                    if (stringValue === null) {\n                        return false;\n                    }\n\n                    // Boolean properties are set based on the presence of the attribute: if the attribute exists at all, the value is true.\n                    return true;\n                } else if (type === 'number' || type === 'float') {\n                    if (stringValue === 'NaN') {\n                        return NaN;\n                    }\n\n                    if (stringValue === 'Infinity') {\n                        return Infinity;\n                    }\n\n                    return parseFloat(stringValue);\n                } else if (type === 'int' || type === 'integer') {\n                    if (stringValue === 'NaN') {\n                        return NaN;\n                    }\n\n                    if (stringValue === 'Infinity') {\n                        return Infinity;\n                    }\n\n                    return parseInt(stringValue);\n                } else if (type === 'string' || type === 'any') {\n                    return stringValue;\n                } else if (type === 'date') {\n                    return new Date(stringValue);\n                } else if (type === 'function') {\n                    if (typeof window[stringValue] === 'function') {\n                        return window[stringValue];\n                    }\n                } else if (type === 'array' || type === 'object') {\n                    try {\n                        var jsonObject = JSON.parse(stringValue);\n\n                        if (jsonObject) {\n                            return jsonObject;\n                        }\n                    } catch (er) {\n                        if (window[stringValue] && babelHelpers.typeof(window[stringValue]) === 'object') {\n                            return window[stringValue];\n                        }\n                    }\n                }\n\n                return undefined;\n            }\n        }, {\n            key: 'isNativeElement',\n            get: function get() {\n                var that = this;\n\n                if (that.element instanceof window.JQX.BaseElement === false) {\n                    return true;\n                }\n\n                return false;\n            }\n        }]);\n        return Extend;\n    }();\n\n    /** Utilities class. */\n\n\n    var Utilities = function () {\n        function Utilities() {\n            babelHelpers.classCallCheck(this, Utilities);\n        }\n\n        babelHelpers.createClass(Utilities, null, [{\n            key: 'Extend',\n\n\n            /**\r\n             * Extends Element with useful methods.\r\n             * @param {HTMLElement}\r\n             */\n            value: function Extend(element) {\n                return new _Extend(element);\n            }\n        }, {\n            key: 'Assign',\n            value: function Assign(moduleName, module) {\n                Utilities[moduleName] = module;\n            }\n        }, {\n            key: 'Types',\n\n\n            /** Get access to Types class. */\n            get: function get() {\n                return Types;\n            }\n        }, {\n            key: 'Core',\n            get: function get() {\n                return Core;\n            }\n        }, {\n            key: 'Scroll',\n            get: function get() {\n                return Scroll;\n            }\n        }, {\n            key: 'InputEvents',\n            get: function get() {\n                return InputEvents;\n            }\n        }]);\n        return Utilities;\n    }();\n\n    var $document = Utilities.Extend(document);\n\n    BindingModule.cache = {};\n    /**\r\n     * This is a base class for JQX Elements. It extends HTMLElement.\r\n     */\n\n    var BaseElement = function (_HTMLElement) {\n        babelHelpers.inherits(BaseElement, _HTMLElement);\n\n        function BaseElement() {\n            babelHelpers.classCallCheck(this, BaseElement);\n            return babelHelpers.possibleConstructorReturn(this, (BaseElement.__proto__ || Object.getPrototypeOf(BaseElement)).apply(this, arguments));\n        }\n\n        babelHelpers.createClass(BaseElement, [{\n            key: 'template',\n\n\n            /**\r\n             * Gets the element's HTML Template.\r\n             *\r\n             * @returns {String} - element's template.\r\n             */\n            value: function template() {\n                return '<div></div>';\n            }\n\n            /** Called when the element is registered. */\n\n        }, {\n            key: 'registered',\n            value: function registered() {\n                var that = this;\n\n                if (that.onRegistered) {\n                    that.onRegistered();\n                }\n            }\n\n            /** Called when the element has been created. */\n\n        }, {\n            key: 'created',\n            value: function created() {\n                var that = this;\n\n                that.isReady = false;\n                that._initElement(that);\n                that._setModuleState('created');\n\n                if (that.onCreated) {\n                    that.onCreated();\n                }\n            }\n\n            /** Called when the element is ready. Use for one-time configuration of your element. */\n\n        }, {\n            key: 'ready',\n            value: function ready() {\n                var that = this;\n\n                if (that.onReady) {\n                    that.onReady();\n                }\n            }\n        }, {\n            key: 'setup',\n            value: function setup() {\n                var that = this;\n\n                that.context = this;\n\n                if (that.isReady && !that.isCompleted) {\n                    return;\n                }\n\n                if (that.isReady) {\n                    that._setModuleState('attached');\n                    that.isAttached = true;\n                    that.attached();\n                    that._handleListeners('listen');\n                    that.context = document;\n                    return;\n                }\n\n                if (that.ownerElement && that.ownerElement.detachedChildren.indexOf(that) >= 0) {\n                    that.ownerElement.detachedChildren.splice(that.ownerElement.detachedChildren.indexOf(that), 1);\n                }\n\n                that.isReady = true;\n\n                /* Updates the properties by using the attribute values. */\n\n                for (var i = 0; i < that.attributes.length; i += 1) {\n                    var property = that.propertyByAttributeName[that.attributes[i].name];\n\n                    if (!property) {\n                        continue;\n                    }\n\n                    var attributeValue = that.$.getAttributeValue(property.attributeName, property.type);\n                    var attributeValueString = attributeValue ? attributeValue.toString() : '';\n\n                    if (attributeValueString.indexOf('{{') >= 0 || attributeValueString.indexOf('[[') >= 0) {\n                        continue;\n                    }\n\n                    if (property.type !== 'object' && property.type !== 'array') {\n                        if (that.attributes[i].value.indexOf('{{') >= 0 || that.attributes[i].value.indexOf('[[') >= 0) {\n                            continue;\n                        }\n                    }\n\n                    if (attributeValue !== undefined && property.value !== attributeValue) {\n                        var attributeValueType = Utilities.Types.getType(attributeValue);\n\n                        if (attributeValueType === 'number' && isNaN(attributeValue)) {\n                            var localizedError = that.localize('propertyInvalidValueType', { name: property.name, actualType: 'string', type: property.type });\n                            that.log(localizedError);\n                        }\n\n                        property.isUpdatingFromAttribute = true;\n                        that[property.name] = attributeValue;\n                        property.isUpdatingFromAttribute = false;\n                    }\n                }\n\n                /* Set the default boolean and innerhtml attributes by using the property values. */\n                for (var propertyName in that._properties) {\n                    var _property = that._properties[propertyName];\n\n                    if (propertyName === 'innerHTML' && _property.value === _property.defaultValue) {\n                        _property.value = _property.defaultValue = Utilities.Core.html(that);\n                    }\n\n                    if (_property.type === 'boolean' || _property.type === 'bool') {\n                        if (that.getAttribute(_property.attributeName) === 'false') {\n                            _property.isUpdating = true;\n                            that.setAttribute(_property.attributeName, '');\n                            _property.isUpdating = false;\n                        }\n                    }\n\n                    if (!_property.defaultReflectToAttribute || !_property.reflectToAttribute) {\n                        continue;\n                    }\n\n                    that.$.setAttributeValue(_property.attributeName, _property.value, _property.type);\n                }\n\n                that.applyTemplate();\n\n                that.complete = function () {\n                    if (!that.templateBindingsReady) {\n                        var updateTemplateBindings = function updateTemplateBindings(node) {\n                            if (node.templateBindingsReady) {\n                                return;\n                            }\n\n                            node.templateBindingsReady = true;\n                            node.updateTextNodes();\n                            node.updateBoundNodes();\n                        };\n\n                        if (!that.ownerElement) {\n                            updateTemplateBindings(that);\n                        } else {\n                            var owner = that.ownerElement;\n                            var owners = [];\n                            while (owner) {\n                                owners.push(owner);\n                                owner = owner.ownerElement;\n                            }\n\n                            for (var _i2 = owners.length - 1; _i2 >= 0; _i2--) {\n                                updateTemplateBindings(owners[_i2]);\n                            }\n\n                            updateTemplateBindings(that);\n                        }\n                    }\n\n                    that._setModuleState('ready');\n\n                    that.ready();\n\n                    that.isAttached = true;\n                    that._setModuleState('attached');\n                    that.attached();\n                    that._handleListeners('listen');\n\n                    if (that.offsetWidth === 0 || that.offsetHeight === 0) {\n                        that.isHidden = true;\n                    }\n\n                    if (that.onCompleted) {\n                        that.onCompleted();\n                    }\n\n                    that.isCompleted = true;\n\n                    that.context = document;\n                };\n\n                var templateNodes = that.querySelectorAll('[jqx-id]');\n                if (templateNodes.length === 0) {\n                    that.complete();\n                } else {\n                    that._readyListeners = 0;\n\n                    for (var _i3 = 0; _i3 < templateNodes.length; _i3++) {\n                        var _node2 = templateNodes[_i3];\n\n                        if (_node2 instanceof window.JQX.BaseElement) {\n                            var readyEventHandler = function () {\n                                that._readyListeners--;\n                                if (that._readyListeners === 0) {\n                                    that.complete();\n\n                                    delete that._readyListeners;\n                                }\n                            }.bind(that);\n\n                            if (!_node2.isCompleted) {\n                                that._readyListeners++;\n                                _node2.onCompleted = readyEventHandler;\n                            }\n                        }\n                    }\n\n                    if (that._readyListeners === 0) {\n                        that.complete();\n                    }\n                }\n            }\n        }, {\n            key: 'visibilityChangedHandler',\n            value: function visibilityChangedHandler() {\n                var that = this;\n\n                if (!that.isReady) {\n                    return;\n                }\n\n                if (that.offsetWidth === 0 || that.offsetHeight === 0) {\n                    that.isHidden = true;\n                } else {\n                    if (that.isHidden) {\n                        that.$.fireEvent('resize', that, {\n                            bubbles: false,\n                            cancelable: true\n                        });\n                        that.isHidden = false;\n                    }\n                }\n            }\n\n            /** Called when an attribute is changed. */\n\n        }, {\n            key: 'attributeChangedCallback',\n            value: function attributeChangedCallback(name, oldValue, newValue) {\n                var that = this;\n                var property = that.propertyByAttributeName[name];\n\n                if (name === 'class' || name === 'style') {\n                    that.visibilityChangedHandler();\n                }\n\n                if (!property) {\n                    that.attributeChanged(name, oldValue, newValue);\n                }\n\n                if (!property || property && property.isUpdating) {\n                    return;\n                }\n\n                var newPropertyValue = that.$.getAttributeValue(property.attributeName, property.type);\n                if (newValue !== undefined && that[property.name] !== newPropertyValue) {\n                    property.isUpdatingFromAttribute = true;\n                    if (newPropertyValue !== undefined) {\n                        that[property.name] = newPropertyValue;\n                    } else {\n                        that[property.name] = that._properties[property.name].defaultValue;\n                    }\n                    property.isUpdatingFromAttribute = false;\n                }\n            }\n\n            /** Called when one of the element's attributes is changed. Use to handle attribute changes that don't correspond to declared properties. */\n\n        }, {\n            key: 'attributeChanged',\n            value: function attributeChanged(name, oldValue, newValue) {\n                if (oldValue !== newValue) {\n                    /* attribute change handling logic here. */\n                }\n            }\n\n            /** Called after the element is attached to the document. Can be called multiple times during the lifetime of an element. */\n\n        }, {\n            key: 'attached',\n            value: function attached() {\n                var that = this;\n\n                StyleObserver.watch(that);\n\n                if (that.onAttached) {\n                    that.onAttached();\n                }\n            }\n\n            /** Called after the element is detached from the document. Can be called multiple times during the lifetime of an element. */\n\n        }, {\n            key: 'detached',\n            value: function detached() {\n                var that = this;\n\n                StyleObserver.unwatch(that);\n\n                that._setModuleState('detached');\n                that.isAttached = false;\n\n                if (that.ownerElement) {\n                    that.ownerElement.detachedChildren.push(that);\n                }\n                that._handleListeners('unlisten');\n\n                if (that.onDetached) {\n                    that.onDetached();\n                }\n            }\n\n            /** Called when a property value is changed. */\n\n        }, {\n            key: 'propertyChangedHandler',\n            value: function propertyChangedHandler(propertyName, oldValue, newValue) {\n                var that = this;\n\n                if (oldValue === newValue) {\n                    return;\n                }\n\n                if (that.propertyChanged) {\n                    that.propertyChanged(propertyName, oldValue, newValue);\n                }\n                /* Property changed logic goes here. */\n            }\n        }, {\n            key: '_handleListeners',\n            value: function _handleListeners(action) {\n                var that = this;\n                var tagName = that.tagName.toLowerCase();\n                var listeners = that.getStaticMember('listeners');\n\n                var processListeners = function processListeners(listeners) {\n                    var _loop3 = function _loop3(listener) {\n                        var path = listener.split('.');\n                        var eventType = path[0];\n                        var element = that.$;\n\n                        if (path[1]) {\n                            eventType = path[1];\n                            element = that['$' + path[0]];\n\n                            if (path[0] === 'document') {\n                                var id = that.id;\n                                if (id === '') {\n                                    id = Utilities.Core.toCamelCase(tagName);\n                                }\n                                eventType = eventType + '.' + id;\n                            }\n                        }\n\n                        var handlerName = listeners[listener];\n                        var handler = function handler(event) {\n                            var context = that.context;\n                            that.context = that;\n                            that[handlerName].apply(that, [event]);\n                            that.context = context;\n                        };\n\n                        if (!element) {\n                            return 'continue';\n                        }\n\n                        element[action](eventType, handler);\n                    };\n\n                    for (var listener in listeners) {\n                        var _ret4 = _loop3(listener);\n\n                        if (_ret4 === 'continue') continue;\n                    }\n                };\n\n                processListeners(listeners);\n                processListeners(that.templateListeners);\n            }\n\n            /** Parses the element's template. */\n\n        }, {\n            key: 'parseTemplate',\n            value: function parseTemplate() {\n                var that = this;\n                var template = that.template();\n                var fragment = document.createDocumentFragment();\n\n                if (template === '') {\n                    return null;\n                }\n\n                /* Create a wrapper DIV tag. */\n                var tmpElement = document.createElement('div');\n                fragment.appendChild(tmpElement);\n\n                /* Fill the nodes array with the wrapper's childNodes. */\n                tmpElement.innerHTML = template;\n                var nodes = tmpElement.childNodes;\n\n                /* Remove the wrapper DIV tag. */\n                tmpElement.parentNode.removeChild(tmpElement);\n\n                /* Add the nodes to the fragment. */\n                for (var i = 0; i < nodes.length; i++) {\n                    fragment.appendChild(nodes[i]);\n                }\n\n                return fragment;\n            }\n        }, {\n            key: 'applyTemplate',\n            value: function applyTemplate() {\n                var that = this;\n\n                var templateElement = that.parseTemplate();\n\n                if (!templateElement) {\n                    return;\n                }\n\n                var template = document.importNode(templateElement, true);\n\n                if (!template.hasChildNodes) {\n                    return;\n                }\n\n                var rootElement = template.childNodes[0];\n                var map = function map(name, element) {\n                    that['$' + name] = element.$ = Utilities.Extend(element);\n                    that.$[name] = element;\n                    element.ownerElement = that;\n                };\n\n                /* Create a content element. */\n                var contentElement = rootElement;\n\n                if (rootElement.getElementsByTagName('content').length > 0) {\n                    var contentInsertionPoint = rootElement.getElementsByTagName('content')[0];\n                    contentElement = contentInsertionPoint.parentNode;\n                    contentElement.removeChild(contentInsertionPoint);\n                } else {\n                    var preudoContentElement = template.querySelectorAll('[inner-h-t-m-l]');\n                    if (preudoContentElement && preudoContentElement.length > 0) {\n                        contentElement = preudoContentElement[0];\n                    }\n                }\n\n                /* Build nodes map. */\n                var templateNodes = template.querySelectorAll('[id]');\n                if (templateNodes.length === 0) {\n                    templateNodes = template.querySelectorAll('*');\n                }\n\n                map('root', rootElement);\n                map('content', contentElement);\n\n                that.$.html = that.innerHTML.toString().trim();\n\n                for (var i = 0; i < templateNodes.length; i += 1) {\n                    var templateNode = templateNodes[i];\n                    if (templateNode.id === '') {\n                        templateNode.id = 'child' + i;\n                    }\n\n                    map(templateNode.id, templateNode);\n                    templateNode.setAttribute('jqx-id', templateNode.id);\n\n                    if (!that.shadowRoot) {\n                        templateNode.removeAttribute('id');\n                    }\n                }\n\n                that.bindings = that.getBindings(template);\n                that.$root.addClass('jqx-container');\n                /* Move element's initial nodes to the content element. */\n                while (that.childNodes.length) {\n                    contentElement.appendChild(that.firstChild);\n                }\n\n                /* Append the template. */\n                that.appendTemplate(template);\n            }\n        }, {\n            key: 'appendTemplate',\n            value: function appendTemplate(template) {\n                var that = this;\n\n                that.appendChild(template);\n            }\n\n            /** Defines the custom element's default modules. The function is called once when the element's script file is referred. */\n\n        }, {\n            key: 'defineElementModules',\n            value: function defineElementModules() {\n                var that = this;\n\n                var proto = that.constructor.prototype;\n                proto.modules = that.constructor.modules;\n\n                var modules = proto.modules;\n\n                for (var i = 0; i < modules.length; i += 1) {\n                    that.addModule(modules[i]);\n                }\n            }\n        }, {\n            key: 'watch',\n            value: function watch(properties, propertyChangedCallback) {\n                var that = this;\n\n                if (properties === null || propertyChangedCallback === null) {\n                    that._watch = null;\n                    return;\n                }\n\n                that._watch = {\n                    properties: properties,\n                    propertyChangedCallback: propertyChangedCallback\n                };\n            }\n        }, {\n            key: 'unwatch',\n            value: function unwatch() {\n                var that = this;\n\n                that._watch = null;\n            }\n        }, {\n            key: '_setModuleState',\n            value: function _setModuleState(stateName, args) {\n                var that = this;\n                var statusName = 'is' + stateName.substring(0, 1).toUpperCase() + stateName.substring(1);\n                var callbackName = 'on' + stateName.substring(0, 1).toUpperCase() + stateName.substring(1);\n\n                for (var i = 0; i < that.modulesList.length; i++) {\n                    var module = that.modulesList[i];\n\n                    module[statusName] = true;\n\n                    if (module[stateName]) {\n                        module[stateName](args);\n                    }\n\n                    if (module[callbackName]) {\n                        module[callbackName](args);\n                    }\n                }\n            }\n\n            /**\r\n             * Adds a module to the the element. Module's methods and properties are mixed into the element's prototype.\r\n             * @param {Object}.\r\n             */\n\n        }, {\n            key: 'addModule',\n            value: function addModule(module) {\n                var that = this;\n\n                if (!module) {\n                    return;\n                }\n\n                var modules = that.modules;\n                var proto = module.prototype;\n\n                if (!module.moduleName && module.name) {\n                    module.moduleName = module.name;\n                }\n\n                if (modules.findIndex(function (currentModule) {\n                    return module.moduleName === currentModule.moduleName;\n                }) === -1) {\n                    modules.push(module);\n                }\n\n                that.defineModule(module);\n                that.defineElementMethods(proto.methodNames, proto);\n                that.defineElementProperties(module.properties);\n            }\n\n            /** Defines a module and creates its properties. */\n\n        }, {\n            key: 'defineModule',\n            value: function defineModule(module) {\n                if (module.isDefined) {\n                    return;\n                }\n\n                module.prototype._initModule = function (element) {\n                    var that = this;\n\n                    that.ownerElement = element;\n                };\n\n                var properties = module.properties || {};\n                var propertyNames = Object.keys(properties);\n                var methodNames = Object.getOwnPropertyNames(module.prototype);\n\n                module.prototype.methodNames = methodNames;\n\n                var _loop4 = function _loop4(j) {\n                    var propertyName = propertyNames[j];\n                    var property = properties[propertyName];\n\n                    Object.defineProperty(module.prototype, propertyName, {\n                        configurable: false,\n                        enumerable: true,\n                        get: function get() {\n                            var that = this;\n\n                            if (!that.ownerElement) {\n                                return property.value;\n                            }\n\n                            return that.ownerElement[propertyName];\n                        },\n                        set: function set(value) {\n                            var that = this;\n\n                            that.ownerElement[propertyName] = value;\n                        }\n                    });\n                };\n\n                for (var j = 0; j < propertyNames.length; j += 1) {\n                    _loop4(j);\n                }\n\n                module.isDefined = true;\n            }\n        }, {\n            key: 'getStaticMember',\n            value: function getStaticMember(memberName) {\n                var that = this;\n                var element = window.JQX[that.elementName];\n\n                var staticMember = element[memberName];\n                var inheritedStaticMember = {};\n                var baseProto = Object.getPrototypeOf(element);\n\n                while (baseProto[memberName]) {\n                    inheritedStaticMember = Utilities.Core.assign(inheritedStaticMember, baseProto[memberName]);\n                    baseProto = Object.getPrototypeOf(baseProto);\n                }\n\n                return Utilities.Core.assign(inheritedStaticMember, staticMember);\n            }\n\n            /** Defines the element properties, methods and modules. */\n\n        }, {\n            key: 'defineElement',\n            value: function defineElement() {\n                var that = this;\n                var proto = that.constructor.prototype;\n                var properties = that.getStaticMember('properties');\n                var methods = Object.getOwnPropertyNames(proto);\n\n                proto.extendedProperties = {};\n                proto.boundProperties = {};\n                proto.templateListeners = {};\n\n                that.defineElementModules();\n                that.defineElementMethods(methods, proto);\n                that.defineElementProperties(properties);\n\n                /* Initialization of element's instance properties. */\n                proto._initElement = function () {\n                    var that = this;\n\n                    var properties = proto.extendedProperties;\n                    var propertyNames = Object.keys(properties);\n                    var modules = that.modules;\n\n                    that.$ = Utilities.Extend(that);\n                    that.$document = $document;\n\n                    that.modulesList = [];\n                    that._properties = [];\n                    that.detachedChildren = [];\n\n                    that.propertyByAttributeName = [];\n\n                    for (var i = 0; i < modules.length; i += 1) {\n                        var module = modules[i];\n                        var moduleInstance = new module();\n                        moduleInstance._initModule(that);\n                        that.modulesList.push(moduleInstance);\n                    }\n\n                    var _loop5 = function _loop5(_i4) {\n                        var propertyName = propertyNames[_i4];\n                        var property = properties[propertyName];\n                        var defaultValue = property.value;\n\n                        if (isOldChrome && propertyName === 'innerHTML') {\n                            delete that[propertyName];\n                        }\n\n                        that._properties[propertyName] = {\n                            name: propertyName,\n                            notify: property.notify,\n                            allowedValues: property.allowedValues,\n                            type: property.type,\n                            nullable: property.nullable,\n                            reflectToAttribute: property.reflectToAttribute,\n                            defaultReflectToAttribute: property.defaultReflectToAttribute,\n                            value: defaultValue,\n                            readOnly: property.readOnly,\n                            defaultValue: defaultValue,\n                            attributeName: property.attributeName,\n                            observer: property.observer,\n                            inherit: property.inherit,\n                            extend: property.extend,\n                            validator: property.validator\n                        };\n\n                        that.propertyByAttributeName[property.attributeName] = that._properties[propertyName];\n\n                        if (!property.hasOwnProperty('type')) {\n                            var localizedError = that.localize('propertyUnknownType', { name: propertyName });\n                            that.log(localizedError);\n                        }\n\n                        if (property.type === 'any') {\n                            return 'continue';\n                        }\n\n                        var defaultValueType = Utilities.Types.getType(defaultValue);\n                        if (defaultValue !== undefined && defaultValue !== null && property.type !== defaultValueType && !property.validator) {\n                            if (property.type === 'object' && defaultValueType === 'array') {\n                                return 'continue';\n                            }\n\n                            if (defaultValueType === 'number') {\n                                var types = ['integer', 'int', 'float'];\n                                var propertyIndex = types.findIndex(function (type) {\n                                    return type === property.type;\n                                });\n\n                                if (propertyIndex >= 0) {\n                                    return 'continue';\n                                }\n                            }\n                            var _localizedError = that.localize('propertyInvalidValueType', { name: propertyName, actualType: defaultValueType, type: property.type });\n                            that.log(_localizedError);\n                        }\n                    };\n\n                    for (var _i4 = 0; _i4 < propertyNames.length; _i4 += 1) {\n                        var _ret6 = _loop5(_i4);\n\n                        if (_ret6 === 'continue') continue;\n                    }\n                };\n\n                /* Calls the registered method. It is useful for one-time configuration. */\n                proto.registered();\n            }\n\n            /**\r\n             * Defines Element's methods. \r\n             * {Array} - methods.\r\n             * {Object} - method owner's prototype.\r\n             */\n\n        }, {\n            key: 'defineElementMethods',\n            value: function defineElementMethods(methods, proto) {\n                var that = this;\n                var elementProto = that.constructor.prototype;\n\n                var invokeMethod = function invokeMethod(method, methodName) {\n                    var args = Array.prototype.slice.call(arguments, 2);\n\n                    var elementMethod = function elementMethod() {\n                        /* Raise an exception when the method is invoked while the element is not in Ready state. */\n                        if (!this.isReady && methodName !== 'localize' && methodName !== 'log') {\n                            var localizedError = this.localize('elementNotInDOM');\n                            this.log(localizedError);\n                        }\n\n                        var methodContext = this;\n                        for (var i = 0; i < this.modulesList.length; i++) {\n                            var module = this.modulesList[i];\n                            if (methodName in module) {\n                                methodContext = module;\n                                break;\n                            }\n                        }\n\n                        var context = this.context;\n                        this.context = this;\n                        var result = method.apply(methodContext, args.concat(Array.prototype.slice.call(arguments)));\n                        this.context = context;\n\n                        return result;\n                    };\n\n                    return elementMethod;\n                };\n\n                /* Exclude these methods. */\n                var excludeMethods = ['constructor', 'ready', 'created', 'attached', 'detached', 'appendChild', 'insertBefore', 'removeChild', 'propertyChangedHandler'];\n\n                /* Wrap Custom Element's methods. */\n\n                var _loop6 = function _loop6(index) {\n                    var methodName = methods[index];\n\n                    if (methodName.startsWith('_') || excludeMethods.find(function (excludeMethodName) {\n                        return excludeMethodName === methodName;\n                    }) !== undefined) {\n                        return 'continue';\n                    }\n\n                    if (elementProto.extendedProperties[methodName]) return 'continue';\n\n                    if (!Utilities.Types.isFunction(proto[methodName])) return 'continue';\n\n                    elementProto[methodName] = invokeMethod(proto[methodName], methodName);\n                };\n\n                for (var index in methods) {\n                    var _ret7 = _loop6(index);\n\n                    if (_ret7 === 'continue') continue;\n                }\n            }\n\n            /** Defines the custom element's properties. The function is called once when an element's script file is referred. */\n\n        }, {\n            key: 'defineElementProperties',\n            value: function defineElementProperties(properties) {\n                if (!properties) {\n                    return;\n                }\n\n                var that = this;\n                var proto = that.constructor.prototype;\n                var propertyNames = Object.keys(properties);\n                var defaultProperties = that.getStaticMember('properties');\n\n                Object.assign(proto.extendedProperties, properties);\n\n                /* Called when a property is set. Updates the property and synchronizes with the attribute. */\n                var updateProperty = function updateProperty(context, property, value) {\n                    var that = context;\n\n                    if (property.readOnly) {\n                        return;\n                    }\n\n                    /* Raises an exception when the new value is not in the allowedValues list. */\n                    if (property.allowedValues) {\n                        var isValidValue = false;\n\n                        for (var i = 0; i < property.allowedValues.length; i++) {\n                            if (property.allowedValues[i] === value) {\n                                isValidValue = true;\n                                break;\n                            }\n                        }\n\n                        if (!isValidValue) {\n                            var allowedValuesString = JSON.stringify(property.allowedValues).replace(/\\[|\\]/gi, '').replace(',', ', ').replace(/\"/gi, '\\'');\n                            var actualValueString = '\\'' + value + '\\'';\n                            var localizedError = that.localize('propertyInvalidValue', { name: property.name, actualValue: actualValueString, value: allowedValuesString });\n\n                            that.log(localizedError);\n                            return;\n                        }\n                    }\n\n                    var propertyName = property.name;\n                    var oldValue = that._properties[propertyName].value;\n\n                    /* Calls the property's validator, if defined. */\n                    if (property.validator) {\n                        if (that[property.validator]) {\n                            that.context = that;\n                            var validatedResult = that[property.validator](oldValue, value);\n                            if (validatedResult !== undefined) {\n                                value = validatedResult;\n                            }\n\n                            that.context = document;\n                        }\n                    }\n\n                    if (oldValue === value) {\n                        return;\n                    }\n\n                    if (!property.hasOwnProperty('type')) {\n                        var _localizedError2 = that.localize('propertyUnknownType', { name: propertyName });\n                        that.log(_localizedError2);\n                    }\n\n                    if (property.type === 'array' && '' + oldValue === '' + value) {\n                        return;\n                    }\n\n                    if (value !== undefined && value !== null && property.type !== 'any' && property.type !== Utilities.Types.getType(value) && !property.validator || value === null && !property.nullable) {\n                        var throwError = true;\n\n                        if (property.type === 'object' && Utilities.Types.getType(value) === 'array') {\n                            throwError = false;\n                        }\n\n                        if (Utilities.Types.getType(value) === 'number') {\n                            var types = ['integer', 'int', 'float'];\n                            var propertyIndex = types.findIndex(function (type) {\n                                return type === property.type;\n                            });\n\n                            if (propertyIndex >= 0) {\n                                throwError = false;\n                            }\n                        }\n\n                        if (throwError) {\n                            var _localizedError3 = that.localize('propertyInvalidValueType', { name: propertyName, actualType: Utilities.Types.getType(value), type: property.type });\n                            that.log(_localizedError3);\n                            return;\n                        }\n                    }\n\n                    property.isUpdating = true;\n                    that._properties[propertyName].value = value;\n\n                    /* Updates the element's attribute value. */\n                    if (!property.isUpdatingFromAttribute && property.reflectToAttribute) {\n                        that.$.setAttributeValue(property.attributeName, value, property.type);\n                    }\n\n                    /* Calls the element's propertyChangedHandler function when the element is in Ready state and the property is observed. */\n                    var isReady = that.isReady && (!that.ownerElement || that.ownerElement && that.ownerElement.isReady);\n\n                    if (isReady) {\n                        if (that.context !== that) {\n                            /* Setting context to that prevents calling propertyChangedHandler, if the custom element's developer\r\n                             * sets another element property within the propertyChangedHandler. \r\n                            */\n                            that.context = that;\n                            that.propertyChangedHandler(propertyName, oldValue, value);\n                            that.context = document;\n\n                            /* Calls the property's observer, if defined. */\n                            if (property.observer) {\n                                if (that[property.observer]) {\n                                    that.context = that;\n                                    that[property.observer](oldValue, value);\n                                    that.context = document;\n                                }\n                            }\n\n                            if (that._watch && that._watch.properties.indexOf(propertyName) >= 0) {\n                                that._watch.propertyChangedCallback(propertyName, oldValue, value);\n                            }\n                        }\n\n                        /* Dispatch an event when property's notify member is set. */\n                        var notify = property.notify || that.boundProperties[propertyName];\n                        if (notify) {\n                            that.$.fireEvent(property.attributeName + '-changed', { oldValue: oldValue, value: value });\n                            if (that.boundProperties[propertyName]) {\n                                that.updateBoundNodes(propertyName);\n                            }\n                        }\n                    }\n                    property.isUpdating = false;\n                };\n\n                /* Defines element's properties. */\n\n                var _loop7 = function _loop7(i) {\n                    var propertyName = propertyNames[i];\n                    var property = properties[propertyName];\n                    var attributeName = Utilities.Core.toDash(propertyName);\n                    var type = property.type || 'any';\n                    var nullable = type.indexOf('?') >= 0 || type === 'any';\n\n                    if (nullable && type !== 'any') {\n                        property.type = type.substring(0, type.length - 1);\n                    }\n\n                    property.nullable = nullable;\n                    property.attributeName = attributeName.toLowerCase();\n                    property.name = propertyName;\n                    property.reflectToAttribute = property.reflectToAttribute !== undefined ? property.reflectToAttribute : true;\n\n                    if (property.inherit && defaultProperties[propertyName]) {\n                        property.value = defaultProperties[propertyName].value;\n                    }\n\n                    if (property.extend && defaultProperties[propertyName]) {\n                        Utilities.Core.assign(property.value, defaultProperties[propertyName].value);\n                    }\n\n                    if (proto.hasOwnProperty(propertyName)) {\n                        return 'continue';\n                    }\n\n                    Object.defineProperty(proto, propertyName, {\n                        configurable: false,\n                        enumerable: true,\n                        get: function get() {\n                            var that = this;\n\n                            return that._properties[propertyName].value;\n                        },\n                        set: function set(value) {\n                            var that = this;\n\n                            updateProperty(that, that._properties[propertyName], value);\n                        }\n                    });\n                };\n\n                for (var i = 0; i < propertyNames.length; i += 1) {\n                    var _ret8 = _loop7(i);\n\n                    if (_ret8 === 'continue') continue;\n                }\n            }\n        }, {\n            key: 'properties',\n            get: function get() {\n                var that = this;\n\n                if (!that._properties) {\n                    that._properties = [];\n                }\n\n                return that._properties;\n            }\n\n            /**\r\n             * Gets the element's parents.\r\n             *\r\n             * @return {Array<HTMLElement>} - element's parents.\r\n             */\n\n        }, {\n            key: 'parents',\n            get: function get() {\n                var that = this;\n\n                var matched = [],\n                    current = that.parentNode;\n\n                while (current && current.nodeType !== 9) {\n                    if (current instanceof HTMLElement === true) {\n                        matched.push(current);\n                    }\n                    current = current.parentNode;\n                }\n                return matched;\n            }\n        }], [{\n            key: 'properties',\n\n            /**\r\n             * Element's properties.\r\n             *\r\n             * @return {Object} - element's properties.\r\n             */\n            get: function get() {\n                return {\n                    'disabled': {\n                        value: false,\n                        type: 'boolean'\n                    },\n                    'readonly': {\n                        value: false,\n                        type: 'boolean'\n                    },\n                    'rightToLeft': {\n                        value: false,\n                        type: 'boolean'\n                    },\n                    'messages': {\n                        value: {\n                            'en': {\n                                'propertyUnknownType': '\\'{{name}}\\' property is with undefined \\'type\\' member!',\n                                'propertyInvalidValue': 'Invalid \\'{{name}}\\' property value! Actual value: {{actualValue}}, Expected value: {{value}}!',\n                                'propertyInvalidValueType': 'Invalid \\'{{name}}\\' property value type! Actual type: {{actualType}}, Expected type: {{type}}!',\n                                'elementNotInDOM': 'Element does not exist in DOM! Please, add the element to the DOM, before invoking a method.',\n                                'moduleUndefined': 'Module is undefined.'\n                            }\n                        },\n                        reflectToAttribute: false,\n                        type: 'object'\n                    }\n                };\n            }\n\n            /**\r\n             * Element's listeners.\r\n             *\r\n             * @return {Object} - element's listeners.\r\n             */\n\n        }, {\n            key: 'listeners',\n            get: function get() {\n                return {};\n            }\n\n            /**\r\n             * Element's modules.\r\n             *\r\n             * @return {Array<Module>} - element's modules.\r\n             */\n\n        }, {\n            key: 'modules',\n            get: function get() {\n                return window.JQX.Modules;\n            }\n        }]);\n        return BaseElement;\n    }(HTMLElement);\n\n    var customElements = [];\n    var registeredCallbacks = [];\n    var registeredLoadedCallbacks = [];\n    var isOldChrome = false;\n\n    var chromeAgent = navigator.userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./);\n    if (chromeAgent) {\n        var chromeVersion = parseInt(chromeAgent[2], 10);\n        if (chromeVersion <= 50) {\n            isOldChrome = true;\n        }\n    }\n\n    //const isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\n    var supportsCustomElementsV1 = false; //isChrome && 'customElements' in window;\n    var connectElements = function connectElements() {\n        registeredLoadedCallbacks.sort(function (element1, element2) {\n            var indexA = element1.element.parents.length;\n            var indexB = element2.element.parents.length;\n\n            if (indexA < indexB) {\n                return -1;\n            }\n            if (indexA > indexB) {\n                return 1;\n            }\n\n            return 0;\n        });\n\n        for (var i = 0; i < registeredLoadedCallbacks.length; i++) {\n            registeredLoadedCallbacks[i].callback();\n            registeredLoadedCallbacks[i].element.isLoading = false;\n        }\n\n        registeredLoadedCallbacks = [];\n        document.removeEventListener('DOMContentLoaded', connectElements);\n    };\n\n    document.addEventListener('DOMContentLoaded', connectElements);\n\n    var BaseCustomElement = function (_BaseElement) {\n        babelHelpers.inherits(BaseCustomElement, _BaseElement);\n\n        function BaseCustomElement() {\n            babelHelpers.classCallCheck(this, BaseCustomElement);\n            return babelHelpers.possibleConstructorReturn(this, (BaseCustomElement.__proto__ || Object.getPrototypeOf(BaseCustomElement)).apply(this, arguments));\n        }\n\n        babelHelpers.createClass(BaseCustomElement, [{\n            key: 'createdCallback',\n\n            /** Called when an instance of the custom element is created. */\n            value: function createdCallback() {\n                /*  initialization code goes here. */\n                var that = this;\n\n                that.created();\n            }\n\n            /** Called when an instance of custom element is attached to the DOM. */\n\n        }, {\n            key: 'attachedCallback',\n            value: function attachedCallback() {\n                var that = this;\n\n                if (that.isLoading) {\n                    return;\n                }\n\n                if (document.readyState !== 'loading') {\n                    that.setup();\n                } else {\n                    that.isLoading = true;\n                    registeredLoadedCallbacks.push({\n                        element: this, callback: function () {\n                            if (this.isReady) {\n                                return;\n                            }\n\n                            this.setup();\n                        }.bind(that)\n                    });\n                }\n            }\n\n            /** Called when an instance of custom element is detached from the DOM. V0 spec. */\n\n        }, {\n            key: 'detachedCallback',\n            value: function detachedCallback() {\n                var that = this;\n\n                if (!that.isAttached) {\n                    return;\n                }\n\n                that.detached();\n            }\n        }]);\n        return BaseCustomElement;\n    }(BaseElement);\n\n    var BaseCustomElementV1 = function (_BaseElement2) {\n        babelHelpers.inherits(BaseCustomElementV1, _BaseElement2);\n        babelHelpers.createClass(BaseCustomElementV1, [{\n            key: 'scopedStyle',\n            value: function scopedStyle() {\n                var scopedStyle = '\\n                :host {\\n                    display: block;\\n                    overflow: hidden;\\n                }\\n                :host, :host > *:first-child, :host > * {\\n                    box-sizing: border-box;\\n                }\\n                :host[disabled] {\\n                    opacity: 0.55;\\n                    cursor: default;\\n                }\\n                .jqx-container {\\n                    box-sizing: border-box;\\n                    font-family: Arial, sans-serif;\\n                    font-size: inherit;\\n                    display: block;\\n                    width: 100%;\\n                    height: 100%;\\n                    outline: none;\\n                    margin: 0;\\n                    padding: 0;\\n                }\\n            ';\n                return scopedStyle;\n            }\n        }, {\n            key: 'addExternalStylesheet',\n            value: function addExternalStylesheet(path) {\n                var that = this;\n\n                if (!that.shadowRoot || !path) {\n                    return;\n                }\n\n                var link = document.createElement('link');\n\n                link.rel = 'stylesheet';\n                link.type = 'text/css';\n                link.href = path;\n\n                that.shadowRoot.insertBefore(link, that.shadowRoot.firstChild);\n            }\n        }, {\n            key: 'attributeChanged',\n            value: function attributeChanged(name, oldValue, newValue) {\n                if (name === 'external-style') {\n                    this.externalStyle = newValue;\n                }\n            }\n        }, {\n            key: 'attributeChangedCallback',\n            value: function attributeChangedCallback(name, oldValue, newValue) {\n                var that = this;\n\n                if (!that.isReady) {\n                    return;\n                }\n\n                babelHelpers.get(BaseCustomElementV1.prototype.__proto__ || Object.getPrototypeOf(BaseCustomElementV1.prototype), 'attributeChangedCallback', this).call(this, name, oldValue, newValue);\n            }\n            /** Called when an instance of the custom element is created. */\n\n        }, {\n            key: 'externalStyle',\n            get: function get() {\n                return this._externalStylePath;\n            },\n            set: function set(path) {\n                this._externalStylePath = path;\n            }\n        }], [{\n            key: 'observedAttributes',\n            get: function get() {\n                var that = this;\n                var observedAttributes = ['external-style'];\n\n                for (var _propertyName2 in that.prototype.extendedProperties) {\n                    var propertyConfig = that.prototype.extendedProperties[_propertyName2];\n\n                    observedAttributes.push(propertyConfig.attributeName);\n                }\n\n                return observedAttributes;\n            }\n        }]);\n\n        function BaseCustomElementV1() {\n            babelHelpers.classCallCheck(this, BaseCustomElementV1);\n\n            /*  initialization code goes here. */\n            var _this4 = babelHelpers.possibleConstructorReturn(this, (BaseCustomElementV1.__proto__ || Object.getPrototypeOf(BaseCustomElementV1)).call(this));\n\n            var that = _this4;\n\n            that._externalStylePath = '';\n            // Uncomment when scopedStyle is implemented in all elements.\n            //that.attachShadow({ mode: 'open' });\n            that.created();\n            return _this4;\n        }\n\n        babelHelpers.createClass(BaseCustomElementV1, [{\n            key: 'connect',\n            value: function connect() {\n                var that = this;\n\n                var isReady = that.isReady;\n                var templateStyle = void 0;\n\n                if (!isReady) {\n                    if (that.children.length > 0 && that.children[0] instanceof HTMLStyleElement) {\n                        templateStyle = that.children[0];\n                        that.removeChild(templateStyle);\n                    }\n                }\n\n                that.setup();\n\n                if (!isReady && that.shadowRoot) {\n                    if (templateStyle) {\n                        that.shadowRoot.insertBefore(templateStyle, that.shadowRoot.firstChild);\n                    }\n\n                    that.addExternalStylesheet(that._externalStylePath);\n\n                    var scopedStyle = document.createElement('style');\n                    scopedStyle.innerHTML = that.scopedStyle();\n                    that.shadowRoot.insertBefore(scopedStyle, that.shadowRoot.firstChild);\n                }\n            }\n            /** Called when an instance of custom element is attached to the DOM. */\n\n        }, {\n            key: 'connectedCallback',\n            value: function connectedCallback() {\n                var that = this;\n\n                if (document.readyState !== 'loading') {\n                    that.connect();\n                } else {\n                    registeredLoadedCallbacks.push(function () {\n                        if (this.isReady) {\n                            return;\n                        }\n\n                        this.connect();\n                    }.bind(that));\n                }\n            }\n\n            /** Called when an instance of custom element is attached to the DOM. */\n\n        }, {\n            key: 'adoptedCallback',\n            value: function adoptedCallback() {\n                var that = this;\n\n                that.setup();\n            }\n        }, {\n            key: 'appendTemplate',\n            value: function appendTemplate(template) {\n                var that = this;\n\n                if (that.shadowRoot) {\n                    that.shadowRoot.appendChild(template);\n                } else {\n                    that.appendChild(template);\n                }\n            }\n        }]);\n        return BaseCustomElementV1;\n    }(BaseElement);\n\n    /**\r\n     * This is a base class for registration of custom elements.\r\n     */\n\n\n    var ElementRegistry = function () {\n        function ElementRegistry() {\n            babelHelpers.classCallCheck(this, ElementRegistry);\n        }\n\n        babelHelpers.createClass(ElementRegistry, null, [{\n            key: 'register',\n\n            /**\r\n             * Called by each custom element to register it. \r\n               @param {String} - tag name.\r\n               @param {Object} - element's object like Button, NumericTextBox, etc.\r\n             */\n            value: function register(tagName, element) {\n                var proto = element.prototype;\n                var elementName = Core.toCamelCase(tagName).replace(/[a-z]+/, '');\n\n                if (customElements[tagName]) {\n                    return;\n                }\n\n                customElements[tagName] = window.JQX[elementName] = element;\n                proto.elementName = elementName;\n                proto.defineElement();\n                if (registeredCallbacks[tagName]) {\n                    registeredCallbacks[tagName](proto);\n                }\n\n                /** Use customElements v1 spec, if it is supported. */\n                if (supportsCustomElementsV1) {\n                    window.customElements.define(tagName, element);\n                    return;\n                }\n\n                document.registerElement(tagName, element);\n            }\n        }, {\n            key: 'registerElements',\n            value: function registerElements() {\n                var that = this;\n\n                if (!that.toRegister) {\n                    return;\n                }\n\n                for (var i = that.toRegister.length - 1; i >= 0; i--) {\n                    var toRegisterItem = that.toRegister[i];\n\n                    that.register(toRegisterItem.tagName, toRegisterItem.element);\n                }\n            }\n\n            /**\r\n             * Returns the element's object.\r\n             * @param {String} - tag name.\r\n             * @return {Object} - custom element's object.\r\n             */\n\n        }, {\n            key: 'get',\n            value: function get(tagName) {\n                if (customElements[tagName]) {\n                    return customElements[tagName];\n                }\n                return undefined;\n            }\n\n            /**\r\n             * Determines whether the element is registered.\r\n             * @param {String} - tag name.\r\n             * @param {Function} - the callback function which is called when the element is registered.\r\n             */\n\n        }, {\n            key: 'whenRegistered',\n            value: function whenRegistered(tagName, callback) {\n                if (!tagName) {\n                    throw new Error('Syntax Error: Invalid tag name');\n                }\n\n                var that = this;\n                var existingCallback = registeredCallbacks[tagName];\n                var element = that.get(tagName);\n\n                if (!existingCallback && !element) {\n                    registeredCallbacks[tagName] = callback;\n                } else if (!existingCallback && element) {\n                    callback(element.prototype);\n                    registeredCallbacks[tagName] = undefined;\n                } else if (existingCallback && !element) {\n                    registeredCallbacks[tagName] = function (proto) {\n                        existingCallback(proto);\n                        callback(proto);\n                    };\n                } else if (existingCallback && element) {\n                    existingCallback(element.proto);\n                    callback(element.proto);\n                    registeredCallbacks[tagName] = undefined;\n                }\n            }\n        }]);\n        return ElementRegistry;\n    }();\n\n    ElementRegistry.lazyRegister = false;\n\n    /*\r\n     * Defines the 'JQX' namespace.\r\n     * @param {String} - the tag's name.\r\n     * @param {Object} - the custom element.\r\n     */\n    window.JQX = function (tagName, element) {\n        if (ElementRegistry.lazyRegister) {\n            if (!ElementRegistry.toRegister) {\n                ElementRegistry.toRegister = [];\n            }\n\n            var elementName = Core.toCamelCase(tagName).replace(/[a-z]+/, '');\n            window.JQX[elementName] = element;\n\n            ElementRegistry.toRegister.push({ tagName: tagName, element: element });\n            return;\n        }\n\n        ElementRegistry.register(tagName, element);\n    };\n\n    Object.assign(window.JQX, {\n        Elements: ElementRegistry,\n        Modules: [ErrorModule, LocalizationModule, BindingModule],\n        BaseElement: supportsCustomElementsV1 ? BaseCustomElementV1 : BaseCustomElement,\n        Utilities: Utilities,\n        Version: '1.4.0'\n    });\n\n    /**\r\n    * Content element.\r\n    */\n    window.JQX('jqx-content-element', function (_window$JQX$BaseEleme) {\n        babelHelpers.inherits(ContentElement, _window$JQX$BaseEleme);\n\n        function ContentElement() {\n            babelHelpers.classCallCheck(this, ContentElement);\n            return babelHelpers.possibleConstructorReturn(this, (ContentElement.__proto__ || Object.getPrototypeOf(ContentElement)).apply(this, arguments));\n        }\n\n        babelHelpers.createClass(ContentElement, [{\n            key: 'template',\n\n\n            /** Content Element's template. */\n            value: function template() {\n                return '<div inner-h-t-m-l=\\'[[innerHTML]]\\'></div>';\n            }\n        }, {\n            key: 'ready',\n            value: function ready() {\n                babelHelpers.get(ContentElement.prototype.__proto__ || Object.getPrototypeOf(ContentElement.prototype), 'ready', this).call(this);\n\n                var that = this;\n                that.applyContent();\n            }\n        }, {\n            key: 'clearContent',\n            value: function clearContent() {\n                var that = this;\n\n                while (that.$.content.firstChild) {\n                    that.$.content.removeChild(that.$.content.firstChild);\n                }\n            }\n        }, {\n            key: 'applyContent',\n            value: function applyContent() {\n                var that = this;\n\n                if (that.content === undefined) {\n                    that.content = that.$.content;\n                    return;\n                }\n\n                if (that.content === '' || that.content === null) {\n                    that.clearContent();\n                    return;\n                }\n\n                if (that.content instanceof HTMLElement) {\n                    that.clearContent();\n                    that.$.content.appendChild(that.content);\n                    return;\n                }\n\n                var fragment = document.createDocumentFragment();\n\n                /* Create a wrapper DIV tag. */\n                var tmpElement = document.createElement('div');\n                fragment.appendChild(tmpElement);\n\n                /* Fill the nodes array with the wrapper's childNodes. */\n                if (that.content instanceof HTMLElement) {\n                    tmpElement.appendChild(that.content);\n                } else {\n                    tmpElement.innerHTML = that.content;\n                }\n\n                var nodes = tmpElement.childNodes;\n\n                /* Remove the wrapper DIV tag. */\n                tmpElement.parentNode.removeChild(tmpElement);\n\n                /* Add the nodes to the fragment. */\n                while (nodes.length) {\n                    fragment.appendChild(nodes[0]);\n                }\n\n                that.clearContent();\n                that.$.content.appendChild(fragment);\n            }\n        }, {\n            key: 'propertyChangedHandler',\n            value: function propertyChangedHandler(propertyName, oldValue, newValue) {\n                babelHelpers.get(ContentElement.prototype.__proto__ || Object.getPrototypeOf(ContentElement.prototype), 'propertyChangedHandler', this).call(this, propertyName, oldValue, newValue);\n\n                var that = this;\n\n                if (oldValue === newValue) {\n                    return;\n                }\n\n                if (propertyName === 'innerHTML') {\n                    that.content = newValue;\n                    that.applyContent();\n                }\n\n                if (propertyName === 'content') {\n                    that.applyContent();\n                }\n            }\n        }], [{\n            key: 'properties',\n\n            // Button's properties.\n            get: function get() {\n                return {\n                    'content': {\n                        type: 'any',\n                        reflectToAttribute: false\n                    },\n                    'innerHTML': {\n                        type: 'string',\n                        reflectToAttribute: false\n                    }\n                };\n            }\n        }]);\n        return ContentElement;\n    }(window.JQX.BaseElement));\n})();"]}