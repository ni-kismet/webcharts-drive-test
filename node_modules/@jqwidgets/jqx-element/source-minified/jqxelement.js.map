{"version":3,"sources":["jqxelement.js"],"names":["LocalizationModule","babelHelpers","classCallCheck","this","createClass","key","value","messageKey","messages","that","Object","assign","messageArguments","language","message","defaultMessage","messageName","messageValue","replace","RegExp","localizeFormatFunction","get","en","type","inherit","reflectToAttribute","undefined","ErrorModule","_logger","level","error","debugMode","errorMessage","Error","toString","console","rethrowError","BindingModule","node","index","map","boundData","HTMLElement","parseAttributes","boundProperty","parseProperty","data","parentNode","ownerElement","$","content","html","innerHTML","textContent","getAttribute","nodeId","firstChild","children","child","nextSibling","getBindings","htmlElement","boundProperties","i","attributes","length","attribute","attributeName","name","attributeValue","cache","Utilities","Core","toCamelCase","propertyName","indexOf","eventName","substring","templateListeners","removeAttribute","text","startIndex","lastIndex","endIndex","twoWay","twoWayStart","terminator","pathString","slice","trim","updateToken","isNativeElement","toDash","_attributeName","getAttributeValue","setAttributeValue","eventIndex","listen","boundPropertyName","updateBoundProperty","window","JQX","BaseElement","_attributeName2","_propertyName","_properties","notify","event","detail","context","document","elementProperty","ready","updateTextNode","shadowRoot","bindings","element","updating","propertyConfig","updateBoundNode","detachedChildren","jqxId","_node","result","detached","defaultValue","oldValue","isUpdating","_attributeName3","_oldValue","_attributeName4","Types","constructor","call","apply","Array","isArray","typeof","isFunction","Date","types","find","toLowerCase","g","toUpperCase","split","join","entityMap","&","<",">","\"","'","/","`","=","String","s","CSS","supports","target","source","_this","isObject","item","output","keys","forEach","defineProperty","htmlString","nodes","childNodes","rxhtmlTag","l","miscElements","tagName","attr","attrs","nodeOutput","j","escapeHTML","test","navigator","userAgent","versionSearchString","version","dataString","rv","parseFloat","string","subString","identity","appVersion","styleObservedElements","StyleObserver","push","interval","clearInterval","setInterval","observe","computedStyle","defaultView","getComputedStyle","canRaiseResize","styleProperties","_styleInfo","isHidden","offsetWidth","offsetHeight","visibilityChangedHandler","changedStyleProperties","_i","_styleProperty","fireEvent","bubbles","cancelable","styleProperty","observeElement","splice","inputEventTypes","InputEvents","$target","_Extend","$document","id","now","Math","random","substr","handlers","boundEventTypes","bind","unlisten","tapHoldDelay","swipeMin","swipeMax","swipeDelay","inputEventProperties","eventType","handler","moveEvent","createEvent","resizeTrigger","container","createElement","className","appendChild","expand","expandChild","shrink","reset","style","width","height","scrollLeft","scrollTop","dirty","requestAnimationFrameId","newWidth","newHeight","lastWidth","lastHeight","resizeHandler","requestAnimationFrame","requiresLayout","resizeEvent","CustomEvent","resize","addEventListener","isListening","isPressed","isReleased","isInBounds","PointerEvent","pointerDown","pointerUp","pointerMove","pointerCancel","touchMove","touchStart","touchEnd","touchCancel","mouseDown","mouseUp","mouseMove","mouseLeave","handleDocumentUp","removeEventListener","removeChild","resetSwipe","touches","changedTouches","touch","customEvent","originalEvent","_key","clearTimeout","tapHoldTimeout","tapHoldFired","tap","setTimeout","taphold","handleDown","touchStartTime","isTouchMoved","touchEndTime","handleUp","down","initTap","initSwipe","up","fireTap","eventResult","move","_maxSwipeVerticalDistance","max","abs","_startY","pageY","_maxSwipeHorizontalDistance","_startX","pageX","handleSwipeEvents","handleMove","handleVerticalSwipeEvents","handleHorizontalSwipeEvents","current","diff","swiped","direction","_swipeEvent","_swipeLocked","stopImmediatePropagation","_swipeTimeout","Scroll","horizontalScrollBar","verticalScrollBar","autoScroll","elapsed","delta","currentScrollInfo","amplitude","timestamp","exp","timeConstant","scroll","targetValue","cancelAnimationFrame","rafId","isMobile","inputEvents","dragStarted","pointerCaptured","ticker","createScrollInfo","scrollBar","initialValue","min","previousValue","pointerPosition","velocity","hScrollInfo","vScrollInfo","track","updateScrollInfo","scrollInfo","clientY","clientX","startScroll","round","preventDefault","stopPropagation","visible","ratio","dragged","doDrag","verticalDragResult","horizontalDragResult","elapsedScrollTo","scrollTo","vertically","set","Extend","events","classNames","classList","contains","_that$element$classLi","hasClass","add","toConsumableArray","_that$element$classLi2","arguments","remove","handleObjects","handleObject","namespace","defaultPrevented","options","originalStopPropagation","isPropagationStopped","dispatchEvent","typesArray","dispatch","findIndex","o","attributeString","deserialize","propertyByAttributeName","nullable","newAttributeValue","serialize","booleans","setAttribute","getType","JSON","stringify","stringValue","nullValue","NaN","Infinity","parseInt","jsonObject","parse","er","moduleName","module","_HTMLElement","possibleConstructorReturn","__proto__","getPrototypeOf","inherits","onRegistered","isReady","_initElement","_setModuleState","onCreated","_this3","missingModules","requires","getStaticMember","require","modules","_that","localize","elementType","nodeName","files","onReady","isCompleted","isAttached","attached","_handleListeners","property","attributeValueString","attributeValueType","attributeUntypedValue","isNaN","localizedError","actualType","log","isUpdatingFromAttribute","_property","defaultReflectToAttribute","_i2","_node2","applyTemplate","complete","templateBindingsReady","updateTemplateBindings","updateTextNodes","updateBoundNodes","owner","owners","_i3","onCompleted","templateNodes","querySelectorAll","concat","_completeListeners","_i4","completeEventHandler","completeHandlers","_i5","newValue","attributeChanged","newPropertyValue","watch","onAttached","unwatch","onDetached","propertyChanged","action","listeners","processListeners","listener","path","handlerName","template","fragment","createDocumentFragment","tmpElement","templateElement","parseTemplate","importNode","hasChildNodes","rootElement","contentElement","getElementsByTagName","contentInsertionPoint","preudoContentElement","templateNode","$root","addClass","appendTemplate","proto","prototype","addModule","properties","propertyChangedCallback","_watch","stateName","args","statusName","callbackName","modulesList","currentModule","defineModule","defineElementMethods","methodNames","defineElementProperties","isDefined","_initModule","propertyNames","getOwnPropertyNames","configurable","enumerable","memberName","elementName","staticMember","inheritedStaticMember","baseProto","methods","extendedProperties","defineElementModules","isCreated","moduleInstance","_i6","isOldChrome","hasOwnProperty","allowedValues","readOnly","observer","extend","validator","defaultValueType","_localizedError","registered","elementProto","invokeMethod","method","methodName","methodContext","excludeMethods","startsWith","excludeMethodName","defaultProperties","updateProperty","isValidValue","allowedValuesString","actualValueString","actualValue","_context","validatedResult","_localizedError2","throwError","_localizedError3","_context2","propertyChangedHandler","matched","nodeType","disabled","readonly","rightToLeft","propertyUnknownType","propertyInvalidValue","propertyInvalidValueType","elementNotInDOM","moduleUndefined","missingReference","htmlTemplateNotSuported","invalidTemplate","Modules","customElements","registeredCallbacks","registeredLoadedCallbacks","chromeAgent","match","connectElements","readyState","sort","element1","element2","indexA","parents","indexB","callback","isLoading","BaseCustomElement","_BaseElement","created","setup","ElementRegistry","_BaseElement2","BaseCustomElementV1","_this5","_externalStylePath","link","rel","href","insertBefore","externalStyle","observedAttributes","_propertyName2","templateStyle","HTMLStyleElement","addExternalStylesheet","scopedStyle","connect","defineElement","registerElement","toRegister","isRegistering","toRegisterItem","register","existingCallback","modulesLength","elements","_element","lazyRegister","Elements","Version","_window$JQX$BaseEleme","ContentElement","applyContent","clearContent"],"mappings":"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","file":"jqxelement.js","sourcesContent":["'use strict';\n\n(function () {\n    'use strict';\n\n    /**\r\n     * This is a base class for localization. Users can implement it in order to handle translations via i18n.\r\n     */\n\n    var LocalizationModule = function () {\n        function LocalizationModule() {\n            babelHelpers.classCallCheck(this, LocalizationModule);\n        }\n\n        babelHelpers.createClass(LocalizationModule, [{\n            key: 'addMessages',\n\n\n            /** \r\n             * Adds messages. \r\n             * @param {String} - the string value's key.\r\n             * @param {Object} - the messages object.\r\n             */\n            value: function addMessages(messageKey, messages) {\n                var that = this;\n\n                Object.assign(that.messages[messageKey], messages);\n            }\n\n            /**\r\n              * Translates a text.\r\n              * @param {String} the string value's key.\r\n              * @param {Object} the values to be replaced in the string.\r\n              * @return {String} the translated text.\r\n             */\n\n        }, {\n            key: 'localize',\n            value: function localize(messageKey, messageArguments) {\n                var that = this;\n\n                if (!that.messages || !that.messages[that.language]) {\n                    return undefined;\n                }\n\n                var message = that.messages[that.language][messageKey];\n\n                if (!message) {\n                    return undefined;\n                }\n\n                var defaultMessage = message;\n                for (var messageName in messageArguments) {\n                    var messageValue = messageArguments[messageName];\n                    message = message.replace(new RegExp('{{' + messageName + '}}', 'g'), messageValue);\n                }\n\n                if (that.localizeFormatFunction) {\n                    that.localizeFormatFunction(defaultMessage, message, messageArguments);\n                }\n\n                return message;\n            }\n        }], [{\n            key: 'moduleName',\n            get: function get() {\n                return 'LocalizationModule';\n            }\n        }, {\n            key: 'properties',\n            get: function get() {\n                var properties = {\n                    'messages': {\n                        value: { en: {} },\n                        type: 'object',\n                        inherit: true,\n                        reflectToAttribute: false\n                    },\n                    'language': {\n                        value: 'en',\n                        type: 'string',\n                        reflectToAttribute: false\n                    },\n                    'localizeFormatFunction': {\n                        value: undefined,\n                        type: 'function',\n                        reflectToAttribute: false\n                    }\n                };\n\n                return properties;\n            }\n        }]);\n        return LocalizationModule;\n    }();\n\n    /**\r\n     * This is a base class for error logging.\r\n     */\n\n\n    var ErrorModule = function () {\n        function ErrorModule() {\n            babelHelpers.classCallCheck(this, ErrorModule);\n        }\n\n        babelHelpers.createClass(ErrorModule, [{\n            key: 'log',\n\n\n            /** Displays a log in the console.*/\n            value: function log(message) {\n                var that = this;\n\n                that._logger('log', message);\n            }\n\n            /** Displays a warning in the console.*/\n\n        }, {\n            key: 'warn',\n            value: function warn(message) {\n                var that = this;\n\n                that._logger('warn', message);\n            }\n\n            /** Displays an error in the console.*/\n\n        }, {\n            key: 'error',\n            value: function error(message) {\n                var that = this;\n\n                that._logger('warn', message);\n            }\n\n            /**\r\n              Logs an Error.\r\n              @param {String} the error's level - 'warn', 'error' or 'log'.\r\n              @param {Error} the error to be logged.\r\n             */\n\n        }, {\n            key: '_logger',\n            value: function _logger(level, error) {\n                var that = this;\n\n                if (that.debugMode) {\n                    var errorMessage = error instanceof Error ? error.message : error.toString();\n\n                    console[level](errorMessage);\n                }\n\n                if (that.rethrowError) {\n                    throw error;\n                }\n            }\n        }], [{\n            key: 'moduleName',\n            get: function get() {\n                return 'ErrorModule';\n            }\n        }, {\n            key: 'properties',\n            get: function get() {\n                var properties = {\n                    'rethrowError': {\n                        value: true,\n                        type: 'boolean',\n                        reflectToAttribute: false\n                    },\n                    'debugMode': {\n                        value: true,\n                        type: 'boolean',\n                        reflectToAttribute: false\n                    }\n                };\n\n                return properties;\n            }\n        }]);\n        return ErrorModule;\n    }();\n\n    /**\r\n     * This is a base class for data binding.\r\n     */\n\n\n    var BindingModule = function () {\n        function BindingModule() {\n            babelHelpers.classCallCheck(this, BindingModule);\n        }\n\n        babelHelpers.createClass(BindingModule, [{\n            key: 'getBindings',\n\n\n            /**\r\n             * @typedef {Object} bindings\r\n             * @property {Array<Node>} children The child nodes.\r\n             * @property {Node} node The node.\r\n             * @property {BindingData} data The node's binding data.\r\n             */\n\n            /**\r\n             * @typedef {Object} BindingData\r\n             * @property {Boolean} twoWay - Deterimes whether it's one way or two way data binding.\r\n             * @property {Boolean} updating - Determines whether the node is in update state.\r\n             * @property {Object}  value - The bound property's value.\r\n             * @property {String}  name - The bound property's name.\r\n             */\n            value: function getBindings(node) {\n                var that = this;\n\n                var index = 0;\n                var map = {};\n                var boundData = function (node) {\n                    if (node instanceof HTMLElement) {\n                        return that.parseAttributes(node);\n                    } else {\n                        var boundProperty = that.parseProperty(node.data, 'textContent', node);\n\n                        if (boundProperty) {\n                            if (node.parentNode === that.ownerElement.$.content) {\n                                boundProperty.value = that.ownerElement.$.html !== '' ? that.ownerElement.$.html : undefined;\n                                that.ownerElement.innerHTML = '';\n                            }\n\n                            return { 'textContent': boundProperty };\n                        }\n                    }\n\n                    return undefined;\n                }(node);\n\n                if (boundData) {\n                    map.data = boundData;\n                }\n\n                if (node.getAttribute) {\n                    map.nodeId = node.getAttribute('jqx-id');\n                }\n\n                map.node = node;\n\n                if (node.firstChild) {\n                    map.children = {};\n                }\n\n                for (var child = node.firstChild; child; child = child.nextSibling) {\n                    map.children[index++] = that.getBindings(child);\n                }\n\n                return map;\n            }\n\n            /**\r\n             * Parses the element's attributes.\r\n             * @param {HTMLElement} - html element.\r\n             * @return {Array<BindingData>}\r\n             */\n\n        }, {\n            key: 'parseAttributes',\n            value: function parseAttributes(htmlElement) {\n                var that = this;\n\n                var boundProperties = undefined;\n\n                for (var i = 0; i < htmlElement.attributes.length; i++) {\n                    var attribute = htmlElement.attributes[i];\n                    var attributeName = attribute.name;\n                    var attributeValue = attribute.value;\n                    if (!BindingModule.cache['toCamelCase' + attributeName]) {\n                        BindingModule.cache['toCamelCase' + attributeName] = Utilities.Core.toCamelCase(attributeName);\n                    }\n\n                    var propertyName = BindingModule.cache['toCamelCase' + attributeName];\n\n                    if (attributeName.indexOf('(') >= 0) {\n                        var eventName = attributeName.substring(1, attributeName.length - 1);\n                        that.ownerElement.templateListeners[htmlElement.getAttribute('jqx-id') + '.' + eventName] = attributeValue;\n                        htmlElement.removeAttribute(attributeName);\n                        continue;\n                    }\n\n                    var boundProperty = that.parseProperty(attributeValue, attributeName, htmlElement);\n                    if (!boundProperty) {\n                        continue;\n                    }\n\n                    if (!boundProperties) {\n                        boundProperties = {};\n                    }\n\n                    boundProperties[propertyName] = boundProperty;\n                }\n\n                return boundProperties;\n            }\n\n            /**\r\n             * Parses a property.\r\n             * @param {String} - The string to parse.\r\n             * @param {name} - property's name.\r\n             * @param {Node} - the node.\r\n             * @return {BindingData}\r\n             */\n\n        }, {\n            key: 'parseProperty',\n            value: function parseProperty(text, name, node) {\n                if (!text || !text.length) return;\n\n                var that = this;\n\n                var boundProperty = void 0;\n                var length = text.length;\n                var startIndex = 0,\n                    lastIndex = 0,\n                    endIndex = 0;\n                var twoWay = true;\n\n                while (lastIndex < length) {\n                    startIndex = text.indexOf('{{', lastIndex);\n                    var twoWayStart = text.indexOf('[[', lastIndex);\n                    var terminator = '}}';\n\n                    if (twoWayStart >= 0 && (startIndex < 0 || twoWayStart < startIndex)) {\n                        startIndex = twoWayStart;\n                        twoWay = false;\n                        terminator = ']]';\n                    }\n\n                    endIndex = startIndex < 0 ? -1 : text.indexOf(terminator, startIndex + 2);\n\n                    if (endIndex < 0) {\n                        return;\n                    }\n\n                    boundProperty = boundProperty || {};\n                    var pathString = text.slice(startIndex + 2, endIndex).trim();\n                    var attributeName = pathString;\n\n                    if (twoWay) {\n                        (function () {\n                            var updateToken = function updateToken(value) {\n                                boundProperty.value = value;\n\n                                if (node.$ && node.$.isNativeElement) {\n\n                                    if (!BindingModule.cache['toDash' + name]) {\n                                        BindingModule.cache['toDash' + name] = Utilities.Core.toDash(name);\n                                    }\n\n                                    var _attributeName = BindingModule.cache['toDash' + name];\n                                    var oldValue = node.$.getAttributeValue(_attributeName, boundProperty.type);\n\n                                    if (oldValue !== boundProperty.value) {\n                                        node.$.setAttributeValue(_attributeName, boundProperty.value, boundProperty.type);\n                                    }\n                                }\n                            };\n\n                            if (pathString.indexOf('::') >= 0) {\n                                var eventIndex = pathString.indexOf('::');\n                                var eventName = pathString.substring(eventIndex + 2);\n\n                                that.ownerElement['$' + node.getAttribute('jqx-id')].listen(eventName, function () {\n                                    updateToken(node[name]);\n\n                                    var boundPropertyName = boundProperty.name.substring(0, boundProperty.name.indexOf('::'));\n                                    that.updateBoundProperty(boundPropertyName, boundProperty);\n                                });\n                            }\n\n                            if (node instanceof window.JQX.BaseElement) {\n                                if (!BindingModule.cache['toDash' + name]) {\n                                    BindingModule.cache['toDash' + name] = Utilities.Core.toDash(name);\n                                }\n\n                                var _attributeName2 = BindingModule.cache['toDash' + name];\n                                var _propertyName = Utilities.Core.toCamelCase(_attributeName2);\n\n                                if (node._properties[_propertyName]) {\n                                    node._properties[_propertyName].notify = true;\n                                }\n\n                                that.ownerElement['$' + node.getAttribute('jqx-id')].listen(_attributeName2 + '-changed', function (event) {\n                                    var detail = event.detail;\n\n                                    updateToken(detail.value);\n\n                                    var context = that.ownerElement.context;\n\n                                    if (event.context !== document) {\n                                        that.ownerElement.context = that.ownerElement;\n                                    }\n\n                                    that.updateBoundProperty(name, boundProperty);\n\n                                    that.ownerElement.context = context;\n                                });\n                            }\n                        })();\n                    }\n\n                    boundProperty.name = attributeName;\n                    lastIndex = endIndex + 2;\n                }\n\n                var propertyName = boundProperty.name;\n                var elementProperty = that.ownerElement._properties[propertyName];\n\n                boundProperty.twoWay = twoWay;\n                boundProperty.ready = false;\n                that.ownerElement.boundProperties[propertyName] = true;\n\n                if (elementProperty) {\n                    boundProperty.type = elementProperty.type;\n                    boundProperty.reflectToAttribute = elementProperty.reflectToAttribute;\n                } else {\n                    boundProperty.type = 'string';\n                    boundProperty.reflectToAttribute = true;\n                }\n\n                return boundProperty;\n            }\n\n            /**\r\n             * Updates element's data bound nodes.\r\n             */\n\n        }, {\n            key: 'updateTextNodes',\n            value: function updateTextNodes() {\n                var that = this;\n\n                that.updateTextNode(that.ownerElement.shadowRoot || that.ownerElement, that.ownerElement.bindings, that.ownerElement);\n            }\n\n            /**\r\n             * Updates a data bound node.\r\n             * @param {Node} - The bound node.\r\n             * @param {Array<BindingData>} - The node's binding data.\r\n             * @param {Element} - The element to be updated.\r\n             */\n\n        }, {\n            key: 'updateTextNode',\n            value: function updateTextNode(node, bindings, element) {\n                var that = this;\n\n                if (!bindings) {\n                    return;\n                }\n\n                var index = 0;\n                for (var child = node.firstChild; child; child = child.nextSibling) {\n                    if (!bindings.children) {\n                        break;\n                    }\n\n                    that.updateTextNode(child, bindings.children[index++], element);\n                }\n\n                if (!bindings || !bindings.data) {\n                    return;\n                }\n\n                for (var name in bindings.data) {\n                    var boundProperty = bindings.data[name];\n                    var boundPropertyName = boundProperty.name;\n\n                    if (name !== 'textContent' || !boundProperty.twoWay || boundProperty.updating || boundProperty.value === undefined) {\n                        continue;\n                    }\n\n                    element[boundPropertyName] = boundProperty.value;\n                }\n            }\n\n            /**\r\n             * Updates a data bound property.\r\n             * @param {String} - The propery's name.\r\n             * @param {Object} - The property's value.\r\n             */\n\n        }, {\n            key: 'updateBoundProperty',\n            value: function updateBoundProperty(propertyName, propertyConfig) {\n                if (propertyConfig.updating) {\n                    return;\n                }\n\n                var that = this;\n                var element = that.ownerElement;\n\n                propertyConfig.updating = true;\n                element[propertyName] = propertyConfig.value;\n                propertyConfig.updating = false;\n            }\n\n            /**\r\n             * Updates element's data bound nodes.\r\n             */\n\n        }, {\n            key: 'updateBoundNodes',\n            value: function updateBoundNodes(propertyName) {\n                var that = this;\n\n                that.updateBoundNode(that.ownerElement.shadowRoot || that.ownerElement, that.ownerElement.bindings, that.ownerElement, propertyName);\n                if (that.ownerElement.detachedChildren.length > 0) {\n                    var _loop = function _loop(i) {\n                        var node = that.ownerElement.detachedChildren[i];\n                        var jqxId = node.getAttribute('jqx-id');\n\n                        var getBindings = function getBindings(bindings) {\n                            if (bindings.nodeId === jqxId) {\n                                return bindings;\n                            }\n\n                            for (var index in bindings.children) {\n                                var _node = bindings.children[index];\n                                var attribute = _node.getAttribute ? _node.getAttribute('jqx-id') : '';\n\n                                if (attribute === jqxId) {\n                                    return bindings;\n                                }\n\n                                if (_node.children) {\n                                    var result = getBindings(_node);\n                                    if (result) {\n                                        return result;\n                                    }\n                                }\n                            }\n\n                            return null;\n                        };\n\n                        var bindings = getBindings(that.ownerElement.bindings);\n\n                        if (bindings) {\n                            that.updateBoundNode(node, bindings, that.ownerElement, propertyName, true);\n                        }\n                    };\n\n                    for (var i = 0; i < that.ownerElement.detachedChildren.length; i++) {\n                        _loop(i);\n                    }\n                }\n            }\n\n            /**\r\n             * Updates a data bound node.\r\n             * @param {Node} - The bound node.\r\n             * @param {Array<BindingData>} - The node's binding data.\r\n             * @param {Element} - The element to be updated.\r\n             */\n\n        }, {\n            key: 'updateBoundNode',\n            value: function updateBoundNode(node, bindings, element, propertyName, detached) {\n                var that = this;\n\n                if (!bindings) {\n                    return;\n                }\n\n                var index = 0;\n                if (!detached) {\n                    for (var child = node.firstChild; child; child = child.nextSibling) {\n                        if (!bindings.children) {\n                            break;\n                        }\n\n                        that.updateBoundNode(child, bindings.children[index++], element, propertyName);\n                    }\n                }\n\n                if (!bindings || !bindings.data) {\n                    return;\n                }\n\n                var _loop2 = function _loop2(name) {\n                    var boundProperty = bindings.data[name];\n                    var boundPropertyName = boundProperty.name;\n                    if (boundProperty.updating) {\n                        return 'continue';\n                    }\n\n                    if (propertyName !== undefined && propertyName !== boundPropertyName) {\n                        return 'continue';\n                    }\n\n                    boundProperty.value = element[boundPropertyName];\n\n                    if (boundPropertyName === 'innerHTML') {\n                        if (node[name].toString().trim() !== element[boundPropertyName].toString().trim()) {\n                            if (boundProperty.ready) {\n                                node[name] = boundProperty.value.toString().trim();\n                            } else if (element._properties[boundPropertyName].defaultValue !== boundProperty.value) {\n                                node[name] = boundProperty.value.toString().trim();\n                            }\n                        }\n                    } else {\n                        node[name] = boundProperty.value;\n                    }\n\n                    if (node.$ && node.$.isNativeElement) {\n                        if (!BindingModule.cache['toDash' + name]) {\n                            BindingModule.cache['toDash' + name] = Utilities.Core.toDash(name);\n                        }\n\n                        var attributeName = BindingModule.cache['toDash' + name];\n                        var oldValue = node.$.getAttributeValue(attributeName, boundProperty.type);\n                        if (boundProperty.reflectToAttribute && (oldValue !== boundProperty.value || !boundProperty.ready)) {\n                            node.$.setAttributeValue(attributeName, boundProperty.value, boundProperty.type);\n                        }\n                        if (!boundProperty.reflectToAttribute) {\n                            node.$.setAttributeValue(attributeName, null, boundProperty.type);\n                        }\n                    }\n\n                    if (!boundProperty.ready) {\n                        if (node instanceof window.JQX.BaseElement) {\n                            var propertyConfig = node._properties[name];\n\n                            propertyConfig.isUpdating = true;\n\n                            if (boundProperty.reflectToAttribute) {\n                                node.$.setAttributeValue(propertyConfig.attributeName, boundProperty.value, boundProperty.type);\n                            }\n\n                            if (!boundProperty.reflectToAttribute) {\n                                node.$.setAttributeValue(propertyConfig.attributeName, null, boundProperty.type);\n                            }\n\n                            propertyConfig.isUpdating = false;\n                        }\n\n                        if (boundProperty.twoWay) {\n                            var updateToken = function updateToken(value) {\n                                boundProperty.value = value;\n\n                                if (node.$ && node.$.isNativeElement) {\n                                    if (!BindingModule.cache['toDash' + name]) {\n                                        BindingModule.cache['toDash' + name] = Utilities.Core.toDash(name);\n                                    }\n\n                                    var _attributeName3 = BindingModule.cache['toDash' + name];\n                                    var _oldValue = node.$.getAttributeValue(_attributeName3, boundProperty.type);\n\n                                    if (boundProperty.reflectToAttribute && _oldValue !== boundProperty.value) {\n                                        node.$.setAttributeValue(_attributeName3, boundProperty.value, boundProperty.type);\n                                    }\n                                    if (!boundProperty.reflectToAttribute) {\n                                        node.$.setAttributeValue(_attributeName3, null, boundProperty.type);\n                                    }\n                                }\n                            };\n\n                            if (boundProperty.name.indexOf('::') >= 0) {\n                                var eventIndex = boundProperty.name.indexOf('::');\n                                var eventName = boundProperty.name.substring(eventIndex + 2);\n\n                                that.ownerElement['$' + node.getAttribute('jqx-id')].listen(eventName, function () {\n                                    updateToken(node[name]);\n                                    that.updateBoundProperty(name, boundProperty);\n                                });\n                            }\n\n                            if (node instanceof window.JQX.BaseElement) {\n                                if (!BindingModule.cache['toDash' + name]) {\n                                    BindingModule.cache['toDash' + name] = Utilities.Core.toDash(name);\n                                }\n\n                                var _attributeName4 = BindingModule.cache['toDash' + name];\n\n                                that.ownerElement['$' + node.getAttribute('jqx-id')].listen(_attributeName4 + '-changed', function (event) {\n                                    var detail = event.detail;\n                                    updateToken(detail.value);\n\n                                    var context = that.ownerElement.context;\n\n                                    if (event.context !== document) {\n                                        that.ownerElement.context = that.ownerElement;\n                                    }\n\n                                    that.updateBoundProperty(name, boundProperty);\n\n                                    that.ownerElement.context = context;\n                                });\n                            }\n                        }\n                    }\n\n                    boundProperty.ready = true;\n                };\n\n                for (var name in bindings.data) {\n                    var _ret3 = _loop2(name);\n\n                    if (_ret3 === 'continue') continue;\n                }\n            }\n        }], [{\n            key: 'clearCache',\n            value: function clearCache() {\n                var that = this;\n\n                that.cache = {};\n            }\n        }, {\n            key: 'moduleName',\n            get: function get() {\n                return 'BindingModule';\n            }\n        }]);\n        return BindingModule;\n    }();\n\n    /** This is a class with utility methods for determing the type of a value. */\n\n\n    var Types = function () {\n        function Types() {\n            babelHelpers.classCallCheck(this, Types);\n        }\n\n        babelHelpers.createClass(Types, null, [{\n            key: 'isBoolean',\n\n            /**\r\n             * Determines whether a value is Boolean. \r\n             * @param {Object}.\r\n             * @return {Boolean}.\r\n             */\n            value: function isBoolean(value) {\n                return typeof value === 'boolean';\n            }\n\n            /**\r\n             * Determines whether a value is Function. \r\n             * @param {Object}.\r\n             * @return {Boolean}.\r\n             */\n\n        }, {\n            key: 'isFunction',\n            value: function isFunction(value) {\n                return !!(value && value.constructor && value.call && value.apply);\n            }\n\n            /**\r\n             * Determines whether a value is Array. \r\n             * @param {Object}.\r\n             * @return {Boolean}.\r\n             */\n\n        }, {\n            key: 'isArray',\n            value: function isArray(value) {\n                return Array.isArray(value);\n            }\n\n            /**\r\n             * Determines whether a value is Object. \r\n             * @param {Object}.\r\n             * @return {Boolean}.\r\n             */\n\n        }, {\n            key: 'isObject',\n            value: function isObject(value) {\n                var that = this;\n\n                return value && ((typeof value === 'undefined' ? 'undefined' : babelHelpers.typeof(value)) === 'object' || that.isFunction(value)) || false;\n            }\n\n            /**\r\n             * Determines whether a value is Date. \r\n             * @param {Object}.\r\n             * @return {Boolean}.\r\n             */\n\n        }, {\n            key: 'isDate',\n            value: function isDate(value) {\n                return value instanceof Date;\n            }\n\n            /**\r\n             * Determines whether a value is String. \r\n             * @param {Object}.\r\n             * @return {Boolean}.\r\n             */\n\n        }, {\n            key: 'isString',\n            value: function isString(value) {\n                return typeof value === 'string';\n            }\n\n            /**\r\n             * Determines whether a value is Number. \r\n             * @param {Object}.\r\n             * @return {Boolean}.\r\n             */\n\n        }, {\n            key: 'isNumber',\n            value: function isNumber(value) {\n                return typeof value === 'number';\n            }\n\n            /**\r\n             * Determines the type of an object.\r\n             * @param {Object}.\r\n             * @return {String} The value's type or undefined, if the type is unknown.\r\n             */\n\n        }, {\n            key: 'getType',\n            value: function getType(value) {\n                var that = this;\n\n                var types = ['Boolean', 'Number', 'String', 'Function', 'Array', 'Date', 'Object'];\n                var type = types.find(function (type) {\n                    if (that['is' + type](value)) {\n                        return type;\n                    }\n                });\n\n                return type ? type.toLowerCase() : undefined;\n            }\n        }]);\n        return Types;\n    }();\n\n    /** This is a class with utility methods. */\n\n\n    var Core = function () {\n        function Core() {\n            babelHelpers.classCallCheck(this, Core);\n        }\n\n        babelHelpers.createClass(Core, null, [{\n            key: 'toCamelCase',\n            value: function toCamelCase(value) {\n                return value.replace(/-([a-z])/g, function (g) {\n                    return g[1].toUpperCase();\n                });\n            }\n        }, {\n            key: 'toDash',\n            value: function toDash(value) {\n                return value.split(/(?=[A-Z])/).join('-').toLowerCase();\n            }\n        }, {\n            key: 'escapeHTML',\n            value: function escapeHTML(value) {\n                var entityMap = { '&': '&amp;', '<': '&lt;', '>': '&gt;', '\"': '&quot;', '\\'': '&#39;', '/': '&#x2F;', '`': '&#x60;', '=': '&#x3D;'\n                };\n\n                return String(value).replace(/[&<>\"'`=\\/]/g, function (s) {\n                    return entityMap[s];\n                });\n            }\n        }, {\n            key: 'CSSVariablesSupport',\n            value: function CSSVariablesSupport() {\n                return window.CSS && window.CSS.supports && window.CSS.supports('--fake-var', 0);\n            }\n        }, {\n            key: 'assign',\n            value: function assign(target, source) {\n                var _this = this;\n\n                var isObject = function isObject(item) {\n                    return item && (typeof item === 'undefined' ? 'undefined' : babelHelpers.typeof(item)) === 'object' && !Array.isArray(item) && item !== null;\n                };\n\n                var output = Object.assign({}, target);\n                if (isObject(target) && isObject(source)) {\n                    Object.keys(source).forEach(function (key) {\n                        if (isObject(source[key])) {\n                            if (!(key in target)) {\n                                Object.assign(output, babelHelpers.defineProperty({}, key, source[key]));\n                            } else {\n                                output[key] = _this.assign(target[key], source[key]);\n                            }\n                        } else {\n                            Object.assign(output, babelHelpers.defineProperty({}, key, source[key]));\n                        }\n                    });\n                }\n\n                return output;\n            }\n        }, {\n            key: 'html',\n            value: function html(node, htmlString) {\n                var that = this;\n\n                var output = '';\n                var nodes = node.childNodes;\n\n                if (htmlString) {\n                    var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi;\n\n                    node.innerHTML = htmlString.replace(rxhtmlTag, '<$1></$2>');\n                    return;\n                }\n\n                for (var i = 0, l = nodes.length, child; i < l && (child = nodes[i]); i++) {\n                    var miscElements = ['strong'];\n\n                    if (child instanceof HTMLElement || child.tagName && miscElements.indexOf(child.tagName.toLowerCase()) >= 0) {\n                        var tagName = child.tagName.toLowerCase();\n                        var attrs = child.attributes;\n\n                        var nodeOutput = '<' + tagName;\n\n                        for (var j = 0, attr; attr = attrs[j]; j++) {\n                            nodeOutput += ' ' + attr.name + '=\"' + attr.value.replace(/[&\\u00A0\"]/g, Utilities.Core.escapeHTML) + '\"';\n                        }\n\n                        nodeOutput += '>';\n\n                        var voidElements = ['area', 'base', 'br', 'col', 'command', 'embed', 'hr', 'img', 'input', 'keygen', 'link', 'meta', 'param', 'source', 'track', 'wbr'];\n\n                        if (voidElements[tagName]) {\n                            output += nodeOutput;\n                        }\n\n                        output = output + nodeOutput + that.html(child) + '</' + tagName + '>';\n                    } else {\n                        output += child.data.replace(/[&\\u00A0<>]/g, Utilities.Core.escapeHTML);\n                    }\n                }\n                return output;\n            }\n        }, {\n            key: 'isMobile',\n            get: function get() {\n                var isMobile = /(iphone|ipod|ipad|android|iemobile|blackberry|bada)/.test(window.navigator.userAgent.toLowerCase());\n\n                return isMobile;\n            }\n        }, {\n            key: 'Browser',\n            get: function get() {\n                var versionSearchString = void 0;\n\n                var browser = function browser() {\n                    var data = [{ string: navigator.userAgent, subString: 'Edge', identity: 'Edge' }, { string: navigator.userAgent, subString: 'MSIE', identity: 'IE' }, { string: navigator.userAgent, subString: 'Trident', identity: 'IE' }, { string: navigator.userAgent, subString: 'Firefox', identity: 'Firefox' }, { string: navigator.userAgent, subString: 'Opera', identity: 'Opera' }, { string: navigator.userAgent, subString: 'OPR', identity: 'Opera' }, { string: navigator.userAgent, subString: 'Chrome', identity: 'Chrome' }, { string: navigator.userAgent, subString: 'Safari', identity: 'Safari' }];\n\n                    for (var i = 0; i < data.length; i++) {\n                        var dataString = data[i].string;\n                        versionSearchString = data[i].subString;\n\n                        if (dataString.indexOf(data[i].subString) !== -1) {\n                            return data[i].identity;\n                        }\n                    }\n\n                    return 'Other';\n                };\n\n                var version = function version(dataString) {\n                    var index = dataString.indexOf(versionSearchString);\n                    if (index === -1) {\n                        return;\n                    }\n\n                    var rv = dataString.indexOf('rv:');\n\n                    if (versionSearchString === 'Trident' && rv !== -1) {\n                        return parseFloat(dataString.substring(rv + 3));\n                    } else {\n                        return parseFloat(dataString.substring(index + versionSearchString.length + 1));\n                    }\n                };\n\n                var result = {};\n\n                result[browser()] = true;\n                result.version = version(navigator.userAgent) || version(navigator.appVersion) || 'Unknown';\n\n                return result;\n            }\n        }]);\n        return Core;\n    }();\n\n    var styleObservedElements = [];\n\n    var StyleObserver = function () {\n        function StyleObserver() {\n            babelHelpers.classCallCheck(this, StyleObserver);\n        }\n\n        babelHelpers.createClass(StyleObserver, null, [{\n            key: 'watch',\n            value: function watch(element) {\n                styleObservedElements.push(element);\n\n                if (StyleObserver.interval) {\n                    clearInterval(StyleObserver.interval);\n                }\n\n                StyleObserver.interval = setInterval(function () {\n                    StyleObserver.observe();\n                }, 100);\n            }\n        }, {\n            key: 'observeElement',\n            value: function observeElement(element) {\n                var that = element;\n\n                var computedStyle = document.defaultView.getComputedStyle(that, null);\n                var canRaiseResize = true;\n                var styleProperties = ['paddingLeft', 'paddingRight', 'paddingTop', 'paddingBottom', 'borderLeftWidth', 'borderRightWidth', 'borderTopWidth', 'borderBottomWidth', 'display', 'visibility', 'font-size', 'font-family', 'font-style', 'font-weight'];\n\n                if (!that._styleInfo) {\n                    that._styleInfo = [];\n\n                    for (var i = 0; i < styleProperties.length; i++) {\n                        var styleProperty = styleProperties[i];\n\n                        that._styleInfo[styleProperty] = computedStyle[styleProperty];\n                    }\n\n                    return;\n                }\n\n                if (!element.isHidden) {\n                    if (computedStyle['display'] !== 'none') {\n                        if (element.offsetWidth === 0 || element.offsetHeight === 0) {\n                            element.isHidden = true;\n                        }\n                    }\n                }\n\n                if (element.isHidden) {\n                    element.visibilityChangedHandler();\n\n                    if (!element.isHidden) {\n                        canRaiseResize = false;\n                    } else {\n                        return;\n                    }\n                }\n\n                var changedStyleProperties = [];\n\n                for (var _i = 0; _i < styleProperties.length; _i++) {\n                    var _styleProperty = styleProperties[_i];\n\n                    if (that._styleInfo[_styleProperty] !== computedStyle[_styleProperty]) {\n                        changedStyleProperties[_styleProperty] = { oldValue: that._styleInfo[_styleProperty], value: computedStyle[_styleProperty] };\n                        changedStyleProperties.length++;\n                    }\n\n                    that._styleInfo[_styleProperty] = computedStyle[_styleProperty];\n                }\n\n                if (changedStyleProperties.length > 0) {\n                    that.$.fireEvent('styleChanged', {\n                        styleProperties: changedStyleProperties\n                    }, {\n                        bubbles: false,\n                        cancelable: true\n                    });\n\n                    if (changedStyleProperties['display'] && canRaiseResize) {\n                        that.$.fireEvent('resize', that, {\n                            bubbles: false,\n                            cancelable: true\n                        });\n                    }\n                }\n            }\n        }, {\n            key: 'observe',\n            value: function observe() {\n                for (var i = 0; i < styleObservedElements.length; i++) {\n                    var that = styleObservedElements[i];\n                    this.observeElement(that);\n                }\n            }\n        }, {\n            key: 'unwatch',\n            value: function unwatch(element) {\n                if (StyleObserver.interval) {\n                    clearInterval(StyleObserver.interval);\n                }\n\n                styleObservedElements = styleObservedElements.splice(styleObservedElements.indexOf(element), 1);\n\n                if (styleObservedElements.length > 0) {\n                    StyleObserver.interval = setInterval(function () {\n                        StyleObserver.observe();\n                    }, 100);\n                }\n            }\n        }]);\n        return StyleObserver;\n    }();\n\n    var inputEventTypes = ['resize', 'down', 'up', 'move', 'tap', 'taphold', 'swipeleft', 'swiperight', 'swipetop', 'swipebottom'];\n\n    /** This is a class which extends an element and adds custom input events to it. */\n\n    var InputEvents = function () {\n        function InputEvents(target) {\n            babelHelpers.classCallCheck(this, InputEvents);\n\n            var that = this;\n\n            that.target = target;\n            that.$target = new _Extend(target);\n            that.$document = new _Extend(document);\n            that.id = (Date.now().toString(36) + Math.random().toString(36).substr(2, 5)).toUpperCase();\n            // that.target === document ? '' : that.target.id || that.target.getAttribute('jqx-id');\n\n            var result = { handlers: {}, boundEventTypes: [], listen: that.listen.bind(that), unlisten: that.unlisten.bind(that) };\n\n            //The taphold delay. If this delay is passed then taphold event will be fired.\n            that.tapHoldDelay = 750;\n            //Defines the minimum swipe distance required by the plugin.\n            that.swipeMin = 10;\n            //Defines the maximum swipe distance. After it is passed the propagation of the event will be restored, therefore the scrolling will be available.\n            that.swipeMax = 5000;\n            //The swipe delay. After it is passed swipe event won't be fired.\n            that.swipeDelay = 1000;\n            //The taphold delay. If this delay is passed then taphold event will be fired.\n            that.tapHoldDelay = 750;\n\n            that.inputEventProperties = ['clientX', 'clientY', 'pageX', 'pageY', 'screenX', 'screenY'];\n\n            inputEventTypes.forEach(function (eventType) {\n                result[eventType] = function (handler) {\n                    result.handlers[eventType] = handler;\n                };\n\n                that[eventType] = function (event) {\n                    if (!result.handlers[event.type]) {\n                        if ((event.type === 'mousemove' || event.type === 'pointermove' || event.type === 'touchmove') && result.handlers['move']) {\n                            var moveEvent = that.createEvent(event, 'move');\n                            result.handlers['move'](moveEvent);\n                        }\n\n                        return true;\n                    }\n\n                    return result.handlers[event.type](event);\n                };\n            });\n\n            that.listen();\n\n            that.handlers = result.handlers;\n\n            return result;\n        }\n\n        babelHelpers.createClass(InputEvents, [{\n            key: 'listen',\n            value: function listen(eventType) {\n                var that = this;\n\n                if (eventType === 'resize') {\n                    if (!that.target.resizeTrigger && that.target !== document && that.target !== window) {\n                        var container = document.createElement('div');\n                        container.className = 'jqx-resize-trigger-container';\n                        container.innerHTML = '<div class=\"jqx-resize-trigger-container\">' + '<div class=\"jqx-resize-trigger\"></div>' + '</div>' + '<div class=\"jqx-resize-trigger-container\">' + '<div class=\"jqx-resize-trigger-shrink\"></div>' + '</div>';\n\n                        that.target.appendChild(container);\n                        that.target.resizeTrigger = container;\n\n                        var expand = container.childNodes[0];\n                        var expandChild = expand.childNodes[0];\n                        var shrink = container.childNodes[1];\n                        var reset = function reset() {\n                            expandChild.style.width = '100000px';\n                            expandChild.style.height = '100000px';\n\n                            expand.scrollLeft = 100000;\n                            expand.scrollTop = 100000;\n\n                            shrink.scrollLeft = 100000;\n                            shrink.scrollTop = 100000;\n                        };\n\n                        var dirty = void 0,\n                            requestAnimationFrameId = void 0,\n                            newWidth = void 0,\n                            newHeight = void 0;\n\n                        var lastWidth = that.target.offsetWidth;\n                        var lastHeight = that.target.offsetHeight;\n\n                        reset();\n\n                        that.target.resizeHandler = function () {\n                            if (!requestAnimationFrameId) {\n                                requestAnimationFrameId = requestAnimationFrame(function () {\n                                    requestAnimationFrameId = 0;\n                                    newWidth = that.target.offsetWidth;\n                                    newHeight = that.target.offsetHeight;\n                                    dirty = newWidth !== lastWidth || newHeight !== lastHeight;\n                                    if (that.target.requiresLayout) {\n                                        dirty = true;\n                                    }\n\n                                    if (!dirty) {\n                                        return;\n                                    }\n\n                                    lastWidth = newWidth;\n                                    lastHeight = newHeight;\n\n                                    var resizeEvent = new CustomEvent('resize', {\n                                        bubbles: false,\n                                        cancelable: true\n                                    });\n\n                                    that.resize(resizeEvent);\n\n                                    that.target.requiresLayout = false;\n                                });\n                            }\n\n                            reset();\n                        };\n\n                        expand.addEventListener('scroll', that.target.resizeHandler);\n                        shrink.addEventListener('scroll', that.target.resizeHandler);\n                    }\n                }\n\n                if (that.isListening) {\n                    return;\n                }\n\n                that.isListening = true;\n                that.isPressed = false;\n                that.isReleased = false;\n                that.isInBounds = false;\n\n                if (window.PointerEvent) {\n                    that.$target.listen('pointerdown.inputEvents' + that.id, that.pointerDown.bind(that));\n                    that.$target.listen('pointerup.inputEvents' + that.id, that.pointerUp.bind(that));\n                    that.$target.listen('pointermove.inputEvents' + that.id, that.pointerMove.bind(that));\n                    that.$target.listen('pointercancel.inputEvents' + that.id, that.pointerCancel.bind(that));\n                } else {\n                    var hasTouch = 'ontouchstart' in window;\n\n                    if (hasTouch) {\n                        that.$target.listen('touchmove.inputEvents' + that.id, that.touchMove.bind(that));\n                        that.$target.listen('touchstart.inputEvents' + that.id, that.touchStart.bind(that));\n                        that.$target.listen('touchend.inputEvents' + that.id, that.touchEnd.bind(that));\n                        that.$target.listen('touchcancel.inputEvents' + that.id, that.touchCancel.bind(that));\n                    }\n\n                    that.$target.listen('mousedown.inputEvents' + that.id, that.mouseDown.bind(that));\n                    that.$target.listen('mouseup.inputEvents' + that.id, that.mouseUp.bind(that));\n                    that.$target.listen('mousemove.inputEvents' + that.id, that.mouseMove.bind(that));\n                    that.$target.listen('mouseleave.inputEvents' + that.id, that.mouseLeave.bind(that));\n                }\n\n                that.$document.listen('mouseup.inputEvents' + that.id, that.handleDocumentUp.bind(that));\n            }\n        }, {\n            key: 'unlisten',\n            value: function unlisten(eventType) {\n                var that = this;\n\n                that.isListening = false;\n\n                if (window.PointerEvent) {\n                    that.$target.unlisten('pointerdown.inputEvents' + that.id);\n                    that.$target.unlisten('pointerup.inputEvents' + that.id);\n                    that.$target.unlisten('pointermove.inputEvents' + that.id);\n                    that.$target.unlisten('pointercancel.inputEvents' + that.id);\n                } else {\n                    var hasTouch = 'ontouchstart' in window;\n                    if (hasTouch) {\n                        that.$target.unlisten('touchstart.inputEvents' + that.id);\n                        that.$target.unlisten('touchmove.inputEvents' + that.id);\n                        that.$target.unlisten('touchend.inputEvents' + that.id);\n                        that.$target.unlisten('touchcancel.inputEvents' + that.id);\n                    }\n\n                    that.$target.unlisten('mousedown.inputEvents' + that.id);\n                    that.$target.unlisten('mouseup.inputEvents' + that.id);\n                    that.$target.unlisten('mousemove.inputEvents' + that.id);\n                    that.$target.unlisten('mouseleave.inputEvents' + that.id);\n                }\n\n                that.$document.unlisten('mouseup.inputEvents' + that.id, that.handleDocumentUp);\n\n                if (eventType === 'resize' && that.target.resizeTrigger) {\n                    var container = that.target.resizeTrigger;\n                    var expand = container.childNodes[0];\n                    var shrink = container.childNodes[1];\n\n                    expand.removeEventListener('scroll', that.target.resizeHandler);\n                    shrink.removeEventListener('scroll', that.target.resizeHandler);\n\n                    that.target.resizeHandler = null;\n                    that.target.removeChild(container);\n                    delete that.target.resizeTrigger;\n                }\n            }\n        }, {\n            key: 'handleDocumentUp',\n            value: function handleDocumentUp(event) {\n                var that = this;\n\n                that.isPressed = false;\n                that.isReleased = false;\n                that.resetSwipe(event);\n            }\n        }, {\n            key: 'createEvent',\n            value: function createEvent(event, eventType) {\n                var that = this;\n                var touches = event.touches;\n                var changedTouches = event.changedTouches;\n                var touch = touches && touches.length ? touches[0] : changedTouches && changedTouches.length ? changedTouches[0] : undefined;\n                var customEvent = new CustomEvent(eventType, {\n                    bubbles: true,\n                    cancelable: true\n                });\n                customEvent.originalEvent = event;\n                if (touch) {\n                    for (var j = 0; j < that.inputEventProperties.length; j++) {\n                        var key = that.inputEventProperties[j];\n\n                        customEvent[key] = touch[key];\n                    }\n\n                    return customEvent;\n                }\n\n                for (var _key in event) {\n                    if (!(_key in customEvent)) {\n                        customEvent[_key] = event[_key];\n                    }\n                }\n\n                return customEvent;\n            }\n        }, {\n            key: 'fireTap',\n            value: function fireTap(event) {\n                var that = this;\n\n                clearTimeout(this.tapHoldTimeout);\n                if (!this.tapHoldFired && this.isInBounds) {\n                    var tap = that.createEvent(event, 'tap');\n                    that.tap(tap);\n                }\n            }\n        }, {\n            key: 'initTap',\n            value: function initTap(event) {\n                var that = this;\n\n                that.isInBounds = true;\n                that.tapHoldFired = false;\n                that.tapHoldTimeout = setTimeout(function () {\n                    if (that.isInBounds) {\n                        that.tapHoldFired = true;\n                        var taphold = that.createEvent(event, 'taphold');\n                        that.taphold(taphold);\n                    }\n                }, that.tapHoldDelay);\n            }\n        }, {\n            key: 'pointerDown',\n            value: function pointerDown(event) {\n                var that = this;\n\n                return that.handleDown(event);\n            }\n        }, {\n            key: 'mouseDown',\n            value: function mouseDown(event) {\n                var that = this;\n\n                if (that.isPressed || that.touchStartTime && new Date() - that.touchStartTime < 500) {\n                    return;\n                }\n\n                return that.handleDown(event);\n            }\n        }, {\n            key: 'touchStart',\n            value: function touchStart(event) {\n                var that = this;\n\n                that.touchStartTime = new Date();\n                that.isTouchMoved = true;\n\n                return that.handleDown(event);\n            }\n        }, {\n            key: 'mouseUp',\n            value: function mouseUp(event) {\n                var that = this;\n\n                if (that.isReleased || that.touchEndTime && new Date() - that.touchEndTime < 500) {\n                    return;\n                }\n\n                return that.handleUp(event);\n            }\n        }, {\n            key: 'handleDown',\n            value: function handleDown(event) {\n                var that = this;\n\n                that.isReleased = false;\n                that.isPressed = true;\n\n                var down = that.createEvent(event, 'down');\n\n                if (that.handlers['tap'] || that.handlers['taphold']) {\n                    that.initTap(down);\n                }\n\n                if (that.handlers['swipeleft'] || that.handlers['swiperight'] || that.handlers['swipetop'] || that.handlers['swipebottom']) {\n                    that.initSwipe(down);\n                }\n\n                return that.down(down);\n            }\n        }, {\n            key: 'handleUp',\n            value: function handleUp(event) {\n                var that = this;\n\n                that.isReleased = true;\n                that.isPressed = false;\n\n                var up = that.createEvent(event, 'up');\n                var result = that.up(up);\n\n                if (that.handlers['tap'] || that.handlers['taphold']) {\n                    that.fireTap(up);\n                }\n\n                that.resetSwipe(up);\n\n                return result;\n            }\n        }, {\n            key: 'handleMove',\n            value: function handleMove(event) {\n                var that = this;\n\n                var eventResult = that.move(event);\n\n                if (that.isPressed) {\n                    that._maxSwipeVerticalDistance = Math.max(that._maxSwipeVerticalDistance, Math.abs(that._startY - event.pageY));\n                    that._maxSwipeHorizontalDistance = Math.max(that._maxSwipeHorizontalDistance, Math.abs(that._startX - event.pageX));\n                    eventResult = that.handleSwipeEvents(event);\n                }\n\n                return eventResult;\n            }\n        }, {\n            key: 'touchEnd',\n            value: function touchEnd(event) {\n                var that = this;\n\n                that.touchEndTime = new Date();\n                return that.handleUp(event);\n            }\n        }, {\n            key: 'pointerUp',\n            value: function pointerUp(event) {\n                var that = this;\n\n                return that.handleUp(event);\n            }\n        }, {\n            key: 'pointerCancel',\n            value: function pointerCancel(event) {\n                var that = this;\n\n                that.pointerUp(event);\n            }\n        }, {\n            key: 'touchCancel',\n            value: function touchCancel(event) {\n                var that = this;\n\n                that.touchEnd(event);\n            }\n        }, {\n            key: 'mouseLeave',\n            value: function mouseLeave() {\n                var that = this;\n\n                that.isInBounds = false;\n            }\n        }, {\n            key: 'mouseMove',\n            value: function mouseMove(event) {\n                var that = this;\n\n                if (that.isTouchMoved) {\n                    return;\n                }\n\n                return that.handleMove(event);\n            }\n        }, {\n            key: 'pointerMove',\n            value: function pointerMove(event) {\n                var that = this;\n\n                return that.handleMove(event);\n            }\n        }, {\n            key: 'touchMove',\n            value: function touchMove(event) {\n                var that = this;\n                var touches = event.touches;\n                var changedTouches = event.changedTouches;\n                var touch = touches && touches.length ? touches[0] : changedTouches && changedTouches.length ? changedTouches[0] : undefined;\n\n                for (var j = 0; j < that.inputEventProperties.length; j++) {\n                    var key = that.inputEventProperties[j];\n\n                    if (event[key] === undefined) {\n                        event[key] = touch[key];\n                    }\n                }\n\n                that.isTouchMoved = true;\n\n                return that.handleMove(event);\n            }\n        }, {\n            key: 'handleSwipeEvents',\n            value: function handleSwipeEvents(event) {\n                var that = this;\n\n                var eventResult = true;\n\n                if (that.handlers['swipetop'] || that.handlers['swipebottom']) {\n                    eventResult = this.handleVerticalSwipeEvents(event);\n                }\n\n                if (eventResult === false) {\n                    return eventResult;\n                }\n\n                if (that.handlers['swipeleft'] || that.handlers['swiperight']) {\n                    eventResult = this.handleHorizontalSwipeEvents(event);\n                }\n\n                return eventResult;\n            }\n        }, {\n            key: 'handleVerticalSwipeEvents',\n            value: function handleVerticalSwipeEvents(event) {\n                var current = void 0,\n                    diff = void 0;\n                current = event.pageY;\n                diff = current - this._startY;\n\n                return this.swiped(event, diff, 'vertical');\n            }\n        }, {\n            key: 'handleHorizontalSwipeEvents',\n            value: function handleHorizontalSwipeEvents(event) {\n                var current = void 0,\n                    diff = void 0;\n                current = event.pageX;\n                diff = current - this._startX;\n\n                return this.swiped(event, diff, 'horizontal');\n            }\n        }, {\n            key: 'swiped',\n            value: function swiped(event, diff, direction) {\n                var that = this;\n\n                direction = direction || 0;\n                if (Math.abs(diff) >= that.swipeMin && !that._swipeEvent && !that._swipeLocked) {\n                    var eventType = diff < 0 ? 'swipeleft' : 'swiperight';\n                    if (direction === 'horizontal') {\n                        that._swipeEvent = that.createEvent(event, eventType);\n                    } else {\n                        eventType = diff < 0 ? 'swipetop' : 'swipebottom';\n                        that._swipeEvent = that.createEvent(event, diff < 0 ? 'swipetop' : 'swipebottom');\n                    }\n\n                    if (that[eventType]) {\n                        that[eventType](this._swipeEvent);\n                        if (Math.abs(diff) <= this.swipeMax) {\n                            event.stopImmediatePropagation();\n                            return false;\n                        }\n                    }\n                }\n\n                return true;\n            }\n        }, {\n            key: 'resetSwipe',\n            value: function resetSwipe() {\n                var that = this;\n\n                that._swipeEvent = null;\n                clearTimeout(this._swipeTimeout);\n            }\n        }, {\n            key: 'initSwipe',\n            value: function initSwipe(event) {\n                var that = this;\n\n                that._maxSwipeVerticalDistance = 0;\n                that._maxSwipeHorizontalDistance = 0;\n                that._startX = event.pageX;\n                that._startY = event.pageY;\n                that._swipeLocked = false;\n                that._swipeEvent = null;\n                that._swipeTimeout = setTimeout(function () {\n                    that._swipeLocked = true;\n                }, that.swipeDelay);\n            }\n        }]);\n        return InputEvents;\n    }();\n\n    var Scroll = function () {\n        babelHelpers.createClass(Scroll, [{\n            key: 'scrollWidth',\n            get: function get() {\n                var that = this;\n\n                if (that.horizontalScrollBar) {\n                    return that.horizontalScrollBar.max;\n                }\n\n                return -1;\n            },\n            set: function set(value) {\n                var that = this;\n\n                if (value < 0) {\n                    value = 0;\n                }\n\n                if (that.horizontalScrollBar) {\n                    that.horizontalScrollBar.max = value;\n                }\n            }\n        }, {\n            key: 'scrollHeight',\n            get: function get() {\n                var that = this;\n\n                if (that.verticalScrollBar) {\n                    return that.verticalScrollBar.max;\n                }\n\n                return -1;\n            },\n            set: function set(value) {\n                var that = this;\n\n                if (value < 0) {\n                    value = 0;\n                }\n\n                if (that.verticalScrollBar) {\n                    that.verticalScrollBar.max = value;\n                }\n            }\n        }, {\n            key: 'scrollLeft',\n            get: function get() {\n                var that = this;\n\n                if (that.horizontalScrollBar) {\n                    return that.horizontalScrollBar.value;\n                }\n\n                return -1;\n            },\n            set: function set(value) {\n                var that = this;\n\n                if (value < 0) {\n                    value = 0;\n                }\n\n                if (that.horizontalScrollBar) {\n                    that.horizontalScrollBar.value = value;\n                }\n            }\n        }, {\n            key: 'scrollTop',\n            get: function get() {\n                var that = this;\n\n                if (that.verticalScrollBar) {\n                    return that.verticalScrollBar.value;\n                }\n\n                return -1;\n            },\n            set: function set(value) {\n                var that = this;\n\n                if (value < 0) {\n                    value = 0;\n                }\n\n                if (that.verticalScrollBar) {\n                    that.verticalScrollBar.value = value;\n                }\n            }\n        }, {\n            key: 'vScrollBar',\n            get: function get() {\n                var that = this;\n\n                return that.verticalScrollBar;\n            }\n        }, {\n            key: 'hScrollBar',\n            get: function get() {\n                var that = this;\n\n                return that.horizontalScrollBar;\n            }\n        }]);\n\n        function Scroll(container, horizontalScrollBar, verticalScrollBar) {\n            babelHelpers.classCallCheck(this, Scroll);\n\n            var that = this;\n            var isMobile = Core.isMobile;\n\n            that.inputEvents = new InputEvents(container);\n            that.horizontalScrollBar = horizontalScrollBar;\n            that.verticalScrollBar = verticalScrollBar;\n\n            var dragStarted = void 0,\n                rafId = void 0,\n                pointerCaptured = void 0,\n                timestamp = void 0,\n                ticker = void 0,\n                now = void 0,\n                elapsed = void 0,\n                timeConstant = 500,\n                currentScrollInfo = void 0;\n\n            var createScrollInfo = function createScrollInfo(scrollBar) {\n                return {\n                    amplitude: 0,\n                    delta: 0,\n                    initialValue: 0,\n                    min: 0,\n                    max: scrollBar.max,\n                    previousValue: 0,\n                    pointerPosition: 0,\n                    targetValue: 0,\n                    scrollBar: scrollBar,\n                    value: 0,\n                    velocity: 0\n                };\n            };\n\n            var hScrollInfo = createScrollInfo(horizontalScrollBar);\n            var vScrollInfo = createScrollInfo(verticalScrollBar);\n\n            var track = function track() {\n                now = Date.now();\n                elapsed = now - timestamp;\n                timestamp = now;\n\n                var updateScrollInfo = function updateScrollInfo(scrollInfo) {\n                    scrollInfo.delta = scrollInfo.value - scrollInfo.previousValue;\n                    scrollInfo.previousValue = scrollInfo.value;\n                    var velocity = 1000 * scrollInfo.delta / (1 + elapsed);\n                    scrollInfo.velocity = 0.8 * velocity + 0.2 * scrollInfo.velocity;\n                };\n\n                updateScrollInfo(vScrollInfo);\n                updateScrollInfo(hScrollInfo);\n            };\n\n            var scroll = function scroll(value) {\n                currentScrollInfo.value = value > currentScrollInfo.max ? currentScrollInfo.max : value < currentScrollInfo.min ? currentScrollInfo.min : value;\n                currentScrollInfo.scrollBar.value = currentScrollInfo.value;\n\n                return value > currentScrollInfo.max ? 'max' : value < currentScrollInfo.min ? 'min' : 'value';\n            };\n\n            function autoScroll() {\n                var elapsed, delta;\n                if (currentScrollInfo.amplitude) {\n                    elapsed = Date.now() - timestamp;\n                    delta = -currentScrollInfo.amplitude * Math.exp(-elapsed / timeConstant);\n                    if (delta > 5 || delta < -5) {\n                        scroll(currentScrollInfo.targetValue + delta);\n                        cancelAnimationFrame(rafId);\n                        rafId = 0;\n                        rafId = requestAnimationFrame(autoScroll);\n                    } else {\n                        scroll(currentScrollInfo.targetValue);\n                    }\n                }\n            }\n\n            that.inputEvents['down'](function (event) {\n                if (!isMobile) {\n                    return;\n                }\n\n                pointerCaptured = true;\n                dragStarted = false;\n\n                var updateScrollInfo = function updateScrollInfo(scrollInfo, pointerPosition) {\n                    scrollInfo.amplitude = 0;\n                    scrollInfo.pointerPosition = pointerPosition;\n                    scrollInfo.previousValue = scrollInfo.value;\n                    scrollInfo.value = scrollInfo.scrollBar.value;\n                    scrollInfo.initialValue = scrollInfo.value;\n                    scrollInfo.max = scrollInfo.scrollBar.max;\n                };\n\n                updateScrollInfo(vScrollInfo, event.clientY);\n                updateScrollInfo(hScrollInfo, event.clientX);\n\n                timestamp = Date.now();\n                clearInterval(ticker);\n                ticker = setInterval(track, timeConstant);\n            });\n\n            that.inputEvents['up'](function () {\n                if (!pointerCaptured) {\n                    return true;\n                }\n\n                clearInterval(ticker);\n\n                var startScroll = function startScroll(scrollInfo) {\n                    currentScrollInfo = scrollInfo;\n                    scrollInfo.amplitude = 0.8 * scrollInfo.velocity;\n                    scrollInfo.targetValue = Math.round(scrollInfo.value + scrollInfo.amplitude);\n                    timestamp = Date.now();\n                    cancelAnimationFrame(rafId);\n                    rafId = requestAnimationFrame(autoScroll);\n                    scrollInfo.velocity = 0;\n                };\n\n                if (vScrollInfo.velocity > 10 || vScrollInfo.velocity < -10) {\n                    startScroll(vScrollInfo);\n                } else if (hScrollInfo.velocity > 10 || hScrollInfo.velocity < -10) {\n                    startScroll(hScrollInfo);\n                }\n\n                pointerCaptured = false;\n            });\n\n            that.inputEvents['move'](function (event) {\n                if (!pointerCaptured) {\n                    return true;\n                }\n\n                if (dragStarted) {\n                    event.originalEvent.preventDefault();\n                    event.originalEvent.stopPropagation();\n                }\n\n                hScrollInfo.visible = horizontalScrollBar.offsetHeight > 0;\n                vScrollInfo.visible = verticalScrollBar.offsetWidth > 0;\n\n                if (!pointerCaptured || !hScrollInfo.visible && !vScrollInfo.visible) {\n                    return;\n                }\n\n                vScrollInfo.ratio = -vScrollInfo.max / vScrollInfo.scrollBar.offsetHeight;\n                vScrollInfo.delta = (event.clientY - vScrollInfo.pointerPosition) * vScrollInfo.ratio;\n\n                hScrollInfo.ratio = -hScrollInfo.max / hScrollInfo.scrollBar.offsetWidth;\n                hScrollInfo.delta = (event.clientX - hScrollInfo.pointerPosition) * hScrollInfo.ratio;\n\n                var dragged = 'value';\n\n                var doDrag = function doDrag(scrollInfo, pointerPosition, event) {\n                    if (scrollInfo.delta > 5 || scrollInfo.delta < -5) {\n                        currentScrollInfo = scrollInfo;\n\n                        dragged = scrollInfo.initialValue + scrollInfo.delta > currentScrollInfo.max ? 'max' : scrollInfo.initialValue + scrollInfo.delta < currentScrollInfo.min ? 'min' : 'value';\n\n                        if (dragged === 'min' && scrollInfo.initialValue === 0) {\n                            return true;\n                        }\n\n                        if (dragged === 'max' && scrollInfo.initialValue === scrollInfo.max) {\n                            return true;\n                        }\n\n                        if (!scrollInfo.visible) {\n                            return true;\n                        }\n\n                        scroll(scrollInfo.initialValue + scrollInfo.delta);\n                        track();\n\n                        event.originalEvent.preventDefault();\n                        event.originalEvent.stopPropagation();\n                        dragStarted = true;\n\n                        return false;\n                    }\n\n                    return null;\n                };\n\n                var verticalDragResult = doDrag(vScrollInfo, event.clientY, event);\n                if (verticalDragResult === null) {\n                    var horizontalDragResult = doDrag(hScrollInfo, event.clientX, event);\n                    if (horizontalDragResult !== null) {\n                        return horizontalDragResult;\n                    }\n                } else {\n                    return verticalDragResult;\n                }\n            });\n\n            var elapsedScrollTo = Date.now();\n\n            that.scrollTo = function (value, vertically) {\n                if (!timestamp) {\n                    timestamp = Date.now();\n                }\n\n                if (!elapsedScrollTo) {\n                    elapsedScrollTo = Date.now();\n                }\n\n                if (Math.abs(Date.now() - elapsedScrollTo) > 300) {\n                    timestamp = Date.now();\n                }\n\n                elapsedScrollTo = Date.now();\n                var scrollInfo = vertically === false ? hScrollInfo : vScrollInfo;\n\n                scrollInfo.value = scrollInfo.scrollBar.value;\n                scrollInfo.delta = value - scrollInfo.value;\n                scrollInfo.max = scrollInfo.scrollBar.max;\n\n                if (value <= scrollInfo.min) {\n                    value = scrollInfo.min;\n                }\n\n                if (value >= scrollInfo.max) {\n                    value = scrollInfo.max;\n                }\n\n                scrollInfo.velocity = 100 * scrollInfo.delta / (1 + scrollInfo.max);\n                scrollInfo.targetValue = value;\n\n                var scroll = function scroll(value) {\n                    scrollInfo.value = value > scrollInfo.max ? scrollInfo.max : value < scrollInfo.min ? scrollInfo.min : value;\n                    scrollInfo.scrollBar.value = scrollInfo.value;\n\n                    return value > scrollInfo.max ? 'max' : value < scrollInfo.min ? 'min' : 'value';\n                };\n\n                var autoScroll = function autoScroll() {\n                    var elapsed = void 0,\n                        delta = void 0;\n                    elapsed = Math.min(1000, Date.now() - timestamp);\n\n                    delta = scrollInfo.velocity * Math.exp(elapsed / timeConstant);\n\n                    if (delta < 0 && scrollInfo.value <= value) {\n                        delta = 0;\n                    } else if (delta > 0 && scrollInfo.value >= value) {\n                        delta = 0;\n                    }\n                    if (scrollInfo.value + delta <= scrollInfo.min || scrollInfo.value + delta >= scrollInfo.max) {\n                        delta = 0;\n                    }\n\n                    if (delta > 0.5 || delta < -0.5) {\n                        scroll(scrollInfo.value + delta);\n                        cancelAnimationFrame(rafId);\n                        rafId = 0;\n                        rafId = requestAnimationFrame(autoScroll);\n                    } else {\n                        scroll(scrollInfo.targetValue);\n                    }\n                };\n\n                cancelAnimationFrame(rafId);\n                rafId = requestAnimationFrame(autoScroll);\n            };\n\n            that.inputEvents.listen();\n        }\n\n        babelHelpers.createClass(Scroll, [{\n            key: 'unlisten',\n            value: function unlisten() {\n                var that = this;\n\n                if (that.inputEvents) {\n                    that.inputEvents.unlisten();\n                }\n\n                delete that.inputEvents;\n            }\n        }]);\n        return Scroll;\n    }();\n\n    /** This is a class which extends an element with utility methods. */\n\n\n    var _Extend = function () {\n        function Extend(element) {\n            babelHelpers.classCallCheck(this, Extend);\n\n            this.events = {};\n            this.handlers = {};\n            this.element = element;\n        }\n\n        /**\r\n         * Gets whether an element has a CSS Class. \r\n         * @param {String}.\r\n         */\n\n\n        babelHelpers.createClass(Extend, [{\n            key: 'hasClass',\n            value: function hasClass(className) {\n                var that = this;\n                var classNames = className.split(' ');\n\n                for (var i = 0; i < classNames.length; i++) {\n                    var result = that.element.classList.contains(classNames[i]);\n\n                    if (!result) {\n                        return false;\n                    }\n                }\n\n                return true;\n            }\n\n            /**\r\n             * Adds a CSS Class to an element. \r\n             * @param {String}.\r\n             */\n\n        }, {\n            key: 'addClass',\n            value: function addClass(className) {\n                var _that$element$classLi;\n\n                var that = this;\n\n                if (that.hasClass(className)) {\n                    return;\n                }\n\n                (_that$element$classLi = that.element.classList).add.apply(_that$element$classLi, babelHelpers.toConsumableArray(className.split(' ')));\n\n                if (!that.isNativeElement) {\n                    StyleObserver.observeElement(that.element);\n                }\n            }\n\n            /**\r\n             * Removes a CSS Class from an element. \r\n             * @param {String}.\r\n             */\n\n        }, {\n            key: 'removeClass',\n            value: function removeClass(className) {\n                var _that$element$classLi2;\n\n                var that = this;\n\n                if (arguments.length === 0) {\n                    that.element.removeAttribute('class');\n                    return;\n                }\n\n                (_that$element$classLi2 = that.element.classList).remove.apply(_that$element$classLi2, babelHelpers.toConsumableArray(className.split(' ')));\n                if (that.element.className === '') {\n                    that.element.removeAttribute('class');\n                }\n                if (!that.isNativeElement) {\n                    StyleObserver.observeElement(that.element);\n                }\n            }\n\n            /** Determines whether this element is native HTMLElement. */\n\n        }, {\n            key: 'dispatch',\n\n\n            /** \r\n             * Applies the event handlers.\r\n             * @param {Event} - event object.\r\n             */\n            value: function dispatch(event) {\n                var that = this;\n                var handleObjects = that.events[event.type];\n\n                for (var i = 0; i < handleObjects.length; i++) {\n                    var handleObject = handleObjects[i];\n                    event.namespace = handleObject.namespace;\n                    event.context = handleObject.context;\n\n                    if (event.defaultPrevented) {\n                        break;\n                    }\n\n                    var result = handleObject.handler.apply(that.element, [event]);\n\n                    if (result !== undefined) {\n                        event.result = result;\n\n                        if (result === false) {\n                            event.preventDefault();\n                            event.stopPropagation();\n                            break;\n                        }\n                    }\n                }\n\n                return event.result;\n            }\n\n            /** \r\n             * Fires a new event.\r\n             * @param {String} - event type.\r\n             * @param {Object} - event details.\r\n             * @param {Object} - event options.\r\n             */\n\n        }, {\n            key: 'fireEvent',\n            value: function fireEvent(eventType, detail, options) {\n                var that = this;\n\n                if (!options) {\n                    options = {\n                        bubbles: true,\n                        cancelable: true\n                    };\n                }\n                options.detail = detail || {};\n\n                var customEvent = new CustomEvent(eventType, options);\n                customEvent.originalStopPropagation = customEvent.stopPropagation;\n                customEvent.stopPropagation = function () {\n                    customEvent.isPropagationStopped = true;\n                    return customEvent.originalStopPropagation();\n                };\n\n                that.dispatchEvent(customEvent);\n\n                return customEvent;\n            }\n\n            /** \r\n            * Dispatches an event.\r\n            * @param {CustomEvent} - event.\r\n            */\n\n        }, {\n            key: 'dispatchEvent',\n            value: function dispatchEvent(customEvent) {\n                var that = this;\n                var eventType = customEvent.type;\n                var context = that.element.context;\n\n                that.element.context = document;\n\n                if (that.element['on' + eventType]) {\n                    that.element['on' + eventType](customEvent);\n                } else {\n                    that.element.dispatchEvent(customEvent);\n                }\n\n                that.element.context = context;\n            }\n\n            /** \r\n             * Adds an event listener.\r\n             * @param {String} - event types.\r\n             * @param {Function} - the event handler.\r\n             */\n\n        }, {\n            key: 'listen',\n            value: function listen(types, handler) {\n                var that = this;\n                var typesArray = types.split('.');\n                var namespace = typesArray.slice(1).join('.');\n                var eventType = typesArray[0];\n\n                if (!that.events[eventType]) {\n                    that.events[eventType] = [];\n                }\n\n                var handleObject = {\n                    type: eventType,\n                    handler: handler,\n                    context: that.element,\n                    namespace: namespace\n                };\n\n                if (inputEventTypes.indexOf(eventType) >= 0) {\n                    if (!that.inputEvents) {\n                        that.inputEvents = new InputEvents(that.element);\n                    }\n\n                    that.inputEvents[eventType](function (event) {\n                        that.dispatchEvent(event);\n                    });\n\n                    that.inputEvents.boundEventTypes.push(eventType);\n                    that.inputEvents.listen(eventType);\n                }\n\n                if (that.events[eventType].length === 0) {\n                    that.handlers[eventType] = that.dispatch.bind(that);\n                    that.element.addEventListener(eventType, that.handlers[eventType], false);\n                }\n\n                that.events[eventType].push(handleObject);\n            }\n\n            /** \r\n             * Removes an event listener.\r\n             * @param {String} - event types.\r\n             */\n\n        }, {\n            key: 'unlisten',\n            value: function unlisten(types) {\n                var that = this;\n                var typesArray = types.split('.');\n                var namespace = typesArray.slice(1).join('.');\n                var eventType = typesArray[0];\n\n                var handleObjects = that.events[eventType];\n\n                if (that.inputEvents && that.inputEvents.boundEventTypes.indexOf(eventType) >= 0) {\n                    that.inputEvents.boundEventTypes.splice(that.inputEvents.boundEventTypes.indexOf(eventType), 1);\n                    if (that.inputEvents.boundEventTypes.length === 0) {\n                        that.inputEvents.unlisten(eventType);\n                    }\n                }\n\n                if (!handleObjects) {\n                    return;\n                }\n\n                for (var i = 0; i < handleObjects.length; i++) {\n                    if (namespace !== '') {\n                        var index = handleObjects.findIndex(function (o) {\n                            return o.namespace === namespace;\n                        });\n                        handleObjects.splice(index, 1);\n                        break;\n                    } else {\n                        handleObjects = [];\n                    }\n                }\n                if (handleObjects.length === 0) {\n                    that.element.removeEventListener(eventType, that.handlers[eventType]);\n                    that.events[eventType] = [];\n                    delete that.handlers[eventType];\n                }\n            }\n\n            /** \r\n            * Gets the element's attribute value by using the property's value.\r\n            * @param {String} - attribute's name.\r\n            * @param {String} - property's type.\r\n            * @return {Object} The converted from String attribute value. \r\n            */\n\n        }, {\n            key: 'getAttributeValue',\n            value: function getAttributeValue(attributeName, type) {\n                var that = this;\n                var attributeString = that.element.getAttribute(attributeName);\n\n                if (that.isNativeElement) {\n                    return that.deserialize(attributeString, type);\n                }\n\n                var propertyConfig = that.element.propertyByAttributeName[attributeName];\n                var typedValue = propertyConfig.deserialize === undefined ? that.deserialize(attributeString, type, propertyConfig.nullable) : that.element[propertyConfig.deserialize](attributeString);\n\n                return typedValue;\n            }\n\n            /** \r\n             * Sets the element's attribute using the property's value.\r\n             * @param {String} - attribute's name.\r\n             * @param {Object} - property's value.\r\n             * @param {String} - property's type.\r\n             */\n\n        }, {\n            key: 'setAttributeValue',\n            value: function setAttributeValue(attributeName, value, type) {\n                var that = this;\n                var newAttributeValue = void 0;\n                var nullable = false;\n\n                if (!that.isNativeElement) {\n                    var propertyConfig = that.element.propertyByAttributeName[attributeName];\n\n                    nullable = propertyConfig.nullable;\n\n                    if (propertyConfig.serialize) {\n                        newAttributeValue = that.element[propertyConfig.serialize](value);\n                    } else {\n                        newAttributeValue = that.serialize(value, type, nullable);\n                    }\n                } else {\n                    newAttributeValue = that.serialize(value, type);\n                    if (type === 'boolean') {\n                        var booleans = ['checked', 'selected', 'async', 'autofocus', 'autoplay', 'controls', 'defer', 'disabled', 'hidden', 'ismap', 'loop', 'multiple', 'open', 'readonly', 'required', 'scoped'];\n                        if (booleans.indexOf(attributeName) >= 0) {\n                            if (!value) {\n                                that.element.removeAttribute(attributeName);\n                            } else {\n                                that.element.setAttribute(attributeName, '');\n                            }\n                            return;\n                        }\n                    }\n                }\n\n                if (type === 'array' || type === 'object') {\n                    if (newAttributeValue === '[]' || newAttributeValue === '{}') {\n                        that.element.removeAttribute(attributeName);\n                        return;\n                    }\n                }\n\n                if (newAttributeValue === undefined) {\n                    that.element.removeAttribute(attributeName);\n                } else {\n                    that.element.setAttribute(attributeName, newAttributeValue);\n                }\n            }\n\n            /** \r\n             * Converts a javascript value to string.\r\n             * @param {Object} the value to be converted.\r\n             * @return {String} The converted to String value. If the type is unknown, returns undefined.\r\n             */\n\n        }, {\n            key: 'serialize',\n            value: function serialize(value, type, nullable) {\n                if (type === undefined) {\n                    type = Utilities.Types.getType(value);\n                }\n\n                if (value === undefined || !nullable && value === null) {\n                    return undefined;\n                }\n\n                if (nullable && value === null) {\n                    return 'null';\n                }\n\n                if (type === 'string') {\n                    return Utilities.Core.escapeHTML(value);\n                }\n\n                if (type === 'boolean' || type === 'bool') {\n                    if (value === true || value === 'true' || value === 1 || value === '1') {\n                        return '';\n                    } else if (value === false || value === 'false' || value === 0 || value === '0') {\n                        return undefined;\n                    }\n                }\n\n                if (type === 'array') {\n                    return JSON.stringify(value);\n                }\n\n                var types = ['string', 'number', 'int', 'integer', 'float', 'date', 'any', 'function'];\n                if (types.indexOf(type) >= 0) {\n                    return value.toString();\n                }\n\n                if (type === 'object') {\n                    return JSON.stringify(value);\n                }\n\n                return undefined;\n            }\n\n            /** \r\n             * Converts a string to a Javascript value.\r\n             * @param {String}\r\n             * @param {String}\r\n             * @return {Object} The converted String value.\r\n             */\n\n        }, {\n            key: 'deserialize',\n            value: function deserialize(stringValue, type, nullable) {\n                var nullValue = stringValue === 'null';\n\n                if (stringValue === undefined || nullValue && !nullable) {\n                    return undefined;\n                }\n\n                if (nullValue && nullable) {\n                    return null;\n                }\n\n                if (type === 'boolean' || type === 'bool') {\n                    if (stringValue === null) {\n                        return false;\n                    }\n\n                    // Boolean properties are set based on the presence of the attribute: if the attribute exists at all, the value is true.\n                    return true;\n                } else if (type === 'number' || type === 'float') {\n                    if (stringValue === 'NaN') {\n                        return NaN;\n                    }\n\n                    if (stringValue === 'Infinity') {\n                        return Infinity;\n                    }\n\n                    if (stringValue === '-Infinity') {\n                        return -Infinity;\n                    }\n\n                    return parseFloat(stringValue);\n                } else if (type === 'int' || type === 'integer') {\n                    if (stringValue === 'NaN') {\n                        return NaN;\n                    }\n\n                    if (stringValue === 'Infinity') {\n                        return Infinity;\n                    }\n\n                    if (stringValue === '-Infinity') {\n                        return -Infinity;\n                    }\n\n                    return parseInt(stringValue);\n                } else if (type === 'string' || type === 'any') {\n                    return stringValue;\n                } else if (type === 'date') {\n                    return new Date(stringValue);\n                } else if (type === 'function') {\n                    if (typeof window[stringValue] === 'function') {\n                        return window[stringValue];\n                    }\n                } else if (type === 'array' || type === 'object') {\n                    try {\n                        var jsonObject = JSON.parse(stringValue);\n\n                        if (jsonObject) {\n                            return jsonObject;\n                        }\n                    } catch (er) {\n                        if (window[stringValue] && babelHelpers.typeof(window[stringValue]) === 'object') {\n                            return window[stringValue];\n                        }\n                    }\n                }\n\n                return undefined;\n            }\n        }, {\n            key: 'isNativeElement',\n            get: function get() {\n                var that = this;\n\n                if (that.element instanceof window.JQX.BaseElement === false) {\n                    return true;\n                }\n\n                return false;\n            }\n        }]);\n        return Extend;\n    }();\n\n    /** Utilities class. */\n\n\n    var Utilities = function () {\n        function Utilities() {\n            babelHelpers.classCallCheck(this, Utilities);\n        }\n\n        babelHelpers.createClass(Utilities, null, [{\n            key: 'Extend',\n\n\n            /**\r\n             * Extends Element with useful methods.\r\n             * @param {HTMLElement}\r\n             */\n            value: function Extend(element) {\n                return new _Extend(element);\n            }\n        }, {\n            key: 'Assign',\n            value: function Assign(moduleName, module) {\n                Utilities[moduleName] = module;\n            }\n        }, {\n            key: 'Types',\n\n\n            /** Get access to Types class. */\n            get: function get() {\n                return Types;\n            }\n        }, {\n            key: 'Core',\n            get: function get() {\n                return Core;\n            }\n        }, {\n            key: 'Scroll',\n            get: function get() {\n                return Scroll;\n            }\n        }, {\n            key: 'InputEvents',\n            get: function get() {\n                return InputEvents;\n            }\n        }]);\n        return Utilities;\n    }();\n\n    var $document = Utilities.Extend(document);\n\n    BindingModule.cache = {};\n    /**\r\n     * This is a base class for JQX Elements. It extends HTMLElement.\r\n     */\n\n    var BaseElement = function (_HTMLElement) {\n        babelHelpers.inherits(BaseElement, _HTMLElement);\n\n        function BaseElement() {\n            babelHelpers.classCallCheck(this, BaseElement);\n            return babelHelpers.possibleConstructorReturn(this, (BaseElement.__proto__ || Object.getPrototypeOf(BaseElement)).apply(this, arguments));\n        }\n\n        babelHelpers.createClass(BaseElement, [{\n            key: 'template',\n\n\n            /**\r\n             * Gets the element's HTML Template.\r\n             *\r\n             * @returns {String} - element's template.\r\n             */\n            value: function template() {\n                return '<div></div>';\n            }\n\n            /** Called when the element is registered. */\n\n        }, {\n            key: 'registered',\n            value: function registered() {\n                var that = this;\n\n                if (that.onRegistered) {\n                    that.onRegistered();\n                }\n            }\n\n            /** Called when the element has been created. */\n\n        }, {\n            key: 'created',\n            value: function created() {\n                var that = this;\n\n                that.isReady = false;\n                that._initElement(that);\n                that._setModuleState('created');\n\n                if (that.onCreated) {\n                    that.onCreated();\n                }\n            }\n\n            /** Called when the element is ready. Use for one-time configuration of your element. */\n\n        }, {\n            key: 'ready',\n            value: function ready() {\n                var _this3 = this;\n\n                var that = this;\n\n                var requires = function requires() {\n                    var missingModules = [];\n\n                    var requires = that.getStaticMember('requires');\n\n                    for (var require in requires) {\n                        var modules = require.split('.');\n\n                        if (modules.length > 2) {\n                            if (!window.JQX.Utilities[modules[2]]) {\n                                missingModules.push(requires[require]);\n                            }\n                        } else if (!window.JQX[modules[1]]) {\n                            missingModules.push(requires[require]);\n                        }\n                    }\n\n                    if (missingModules.length > 0) {\n                        var _that = _this3;\n\n                        _that.error(_that.localize('missingReference', { elementType: _that.nodeName.toLowerCase(), files: missingModules.join(', ') }));\n                    }\n                };\n\n                requires();\n\n                if (that.onReady) {\n                    that.onReady();\n                }\n            }\n        }, {\n            key: 'setup',\n            value: function setup() {\n                var that = this;\n\n                that.context = this;\n\n                if (that.isReady && !that.isCompleted) {\n                    return;\n                }\n\n                if (that.isReady) {\n                    that._setModuleState('attached');\n                    that.isAttached = true;\n                    that.attached();\n                    that._handleListeners('listen');\n                    that.context = document;\n                    return;\n                }\n\n                if (that.ownerElement && that.ownerElement.detachedChildren.indexOf(that) >= 0) {\n                    that.ownerElement.detachedChildren.splice(that.ownerElement.detachedChildren.indexOf(that), 1);\n                }\n\n                that.isReady = true;\n\n                /* Updates the properties by using the attribute values. */\n\n                for (var i = 0; i < that.attributes.length; i += 1) {\n                    var property = that.propertyByAttributeName[that.attributes[i].name];\n\n                    if (!property) {\n                        continue;\n                    }\n\n                    var attributeValue = that.$.getAttributeValue(property.attributeName, property.type);\n                    var attributeValueString = attributeValue ? attributeValue.toString() : '';\n\n                    if (attributeValueString.indexOf('{{') >= 0 || attributeValueString.indexOf('[[') >= 0) {\n                        continue;\n                    }\n\n                    if (property.type !== 'object' && property.type !== 'array') {\n                        if (that.attributes[i].value.indexOf('{{') >= 0 || that.attributes[i].value.indexOf('[[') >= 0) {\n                            continue;\n                        }\n                    }\n\n                    if (attributeValue !== undefined && property.value !== attributeValue) {\n                        var attributeValueType = Utilities.Types.getType(attributeValue);\n                        var attributeUntypedValue = that.attributes[i].value;\n\n                        if (property.type === 'any' || property.type === 'object') {\n                            if ('' + that[property.name] === attributeValue) {\n                                continue;\n                            }\n                        }\n\n                        if (property.type === 'array') {\n                            if (that[property.name] && JSON.stringify(that[property.name]) === attributeValue) {\n                                continue;\n                            }\n                        }\n\n                        if (attributeValueType === 'number' && isNaN(attributeValue) && attributeUntypedValue !== 'NaN' && attributeUntypedValue !== 'Infinity' && attributeUntypedValue !== '-Infinity') {\n                            var localizedError = that.localize('propertyInvalidValueType', { name: property.name, actualType: 'string', type: property.type });\n                            that.log(localizedError);\n                        }\n\n                        property.isUpdatingFromAttribute = true;\n                        that[property.name] = attributeValue;\n                        property.isUpdatingFromAttribute = false;\n                    }\n                }\n\n                /* Set the default boolean and innerhtml attributes by using the property values. */\n                for (var propertyName in that._properties) {\n                    var _property = that._properties[propertyName];\n\n                    if (propertyName === 'innerHTML' && _property.value === _property.defaultValue) {\n                        _property.value = _property.defaultValue = Utilities.Core.html(that);\n                    }\n\n                    if (_property.type === 'boolean' || _property.type === 'bool') {\n                        if (that.getAttribute(_property.attributeName) === 'false') {\n                            _property.isUpdating = true;\n                            that.setAttribute(_property.attributeName, '');\n                            _property.isUpdating = false;\n                        }\n                    }\n\n                    if (!_property.defaultReflectToAttribute || !_property.reflectToAttribute) {\n                        continue;\n                    }\n\n                    that.$.setAttributeValue(_property.attributeName, _property.value, _property.type);\n                }\n\n                var children = [];\n\n                if (that.children.length > 0) {\n                    for (var _i2 = 0; _i2 < that.children.length; _i2++) {\n                        var _node2 = that.children[_i2];\n\n                        if (_node2 instanceof window.JQX.BaseElement) {\n                            children.push(_node2);\n                        }\n                    }\n                }\n\n                that.applyTemplate();\n\n                that.complete = function () {\n                    if (!that.templateBindingsReady) {\n                        var updateTemplateBindings = function updateTemplateBindings(node) {\n                            if (node.templateBindingsReady) {\n                                return;\n                            }\n\n                            node.templateBindingsReady = true;\n                            node.updateTextNodes();\n                            node.updateBoundNodes();\n                        };\n\n                        if (!that.ownerElement) {\n                            updateTemplateBindings(that);\n                        } else {\n                            var owner = that.ownerElement;\n                            var owners = [];\n                            while (owner) {\n                                owners.push(owner);\n                                owner = owner.ownerElement;\n                            }\n\n                            for (var _i3 = owners.length - 1; _i3 >= 0; _i3--) {\n                                updateTemplateBindings(owners[_i3]);\n                            }\n\n                            updateTemplateBindings(that);\n                        }\n                    }\n\n                    that._setModuleState('ready');\n\n                    that.ready();\n\n                    that.isAttached = true;\n                    that._setModuleState('attached');\n                    that.attached();\n                    that._handleListeners('listen');\n\n                    if (that.offsetWidth === 0 || that.offsetHeight === 0) {\n                        that.isHidden = true;\n                    }\n\n                    that.isCompleted = true;\n\n                    if (that.onCompleted) {\n                        that.onCompleted();\n                    }\n\n                    that.context = document;\n                };\n\n                // All of the registered elements inside the element's local DOM are ready, and have had their ready methods called.\n                var templateNodes = [].slice.call(that.querySelectorAll('[jqx-id]')).concat(children);\n\n                if (templateNodes.length === 0) {\n                    that.complete();\n                } else {\n                    that._completeListeners = 0;\n\n                    var _loop3 = function _loop3(_i4) {\n                        var node = templateNodes[_i4];\n\n                        if (node instanceof window.JQX.BaseElement) {\n                            var completeEventHandler = function () {\n                                that._completeListeners--;\n                                if (that._completeListeners === 0) {\n                                    that.complete();\n\n                                    delete that._completeListeners;\n                                }\n                            }.bind(that);\n\n                            if (!node.isCompleted) {\n                                that._completeListeners++;\n\n                                if (!node.onCompleted) {\n                                    node.completeHandlers = [];\n\n                                    node.onCompleted = function () {\n                                        for (var _i5 = 0; _i5 < node.completeHandlers.length; _i5++) {\n                                            node.completeHandlers[_i5]();\n                                        }\n                                    };\n                                }\n                                node.completeHandlers.push(completeEventHandler);\n                            }\n                        }\n                    };\n\n                    for (var _i4 = 0; _i4 < templateNodes.length; _i4++) {\n                        _loop3(_i4);\n                    }\n\n                    if (that._completeListeners === 0) {\n                        that.complete();\n                    }\n                }\n            }\n        }, {\n            key: 'visibilityChangedHandler',\n            value: function visibilityChangedHandler() {\n                var that = this;\n\n                if (!that.isReady) {\n                    return;\n                }\n\n                if (!that.isHidden && that.offsetWidth === 0 || that.offsetHeight === 0) {\n                    that.isHidden = true;\n                } else {\n                    if (that.isHidden) {\n                        that.$.fireEvent('resize', that, {\n                            bubbles: false,\n                            cancelable: true\n                        });\n                        that.isHidden = false;\n                    }\n                }\n            }\n\n            /** Called when an attribute is changed. */\n\n        }, {\n            key: 'attributeChangedCallback',\n            value: function attributeChangedCallback(name, oldValue, newValue) {\n                var that = this;\n                var property = that.propertyByAttributeName[name];\n\n                if (name === 'class' || name === 'style') {\n                    that.visibilityChangedHandler();\n                }\n\n                if (!property) {\n                    that.attributeChanged(name, oldValue, newValue);\n                }\n\n                if (!property || property && property.isUpdating) {\n                    return;\n                }\n\n                var newPropertyValue = that.$.getAttributeValue(property.attributeName, property.type);\n                if (newValue !== undefined && that[property.name] !== newPropertyValue) {\n                    property.isUpdatingFromAttribute = true;\n                    if (newPropertyValue !== undefined) {\n                        that[property.name] = newPropertyValue;\n                    } else {\n                        that[property.name] = that._properties[property.name].defaultValue;\n                    }\n                    property.isUpdatingFromAttribute = false;\n                }\n            }\n\n            /** Called when one of the element's attributes is changed. Use to handle attribute changes that don't correspond to declared properties. */\n\n        }, {\n            key: 'attributeChanged',\n            value: function attributeChanged(name, oldValue, newValue) {\n                if (oldValue !== newValue) {\n                    /* attribute change handling logic here. */\n                }\n            }\n\n            /** Called after the element is attached to the document. Can be called multiple times during the lifetime of an element. */\n\n        }, {\n            key: 'attached',\n            value: function attached() {\n                var that = this;\n\n                StyleObserver.watch(that);\n\n                if (that.onAttached) {\n                    that.onAttached();\n                }\n            }\n\n            /** Called after the element is detached from the document. Can be called multiple times during the lifetime of an element. */\n\n        }, {\n            key: 'detached',\n            value: function detached() {\n                var that = this;\n\n                StyleObserver.unwatch(that);\n\n                that._setModuleState('detached');\n                that.isAttached = false;\n\n                if (that.ownerElement) {\n                    that.ownerElement.detachedChildren.push(that);\n                }\n                that._handleListeners('unlisten');\n\n                if (that.onDetached) {\n                    that.onDetached();\n                }\n            }\n\n            /** Called when a property value is changed. */\n\n        }, {\n            key: 'propertyChangedHandler',\n            value: function propertyChangedHandler(propertyName, oldValue, newValue) {\n                var that = this;\n\n                if (oldValue === newValue) {\n                    return;\n                }\n\n                if (that.propertyChanged) {\n                    that.propertyChanged(propertyName, oldValue, newValue);\n                }\n                /* Property changed logic goes here. */\n            }\n        }, {\n            key: '_handleListeners',\n            value: function _handleListeners(action) {\n                var that = this;\n                var tagName = that.tagName.toLowerCase();\n                var listeners = that.getStaticMember('listeners');\n\n                var processListeners = function processListeners(listeners) {\n                    var _loop4 = function _loop4(listener) {\n                        var path = listener.split('.');\n                        var eventType = path[0];\n                        var element = that.$;\n\n                        if (path[1]) {\n                            eventType = path[1];\n                            element = that['$' + path[0]];\n\n                            if (path[0] === 'document') {\n                                var id = that.jqxId;\n                                if (id === '') {\n                                    id = Utilities.Core.toCamelCase(tagName);\n                                }\n                                eventType = eventType + '.' + id;\n                            }\n                        }\n\n                        var handlerName = listeners[listener];\n                        var handler = function handler(event) {\n                            var context = that.context;\n                            that.context = that;\n                            that[handlerName].apply(that, [event]);\n                            that.context = context;\n                        };\n\n                        if (!element) {\n                            return 'continue';\n                        }\n\n                        element[action](eventType, handler);\n                    };\n\n                    for (var listener in listeners) {\n                        var _ret5 = _loop4(listener);\n\n                        if (_ret5 === 'continue') continue;\n                    }\n                };\n\n                processListeners(listeners);\n                processListeners(that.templateListeners);\n            }\n\n            /** Parses the element's template. */\n\n        }, {\n            key: 'parseTemplate',\n            value: function parseTemplate() {\n                var that = this;\n                var template = that.template();\n                var fragment = document.createDocumentFragment();\n\n                if (template === '') {\n                    return null;\n                }\n\n                /* Create a wrapper DIV tag. */\n                var tmpElement = document.createElement('div');\n                fragment.appendChild(tmpElement);\n\n                /* Fill the nodes array with the wrapper's childNodes. */\n                tmpElement.innerHTML = template;\n                var nodes = tmpElement.childNodes;\n\n                /* Remove the wrapper DIV tag. */\n                tmpElement.parentNode.removeChild(tmpElement);\n\n                /* Add the nodes to the fragment. */\n                for (var i = 0; i < nodes.length; i++) {\n                    fragment.appendChild(nodes[i]);\n                }\n\n                return fragment;\n            }\n        }, {\n            key: 'applyTemplate',\n            value: function applyTemplate() {\n                var that = this;\n\n                var templateElement = that.parseTemplate();\n\n                if (!templateElement) {\n                    return;\n                }\n\n                var template = document.importNode(templateElement, true);\n\n                if (!template.hasChildNodes) {\n                    return;\n                }\n\n                var rootElement = template.childNodes[0];\n                var map = function map(name, element) {\n                    that['$' + name] = element.$ = Utilities.Extend(element);\n                    that.$[name] = element;\n                    element.ownerElement = that;\n                };\n\n                /* Create a content element. */\n                var contentElement = rootElement;\n\n                if (rootElement.getElementsByTagName('content').length > 0) {\n                    var contentInsertionPoint = rootElement.getElementsByTagName('content')[0];\n                    contentElement = contentInsertionPoint.parentNode;\n                    contentElement.removeChild(contentInsertionPoint);\n                } else {\n                    var preudoContentElement = template.querySelectorAll('[inner-h-t-m-l]');\n                    if (preudoContentElement && preudoContentElement.length > 0) {\n                        contentElement = preudoContentElement[0];\n                    }\n                }\n\n                /* Build nodes map. */\n                var templateNodes = template.querySelectorAll('[id]');\n                if (templateNodes.length === 0) {\n                    templateNodes = template.querySelectorAll('*');\n                }\n\n                map('root', rootElement);\n                map('content', contentElement);\n\n                that.$.html = that.innerHTML.toString().trim();\n\n                for (var i = 0; i < templateNodes.length; i += 1) {\n                    var templateNode = templateNodes[i];\n                    if (templateNode.id === '') {\n                        templateNode.id = 'child' + i;\n                    }\n\n                    map(templateNode.id, templateNode);\n                    templateNode.setAttribute('jqx-id', templateNode.id);\n\n                    if (!that.shadowRoot) {\n                        templateNode.removeAttribute('id');\n                    }\n                }\n\n                that.bindings = that.getBindings(template);\n                that.$root.addClass('jqx-container');\n                /* Move element's initial nodes to the content element. */\n                while (that.childNodes.length) {\n                    contentElement.appendChild(that.firstChild);\n                }\n\n                /* Append the template. */\n                that.appendTemplate(template);\n            }\n        }, {\n            key: 'appendTemplate',\n            value: function appendTemplate(template) {\n                var that = this;\n\n                that.appendChild(template);\n            }\n\n            /** Defines the custom element's default modules. The function is called once when the element's script file is referred. */\n\n        }, {\n            key: 'defineElementModules',\n            value: function defineElementModules() {\n                var that = this;\n\n                var proto = that.constructor.prototype;\n                proto.modules = that.constructor.modules;\n\n                var modules = proto.modules;\n\n                for (var i = 0; i < modules.length; i += 1) {\n                    that.addModule(modules[i]);\n                }\n            }\n        }, {\n            key: 'watch',\n            value: function watch(properties, propertyChangedCallback) {\n                var that = this;\n\n                if (properties === null || propertyChangedCallback === null) {\n                    that._watch = null;\n                    return;\n                }\n\n                that._watch = {\n                    properties: properties,\n                    propertyChangedCallback: propertyChangedCallback\n                };\n            }\n        }, {\n            key: 'unwatch',\n            value: function unwatch() {\n                var that = this;\n\n                that._watch = null;\n            }\n        }, {\n            key: '_setModuleState',\n            value: function _setModuleState(stateName, args) {\n                var that = this;\n                var statusName = 'is' + stateName.substring(0, 1).toUpperCase() + stateName.substring(1);\n                var callbackName = 'on' + stateName.substring(0, 1).toUpperCase() + stateName.substring(1);\n\n                for (var i = 0; i < that.modulesList.length; i++) {\n                    var module = that.modulesList[i];\n\n                    module[statusName] = true;\n\n                    if (module[stateName]) {\n                        module[stateName](args);\n                    }\n\n                    if (module[callbackName]) {\n                        module[callbackName](args);\n                    }\n                }\n            }\n\n            /**\r\n             * Adds a module to the the element. Module's methods and properties are mixed into the element's prototype.\r\n             * @param {Object}.\r\n             */\n\n        }, {\n            key: 'addModule',\n            value: function addModule(module) {\n                var that = this;\n\n                if (!module) {\n                    return;\n                }\n\n                var modules = that.modules.slice(0);\n                var proto = module.prototype;\n\n                if (!module.moduleName && module.name) {\n                    module.moduleName = module.name;\n                }\n\n                if (modules.findIndex(function (currentModule) {\n                    return module.moduleName === currentModule.moduleName;\n                }) === -1) {\n                    modules.push(module);\n                }\n\n                that.defineModule(module);\n                that.defineElementMethods(proto.methodNames, proto);\n                that.defineElementProperties(module.properties);\n\n                var elementProto = that.constructor.prototype;\n                elementProto.modules = modules;\n            }\n\n            /** Defines a module and creates its properties. */\n\n        }, {\n            key: 'defineModule',\n            value: function defineModule(module) {\n                if (module.isDefined) {\n                    return;\n                }\n\n                module.prototype._initModule = function (element) {\n                    var that = this;\n\n                    that.ownerElement = element;\n                };\n\n                var properties = module.properties || {};\n                var propertyNames = Object.keys(properties);\n                var methodNames = Object.getOwnPropertyNames(module.prototype);\n\n                module.prototype.methodNames = methodNames;\n\n                var _loop5 = function _loop5(j) {\n                    var propertyName = propertyNames[j];\n                    var property = properties[propertyName];\n\n                    Object.defineProperty(module.prototype, propertyName, {\n                        configurable: false,\n                        enumerable: true,\n                        get: function get() {\n                            var that = this;\n\n                            if (!that.ownerElement) {\n                                return property.value;\n                            }\n\n                            return that.ownerElement[propertyName];\n                        },\n                        set: function set(value) {\n                            var that = this;\n\n                            that.ownerElement[propertyName] = value;\n                        }\n                    });\n                };\n\n                for (var j = 0; j < propertyNames.length; j += 1) {\n                    _loop5(j);\n                }\n\n                module.isDefined = true;\n            }\n        }, {\n            key: 'getStaticMember',\n            value: function getStaticMember(memberName) {\n                var that = this;\n                var element = window.JQX[that.elementName];\n\n                var staticMember = element[memberName];\n                var inheritedStaticMember = {};\n                var baseProto = Object.getPrototypeOf(element);\n\n                while (baseProto[memberName]) {\n                    inheritedStaticMember = Utilities.Core.assign(inheritedStaticMember, baseProto[memberName]);\n                    baseProto = Object.getPrototypeOf(baseProto);\n                }\n\n                return Utilities.Core.assign(inheritedStaticMember, staticMember);\n            }\n\n            /** Defines the element properties, methods and modules. */\n\n        }, {\n            key: 'defineElement',\n            value: function defineElement() {\n                var that = this;\n                var proto = that.constructor.prototype;\n                var properties = that.getStaticMember('properties');\n                var methods = Object.getOwnPropertyNames(proto);\n\n                proto.extendedProperties = {};\n                proto.boundProperties = {};\n                proto.templateListeners = {};\n\n                that.defineElementModules();\n                that.defineElementMethods(methods, proto);\n                that.defineElementProperties(properties);\n\n                /* Initialization of element's instance properties. */\n                proto._initElement = function () {\n                    var that = this;\n\n                    var properties = proto.extendedProperties;\n                    var propertyNames = Object.keys(properties);\n                    var modules = that.modules;\n\n                    that.$ = Utilities.Extend(that);\n                    that.$document = $document;\n                    that.jqxId = (Date.now().toString(36) + Math.random().toString(36).substr(2, 5)).toUpperCase();\n\n                    if (!that.isCreated) {\n                        that.modulesList = [];\n                        that._properties = [];\n                        that.detachedChildren = [];\n                        that.propertyByAttributeName = [];\n                    }\n\n                    for (var i = 0; i < modules.length; i += 1) {\n                        var module = modules[i];\n                        var moduleInstance = new module();\n                        moduleInstance._initModule(that);\n                        that.modulesList.push(moduleInstance);\n                    }\n\n                    var _loop6 = function _loop6(_i6) {\n                        var propertyName = propertyNames[_i6];\n                        var property = properties[propertyName];\n                        var defaultValue = property.value;\n\n                        if (that._properties[propertyName]) {\n                            return 'continue';\n                        }\n\n                        if (isOldChrome && propertyName === 'innerHTML') {\n                            delete that[propertyName];\n                        }\n\n                        if (window.navigator.userAgent.indexOf('PhantomJS') === -1 && that.hasOwnProperty(propertyName)) {\n                            defaultValue = that[propertyName];\n\n                            delete that[propertyName];\n                        }\n\n                        if (property.type === 'array' && defaultValue !== undefined && defaultValue !== null) {\n                            defaultValue = defaultValue.slice(0);\n                        }\n\n                        if (property.type === 'object' && defaultValue !== undefined && defaultValue !== null) {\n                            defaultValue = Object.assign({}, defaultValue);\n                        }\n\n                        that._properties[propertyName] = {\n                            name: propertyName,\n                            notify: property.notify,\n                            allowedValues: property.allowedValues,\n                            type: property.type,\n                            nullable: property.nullable,\n                            reflectToAttribute: property.reflectToAttribute,\n                            defaultReflectToAttribute: property.defaultReflectToAttribute,\n                            value: defaultValue,\n                            readOnly: property.readOnly,\n                            defaultValue: defaultValue,\n                            attributeName: property.attributeName,\n                            observer: property.observer,\n                            inherit: property.inherit,\n                            extend: property.extend,\n                            validator: property.validator\n                        };\n\n                        that.propertyByAttributeName[property.attributeName] = that._properties[propertyName];\n\n                        if (!property.hasOwnProperty('type')) {\n                            var localizedError = that.localize('propertyUnknownType', { name: propertyName });\n                            that.log(localizedError);\n                        }\n\n                        if (property.type === 'any') {\n                            return 'continue';\n                        }\n\n                        var defaultValueType = Utilities.Types.getType(defaultValue);\n                        if (defaultValue !== undefined && defaultValue !== null && property.type !== defaultValueType && !property.validator) {\n                            if (property.type === 'object' && defaultValueType === 'array') {\n                                return 'continue';\n                            }\n\n                            if (defaultValueType === 'number') {\n                                var types = ['integer', 'int', 'float'];\n                                var propertyIndex = types.findIndex(function (type) {\n                                    return type === property.type;\n                                });\n\n                                if (propertyIndex >= 0) {\n                                    return 'continue';\n                                }\n                            }\n                            var _localizedError = that.localize('propertyInvalidValueType', { name: propertyName, actualType: defaultValueType, type: property.type });\n                            that.log(_localizedError);\n                        }\n                    };\n\n                    for (var _i6 = 0; _i6 < propertyNames.length; _i6 += 1) {\n                        var _ret7 = _loop6(_i6);\n\n                        if (_ret7 === 'continue') continue;\n                    }\n\n                    that.isCreated = true;\n                };\n\n                /* Calls the registered method. It is useful for one-time configuration. */\n                proto.registered();\n            }\n\n            /**\r\n             * Defines Element's methods. \r\n             * {Array} - methods.\r\n             * {Object} - method owner's prototype.\r\n             */\n\n        }, {\n            key: 'defineElementMethods',\n            value: function defineElementMethods(methods, proto) {\n                var that = this;\n                var elementProto = that.constructor.prototype;\n\n                var invokeMethod = function invokeMethod(method, methodName) {\n                    var args = Array.prototype.slice.call(arguments, 2);\n\n                    var elementMethod = function elementMethod() {\n                        /* Raise an exception when the method is invoked while the element is not in Ready state. */\n                        if (!this.isReady && methodName !== 'localize' && methodName !== 'log') {\n                            var localizedError = this.localize('elementNotInDOM');\n                            this.log(localizedError);\n                        }\n\n                        var methodContext = this;\n                        for (var i = 0; i < this.modulesList.length; i++) {\n                            var module = this.modulesList[i];\n                            if (methodName in module) {\n                                methodContext = module;\n                                break;\n                            }\n                        }\n\n                        var context = this.context;\n                        this.context = this;\n                        var result = method.apply(methodContext, args.concat(Array.prototype.slice.call(arguments)));\n                        this.context = context;\n\n                        return result;\n                    };\n\n                    return elementMethod;\n                };\n\n                /* Exclude these methods. */\n                var excludeMethods = ['constructor', 'ready', 'created', 'attached', 'detached', 'appendChild', 'insertBefore', 'removeChild', 'propertyChangedHandler'];\n\n                /* Wrap Custom Element's methods. */\n\n                var _loop7 = function _loop7(index) {\n                    var methodName = methods[index];\n\n                    if (methodName.startsWith('_') || excludeMethods.find(function (excludeMethodName) {\n                        return excludeMethodName === methodName;\n                    }) !== undefined) {\n                        return 'continue';\n                    }\n\n                    if (elementProto.extendedProperties[methodName]) return 'continue';\n\n                    if (!Utilities.Types.isFunction(proto[methodName])) return 'continue';\n\n                    elementProto[methodName] = invokeMethod(proto[methodName], methodName);\n                };\n\n                for (var index in methods) {\n                    var _ret8 = _loop7(index);\n\n                    if (_ret8 === 'continue') continue;\n                }\n            }\n\n            /** Defines the custom element's properties. The function is called once when an element's script file is referred. */\n\n        }, {\n            key: 'defineElementProperties',\n            value: function defineElementProperties(properties) {\n                if (!properties) {\n                    return;\n                }\n\n                var that = this;\n                var proto = that.constructor.prototype;\n                var propertyNames = Object.keys(properties);\n                var defaultProperties = that.getStaticMember('properties');\n\n                Object.assign(proto.extendedProperties, properties);\n\n                /* Called when a property is set. Updates the property and synchronizes with the attribute. */\n                var updateProperty = function updateProperty(context, property, value) {\n                    var that = context;\n\n                    if (property.readOnly) {\n                        return;\n                    }\n\n                    /* Raises an exception when the new value is not in the allowedValues list. */\n                    if (property.allowedValues) {\n                        var isValidValue = false;\n\n                        for (var i = 0; i < property.allowedValues.length; i++) {\n                            if (property.allowedValues[i] === value) {\n                                isValidValue = true;\n                                break;\n                            }\n                        }\n\n                        if (!isValidValue) {\n                            var allowedValuesString = JSON.stringify(property.allowedValues).replace(/\\[|\\]/gi, '').replace(',', ', ').replace(/\"/gi, '\\'');\n                            var actualValueString = '\\'' + value + '\\'';\n                            var localizedError = that.localize('propertyInvalidValue', { name: property.name, actualValue: actualValueString, value: allowedValuesString });\n\n                            that.log(localizedError);\n                            return;\n                        }\n                    }\n\n                    var propertyName = property.name;\n                    var oldValue = that._properties[propertyName].value;\n\n                    /* Calls the property's validator, if defined. */\n                    if (property.validator) {\n                        if (that[property.validator]) {\n                            var _context = that.context;\n\n                            that.context = that;\n\n                            var validatedResult = that[property.validator](oldValue, value);\n\n                            if (validatedResult !== undefined) {\n                                value = validatedResult;\n                            }\n\n                            that.context = _context;\n                        }\n                    }\n\n                    if (oldValue === value) {\n                        return;\n                    }\n\n                    if (!property.hasOwnProperty('type')) {\n                        var _localizedError2 = that.localize('propertyUnknownType', { name: propertyName });\n                        that.log(_localizedError2);\n                    }\n\n                    if (property.type === 'array' && JSON.stringify(oldValue) === JSON.stringify(value)) {\n                        return;\n                    }\n\n                    if (value !== undefined && value !== null && property.type !== 'any' && property.type !== Utilities.Types.getType(value) && !property.validator || value === null && !property.nullable) {\n                        var throwError = true;\n\n                        if (property.type === 'object' && Utilities.Types.getType(value) === 'array') {\n                            throwError = false;\n                        }\n\n                        if (Utilities.Types.getType(value) === 'number') {\n                            var types = ['integer', 'int', 'float'];\n                            var propertyIndex = types.findIndex(function (type) {\n                                return type === property.type;\n                            });\n\n                            if (propertyIndex >= 0) {\n                                throwError = false;\n                            }\n                        }\n\n                        if (throwError) {\n                            var _localizedError3 = that.localize('propertyInvalidValueType', { name: propertyName, actualType: Utilities.Types.getType(value), type: property.type });\n                            that.log(_localizedError3);\n                            return;\n                        }\n                    }\n\n                    property.isUpdating = true;\n                    that._properties[propertyName].value = value;\n\n                    /* Updates the element's attribute value. */\n                    if (!property.isUpdatingFromAttribute && property.reflectToAttribute) {\n                        that.$.setAttributeValue(property.attributeName, value, property.type);\n                    }\n\n                    /* Calls the element's propertyChangedHandler function when the element is in Ready state and the property is observed. */\n                    var isReady = that.isReady && (!that.ownerElement || that.ownerElement && that.ownerElement.isReady);\n\n                    if (isReady) {\n                        if (that.context !== that) {\n                            /* Setting context to that prevents calling propertyChangedHandler, if the custom element's developer\r\n                             * sets another element property within the propertyChangedHandler. \r\n                            */\n                            var _context2 = that.context;\n\n                            that.context = that;\n                            that.propertyChangedHandler(propertyName, oldValue, value);\n                            that.context = _context2;\n\n                            /* Calls the property's observer, if defined. */\n                            if (property.observer) {\n                                if (that[property.observer]) {\n                                    that.context = that;\n                                    that[property.observer](oldValue, value);\n                                    that.context = document;\n                                }\n                            }\n\n                            if (that._watch && that._watch.properties.indexOf(propertyName) >= 0) {\n                                that._watch.propertyChangedCallback(propertyName, oldValue, value);\n                            }\n                        }\n\n                        /* Dispatch an event when property's notify member is set. */\n                        var notify = property.notify || that.boundProperties[propertyName];\n                        if (notify) {\n                            that.$.fireEvent(property.attributeName + '-changed', { context: that.context, oldValue: oldValue, value: value });\n                            if (that.boundProperties[propertyName]) {\n                                that.updateBoundNodes(propertyName);\n                            }\n                        }\n                    }\n                    property.isUpdating = false;\n                };\n\n                /* Defines element's properties. */\n\n                var _loop8 = function _loop8(i) {\n                    var propertyName = propertyNames[i];\n                    var property = properties[propertyName];\n                    var attributeName = Utilities.Core.toDash(propertyName);\n                    var type = property.type || 'any';\n                    var nullable = type.indexOf('?') >= 0 || type === 'any';\n\n                    if (nullable && type !== 'any') {\n                        property.type = type.substring(0, type.length - 1);\n                    }\n\n                    property.nullable = nullable;\n                    property.attributeName = attributeName.toLowerCase();\n                    property.name = propertyName;\n                    property.reflectToAttribute = property.reflectToAttribute !== undefined ? property.reflectToAttribute : true;\n\n                    if (property.inherit && defaultProperties[propertyName]) {\n                        property.value = defaultProperties[propertyName].value;\n                    }\n\n                    if (property.extend && defaultProperties[propertyName]) {\n                        Utilities.Core.assign(property.value, defaultProperties[propertyName].value);\n                    }\n\n                    if (proto.hasOwnProperty(propertyName)) {\n                        return 'continue';\n                    }\n\n                    Object.defineProperty(proto, propertyName, {\n                        configurable: false,\n                        enumerable: true,\n                        get: function get() {\n                            var that = this;\n\n                            return that._properties[propertyName].value;\n                        },\n                        set: function set(value) {\n                            var that = this;\n\n                            updateProperty(that, that._properties[propertyName], value);\n                        }\n                    });\n                };\n\n                for (var i = 0; i < propertyNames.length; i += 1) {\n                    var _ret9 = _loop8(i);\n\n                    if (_ret9 === 'continue') continue;\n                }\n            }\n        }, {\n            key: 'properties',\n            get: function get() {\n                var that = this;\n\n                if (!that._properties) {\n                    that._properties = [];\n                }\n\n                return that._properties;\n            }\n\n            /**\r\n             * Gets the element's parents.\r\n             *\r\n             * @return {Array<HTMLElement>} - element's parents.\r\n             */\n\n        }, {\n            key: 'parents',\n            get: function get() {\n                var that = this;\n\n                var matched = [],\n                    current = that.parentNode;\n\n                while (current && current.nodeType !== 9) {\n                    if (current instanceof HTMLElement === true) {\n                        matched.push(current);\n                    }\n                    current = current.parentNode;\n                }\n                return matched;\n            }\n        }], [{\n            key: 'properties',\n\n            /**\r\n             * Element's properties.\r\n             *\r\n             * @return {Object} - element's properties.\r\n             */\n            get: function get() {\n                return {\n                    'disabled': {\n                        value: false,\n                        type: 'boolean'\n                    },\n                    'readonly': {\n                        value: false,\n                        type: 'boolean'\n                    },\n                    'rightToLeft': {\n                        value: false,\n                        type: 'boolean'\n                    },\n                    'messages': {\n                        value: {\n                            'en': {\n                                'propertyUnknownType': '\\'{{name}}\\' property is with undefined \\'type\\' member!',\n                                'propertyInvalidValue': 'Invalid \\'{{name}}\\' property value! Actual value: {{actualValue}}, Expected value: {{value}}!',\n                                'propertyInvalidValueType': 'Invalid \\'{{name}}\\' property value type! Actual type: {{actualType}}, Expected type: {{type}}!',\n                                'elementNotInDOM': 'Element does not exist in DOM! Please, add the element to the DOM, before invoking a method.',\n                                'moduleUndefined': 'Module is undefined.',\n                                'missingReference': '{{elementType}}: Missing reference to {{files}}.',\n                                'htmlTemplateNotSuported': '{{elementType}}: Browser doesn\\'t support HTMLTemplate elements.',\n                                'invalidTemplate': '{{elementType}}: \"{{property}}\" property accepts a string that must match the id of an HTMLTemplate element from the DOM.'\n                            }\n                        },\n                        reflectToAttribute: false,\n                        type: 'object'\n                    }\n                };\n            }\n\n            /**\r\n             * Element's requires.\r\n             *\r\n             * @return {Object} - element's required modules.\r\n             */\n\n        }, {\n            key: 'requires',\n            get: function get() {\n                return {};\n            }\n\n            /**\r\n             * Element's listeners.\r\n             *\r\n             * @return {Object} - element's listeners.\r\n             */\n\n        }, {\n            key: 'listeners',\n            get: function get() {\n                return {};\n            }\n\n            /**\r\n             * Element's modules.\r\n             *\r\n             * @return {Array<Module>} - element's modules.\r\n             */\n\n        }, {\n            key: 'modules',\n            get: function get() {\n                return window.JQX.Modules;\n            }\n        }]);\n        return BaseElement;\n    }(HTMLElement);\n\n    var customElements = [];\n    var registeredCallbacks = [];\n    var registeredLoadedCallbacks = [];\n    var isOldChrome = false;\n\n    var chromeAgent = navigator.userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./);\n    if (chromeAgent) {\n        var chromeVersion = parseInt(chromeAgent[2], 10);\n        if (chromeVersion <= 50) {\n            isOldChrome = true;\n        }\n    }\n\n    //const isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\n    var supportsCustomElementsV1 = false; //isChrome && 'customElements' in window;\n    var connectElements = function connectElements() {\n        if (document.readyState !== 'complete') {\n            return;\n        }\n\n        registeredLoadedCallbacks.sort(function (element1, element2) {\n            var indexA = element1.element.parents.length;\n            var indexB = element2.element.parents.length;\n\n            if (indexA < indexB) {\n                return -1;\n            }\n            if (indexA > indexB) {\n                return 1;\n            }\n\n            return 0;\n        });\n\n        for (var i = 0; i < registeredLoadedCallbacks.length; i++) {\n            registeredLoadedCallbacks[i].callback();\n            registeredLoadedCallbacks[i].element.isLoading = false;\n        }\n\n        registeredLoadedCallbacks = [];\n        document.removeEventListener('readystatechange', connectElements);\n    };\n\n    document.addEventListener('readystatechange', connectElements);\n\n    var BaseCustomElement = function (_BaseElement) {\n        babelHelpers.inherits(BaseCustomElement, _BaseElement);\n\n        function BaseCustomElement() {\n            babelHelpers.classCallCheck(this, BaseCustomElement);\n            return babelHelpers.possibleConstructorReturn(this, (BaseCustomElement.__proto__ || Object.getPrototypeOf(BaseCustomElement)).apply(this, arguments));\n        }\n\n        babelHelpers.createClass(BaseCustomElement, [{\n            key: 'createdCallback',\n\n            /** Called when an instance of the custom element is created. */\n            value: function createdCallback() {\n                /*  initialization code goes here. */\n                var that = this;\n\n                that.created();\n            }\n\n            /** Called when an instance of custom element is attached to the DOM. */\n\n        }, {\n            key: 'attachedCallback',\n            value: function attachedCallback() {\n                var that = this;\n\n                if (that.isLoading) {\n                    return;\n                }\n\n                if (document.readyState === 'complete' /*&& !ElementRegistry.isRegistering */) {\n                        that.setup();\n                    } else {\n                    that.isLoading = true;\n                    registeredLoadedCallbacks.push({\n                        element: this, callback: function () {\n                            if (this.isReady) {\n                                return;\n                            }\n\n                            this.setup();\n                        }.bind(that)\n                    });\n                }\n            }\n\n            /** Called when an instance of custom element is detached from the DOM. V0 spec. */\n\n        }, {\n            key: 'detachedCallback',\n            value: function detachedCallback() {\n                var that = this;\n\n                if (!that.isAttached) {\n                    return;\n                }\n\n                that.detached();\n            }\n        }]);\n        return BaseCustomElement;\n    }(BaseElement);\n\n    var BaseCustomElementV1 = function (_BaseElement2) {\n        babelHelpers.inherits(BaseCustomElementV1, _BaseElement2);\n        babelHelpers.createClass(BaseCustomElementV1, [{\n            key: 'scopedStyle',\n            value: function scopedStyle() {\n                var scopedStyle = '\\n                :host {\\n                    display: block;\\n                    overflow: hidden;\\n                }\\n                :host, :host > *:first-child, :host > * {\\n                    box-sizing: border-box;\\n                }\\n                :host[disabled] {\\n                    opacity: 0.55;\\n                    cursor: default;\\n                }\\n                .jqx-container {\\n                    box-sizing: border-box;\\n                    font-family: Arial, sans-serif;\\n                    font-size: inherit;\\n                    display: block;\\n                    width: 100%;\\n                    height: 100%;\\n                    outline: none;\\n                    margin: 0;\\n                    padding: 0;\\n                }\\n            ';\n                return scopedStyle;\n            }\n        }, {\n            key: 'addExternalStylesheet',\n            value: function addExternalStylesheet(path) {\n                var that = this;\n\n                if (!that.shadowRoot || !path) {\n                    return;\n                }\n\n                var link = document.createElement('link');\n\n                link.rel = 'stylesheet';\n                link.type = 'text/css';\n                link.href = path;\n\n                that.shadowRoot.insertBefore(link, that.shadowRoot.firstChild);\n            }\n        }, {\n            key: 'attributeChanged',\n            value: function attributeChanged(name, oldValue, newValue) {\n                if (name === 'external-style') {\n                    this.externalStyle = newValue;\n                }\n            }\n        }, {\n            key: 'attributeChangedCallback',\n            value: function attributeChangedCallback(name, oldValue, newValue) {\n                var that = this;\n\n                if (!that.isReady) {\n                    return;\n                }\n\n                babelHelpers.get(BaseCustomElementV1.prototype.__proto__ || Object.getPrototypeOf(BaseCustomElementV1.prototype), 'attributeChangedCallback', this).call(this, name, oldValue, newValue);\n            }\n            /** Called when an instance of the custom element is created. */\n\n        }, {\n            key: 'externalStyle',\n            get: function get() {\n                return this._externalStylePath;\n            },\n            set: function set(path) {\n                this._externalStylePath = path;\n            }\n        }], [{\n            key: 'observedAttributes',\n            get: function get() {\n                var that = this;\n                var observedAttributes = ['external-style'];\n\n                for (var _propertyName2 in that.prototype.extendedProperties) {\n                    var propertyConfig = that.prototype.extendedProperties[_propertyName2];\n\n                    observedAttributes.push(propertyConfig.attributeName);\n                }\n\n                return observedAttributes;\n            }\n        }]);\n\n        function BaseCustomElementV1() {\n            babelHelpers.classCallCheck(this, BaseCustomElementV1);\n\n            /*  initialization code goes here. */\n            var _this5 = babelHelpers.possibleConstructorReturn(this, (BaseCustomElementV1.__proto__ || Object.getPrototypeOf(BaseCustomElementV1)).call(this));\n\n            var that = _this5;\n\n            that._externalStylePath = '';\n            // Uncomment when scopedStyle is implemented in all elements.\n            //that.attachShadow({ mode: 'open' });\n            that.created();\n            return _this5;\n        }\n\n        babelHelpers.createClass(BaseCustomElementV1, [{\n            key: 'connect',\n            value: function connect() {\n                var that = this;\n\n                var isReady = that.isReady;\n                var templateStyle = void 0;\n\n                if (!isReady) {\n                    if (that.children.length > 0 && that.children[0] instanceof HTMLStyleElement) {\n                        templateStyle = that.children[0];\n                        that.removeChild(templateStyle);\n                    }\n                }\n\n                that.setup();\n\n                if (!isReady && that.shadowRoot) {\n                    if (templateStyle) {\n                        that.shadowRoot.insertBefore(templateStyle, that.shadowRoot.firstChild);\n                    }\n\n                    that.addExternalStylesheet(that._externalStylePath);\n\n                    var scopedStyle = document.createElement('style');\n                    scopedStyle.innerHTML = that.scopedStyle();\n                    that.shadowRoot.insertBefore(scopedStyle, that.shadowRoot.firstChild);\n                }\n            }\n            /** Called when an instance of custom element is attached to the DOM. */\n\n        }, {\n            key: 'connectedCallback',\n            value: function connectedCallback() {\n                var that = this;\n\n                if (document.readyState !== 'loading') {\n                    that.connect();\n                } else {\n                    registeredLoadedCallbacks.push(function () {\n                        if (this.isReady) {\n                            return;\n                        }\n\n                        this.connect();\n                    }.bind(that));\n                }\n            }\n\n            /** Called when an instance of custom element is attached to the DOM. */\n\n        }, {\n            key: 'adoptedCallback',\n            value: function adoptedCallback() {\n                var that = this;\n\n                that.setup();\n            }\n        }, {\n            key: 'appendTemplate',\n            value: function appendTemplate(template) {\n                var that = this;\n\n                if (that.shadowRoot) {\n                    that.shadowRoot.appendChild(template);\n                } else {\n                    that.appendChild(template);\n                }\n            }\n        }]);\n        return BaseCustomElementV1;\n    }(BaseElement);\n\n    /**\r\n     * This is a base class for registration of custom elements.\r\n     */\n\n\n    var ElementRegistry = function () {\n        function ElementRegistry() {\n            babelHelpers.classCallCheck(this, ElementRegistry);\n        }\n\n        babelHelpers.createClass(ElementRegistry, null, [{\n            key: 'register',\n\n            /**\r\n             * Called by each custom element to register it. \r\n               @param {String} - tag name.\r\n               @param {Object} - element's object like Button, NumericTextBox, etc.\r\n             */\n            value: function register(tagName, element) {\n                var proto = element.prototype;\n                var elementName = Core.toCamelCase(tagName).replace(/[a-z]+/, '');\n\n                if (customElements[tagName]) {\n                    return;\n                }\n\n                customElements[tagName] = window.JQX[elementName] = element;\n                proto.elementName = elementName;\n                proto.defineElement();\n                if (registeredCallbacks[tagName]) {\n                    registeredCallbacks[tagName](proto);\n                }\n\n                /** Use customElements v1 spec, if it is supported. */\n                if (supportsCustomElementsV1) {\n                    window.customElements.define(tagName, element);\n                    return;\n                }\n\n                document.registerElement(tagName, element);\n            }\n        }, {\n            key: 'registerElements',\n            value: function registerElements() {\n                var that = this;\n\n                if (!that.toRegister) {\n                    return;\n                }\n\n                that.isRegistering = true;\n\n                for (var i = that.toRegister.length - 1; i >= 0; i--) {\n                    var toRegisterItem = that.toRegister[i];\n\n                    that.register(toRegisterItem.tagName, toRegisterItem.element);\n                }\n\n                that.isRegistering = false;\n            }\n\n            /**\r\n             * Returns the element's object.\r\n             * @param {String} - tag name.\r\n             * @return {Object} - custom element's object.\r\n             */\n\n        }, {\n            key: 'get',\n            value: function get(tagName) {\n                if (customElements[tagName]) {\n                    return customElements[tagName];\n                }\n                return undefined;\n            }\n\n            /**\r\n             * Determines whether the element is registered.\r\n             * @param {String} - tag name.\r\n             * @param {Function} - the callback function which is called when the element is registered.\r\n             */\n\n        }, {\n            key: 'whenRegistered',\n            value: function whenRegistered(tagName, callback) {\n                if (!tagName) {\n                    throw new Error('Syntax Error: Invalid tag name');\n                }\n\n                var that = this;\n                var existingCallback = registeredCallbacks[tagName];\n                var element = that.get(tagName);\n                var modulesLength = element ? element.modules.length : 3;\n\n                try {\n                    if (!existingCallback && !element) {\n                        registeredCallbacks[tagName] = function (proto) {\n                            try {\n                                callback(proto);\n                            } catch (error) {\n                                var errorMessage = error instanceof Error ? error.message : error.toString();\n\n                                console.log(errorMessage);\n                            }\n                        };\n                    } else if (!existingCallback && element) {\n                        callback(element.prototype);\n                        registeredCallbacks[tagName] = undefined;\n                    } else if (existingCallback && !element) {\n                        registeredCallbacks[tagName] = function (proto) {\n                            existingCallback(proto);\n                            callback(proto);\n                        };\n                    } else if (existingCallback && element) {\n                        existingCallback(element.proto);\n                        callback(element.proto);\n                        registeredCallbacks[tagName] = undefined;\n                    }\n                } catch (error) {\n                    var errorMessage = error instanceof Error ? error.message : error.toString();\n\n                    console.log(errorMessage);\n                }\n\n                if (element && modulesLength !== element.prototype.modules.length) {\n                    var elements = document.querySelectorAll(tagName);\n\n                    for (var j = 0; j < elements.length; j++) {\n                        var _element = elements[j];\n\n                        if (_element.isCreated) {\n                            _element._initElement();\n                        }\n                    }\n                }\n            }\n        }]);\n        return ElementRegistry;\n    }();\n\n    ElementRegistry.lazyRegister = false;\n\n    /*\r\n     * Defines the 'JQX' namespace.\r\n     * @param {String} - the tag's name.\r\n     * @param {Object} - the custom element.\r\n     */\n    window.JQX = function (tagName, element) {\n        if (ElementRegistry.lazyRegister) {\n            if (!ElementRegistry.toRegister) {\n                ElementRegistry.toRegister = [];\n            }\n\n            var elementName = Core.toCamelCase(tagName).replace(/[a-z]+/, '');\n            window.JQX[elementName] = element;\n\n            ElementRegistry.toRegister.push({ tagName: tagName, element: element });\n            return;\n        }\n\n        ElementRegistry.register(tagName, element);\n    };\n\n    Object.assign(window.JQX, {\n        Elements: ElementRegistry,\n        Modules: [ErrorModule, LocalizationModule, BindingModule],\n        BaseElement: supportsCustomElementsV1 ? BaseCustomElementV1 : BaseCustomElement,\n        Utilities: Utilities,\n        Version: '1.6.0'\n    });\n\n    /**\r\n    * Content element.\r\n    */\n    window.JQX('jqx-content-element', function (_window$JQX$BaseEleme) {\n        babelHelpers.inherits(ContentElement, _window$JQX$BaseEleme);\n\n        function ContentElement() {\n            babelHelpers.classCallCheck(this, ContentElement);\n            return babelHelpers.possibleConstructorReturn(this, (ContentElement.__proto__ || Object.getPrototypeOf(ContentElement)).apply(this, arguments));\n        }\n\n        babelHelpers.createClass(ContentElement, [{\n            key: 'template',\n\n\n            /** Content Element's template. */\n            value: function template() {\n                return '<div inner-h-t-m-l=\\'[[innerHTML]]\\'></div>';\n            }\n        }, {\n            key: 'ready',\n            value: function ready() {\n                babelHelpers.get(ContentElement.prototype.__proto__ || Object.getPrototypeOf(ContentElement.prototype), 'ready', this).call(this);\n\n                var that = this;\n                that.applyContent();\n            }\n        }, {\n            key: 'clearContent',\n            value: function clearContent() {\n                var that = this;\n\n                while (that.$.content.firstChild) {\n                    that.$.content.removeChild(that.$.content.firstChild);\n                }\n            }\n        }, {\n            key: 'applyContent',\n            value: function applyContent() {\n                var that = this;\n\n                if (that.content === undefined) {\n                    that.content = that.$.content;\n                    return;\n                }\n\n                if (that.content === '' || that.content === null) {\n                    that.clearContent();\n                    return;\n                }\n\n                if (that.content instanceof HTMLElement) {\n                    that.clearContent();\n                    that.$.content.appendChild(that.content);\n                    return;\n                }\n\n                var fragment = document.createDocumentFragment();\n\n                /* Create a wrapper DIV tag. */\n                var tmpElement = document.createElement('div');\n                fragment.appendChild(tmpElement);\n\n                /* Fill the nodes array with the wrapper's childNodes. */\n                if (that.content instanceof HTMLElement) {\n                    tmpElement.appendChild(that.content);\n                } else {\n                    tmpElement.innerHTML = that.content;\n                }\n\n                var nodes = tmpElement.childNodes;\n\n                /* Remove the wrapper DIV tag. */\n                tmpElement.parentNode.removeChild(tmpElement);\n\n                /* Add the nodes to the fragment. */\n                while (nodes.length) {\n                    fragment.appendChild(nodes[0]);\n                }\n\n                that.clearContent();\n                that.$.content.appendChild(fragment);\n            }\n        }, {\n            key: 'propertyChangedHandler',\n            value: function propertyChangedHandler(propertyName, oldValue, newValue) {\n                babelHelpers.get(ContentElement.prototype.__proto__ || Object.getPrototypeOf(ContentElement.prototype), 'propertyChangedHandler', this).call(this, propertyName, oldValue, newValue);\n\n                var that = this;\n\n                if (oldValue === newValue) {\n                    return;\n                }\n\n                if (propertyName === 'innerHTML') {\n                    that.content = newValue;\n                    that.applyContent();\n                }\n\n                if (propertyName === 'content') {\n                    that.applyContent();\n                }\n            }\n        }], [{\n            key: 'properties',\n\n            // Button's properties.\n            get: function get() {\n                return {\n                    'content': {\n                        type: 'any',\n                        reflectToAttribute: false\n                    },\n                    'innerHTML': {\n                        type: 'string',\n                        reflectToAttribute: false\n                    }\n                };\n            }\n        }]);\n        return ContentElement;\n    }(window.JQX.BaseElement));\n})();"]}